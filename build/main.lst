ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MX_GPIO_Init,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	MX_GPIO_Init:
  25              	.LFB858:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** #include <stdio.h>
  28:Src/main.c    **** #include <string.h>
  29:Src/main.c    **** 
  30:Src/main.c    **** /* USER CODE END Includes */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 2


  33:Src/main.c    **** /* USER CODE BEGIN PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* USER CODE END PTD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN PD */
  39:Src/main.c    **** /* USER CODE END PD */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  42:Src/main.c    **** /* USER CODE BEGIN PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE END PM */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  47:Src/main.c    **** 
  48:Src/main.c    **** TIM_HandleTypeDef htim2;
  49:Src/main.c    **** 
  50:Src/main.c    **** UART_HandleTypeDef huart4;
  51:Src/main.c    **** UART_HandleTypeDef huart7;
  52:Src/main.c    **** DMA_HandleTypeDef hdma_uart7_rx;
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PV */
  55:Src/main.c    **** 
  56:Src/main.c    **** int count1 = 0;
  57:Src/main.c    **** int led_count = 0;
  58:Src/main.c    **** int msg_rec_count = 0;
  59:Src/main.c    **** 
  60:Src/main.c    **** int time[5]; // array to store microsecond counts
  61:Src/main.c    **** 
  62:Src/main.c    **** HAL_StatusTypeDef ret = HAL_ERROR; //Variable to check if the command is sent correctly
  63:Src/main.c    **** uint8_t buff[50];
  64:Src/main.c    **** uint8_t AHRS_buff[54];
  65:Src/main.c    **** 
  66:Src/main.c    **** const uint8_t header[] = {0x54, 0xFA, 0xFF, 0x32, 0x31};
  67:Src/main.c    **** uint8_t req_data[] = {250, 01, 52, 00, 203};
  68:Src/main.c    **** uint8_t go_to_meas[] = {250U, 255U, 16U, 00U, 241U};
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE END PV */
  71:Src/main.c    **** 
  72:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  73:Src/main.c    **** void SystemClock_Config(void);
  74:Src/main.c    **** static void MX_GPIO_Init(void);
  75:Src/main.c    **** static void MX_DMA_Init(void);
  76:Src/main.c    **** static void MX_TIM1_Init(void);
  77:Src/main.c    **** static void MX_TIM2_Init(void);
  78:Src/main.c    **** static void MX_UART4_Init(void);
  79:Src/main.c    **** static void MX_UART7_Init(void);
  80:Src/main.c    **** /* USER CODE BEGIN PFP */
  81:Src/main.c    **** 
  82:Src/main.c    **** /* USER CODE END PFP */
  83:Src/main.c    **** 
  84:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  85:Src/main.c    **** /* USER CODE BEGIN 0 */
  86:Src/main.c    **** 
  87:Src/main.c    **** /* USER CODE END 0 */
  88:Src/main.c    **** 
  89:Src/main.c    **** /**
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 3


  90:Src/main.c    ****   * @brief  The application entry point.
  91:Src/main.c    ****   * @retval int
  92:Src/main.c    ****   */
  93:Src/main.c    **** int main(void)
  94:Src/main.c    **** {
  95:Src/main.c    ****   /* USER CODE BEGIN 1 */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* USER CODE END 1 */
  98:Src/main.c    ****   
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 103:Src/main.c    ****   HAL_Init();
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE BEGIN Init */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE END Init */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Configure the system clock */
 110:Src/main.c    ****   SystemClock_Config();
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* USER CODE END SysInit */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* Initialize all configured peripherals */
 117:Src/main.c    ****   MX_GPIO_Init();
 118:Src/main.c    ****   MX_DMA_Init();
 119:Src/main.c    ****   MX_TIM1_Init();
 120:Src/main.c    ****   MX_TIM2_Init();
 121:Src/main.c    ****   MX_UART4_Init();
 122:Src/main.c    ****   MX_UART7_Init();
 123:Src/main.c    ****   /* USER CODE BEGIN 2 */
 124:Src/main.c    **** 
 125:Src/main.c    ****   HAL_Delay(1000);
 126:Src/main.c    **** 
 127:Src/main.c    ****   LL_TIM_EnableCounter(TIM1);
 128:Src/main.c    ****   LL_TIM_SetCounter(TIM1, 0);
 129:Src/main.c    **** 
 130:Src/main.c    ****   HAL_Delay(1000);
 131:Src/main.c    **** 
 132:Src/main.c    ****   //AHRS initialization sending the command to Go To Measurements
 133:Src/main.c    ****   //ret = HAL_UART_Transmit(&huart7, go_to_meas, 5, HAL_MAX_DELAY);
 134:Src/main.c    ****   ret = HAL_UART_Transmit(&huart7, go_to_meas, 5, HAL_MAX_DELAY);
 135:Src/main.c    **** 
 136:Src/main.c    ****   if (ret == HAL_OK){
 137:Src/main.c    ****     sprintf((char*)buff, "GoToMeas OK!");
 138:Src/main.c    ****   }  
 139:Src/main.c    **** 
 140:Src/main.c    ****   HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 141:Src/main.c    **** 
 142:Src/main.c    ****   HAL_Delay(1000);
 143:Src/main.c    **** 
 144:Src/main.c    ****   HAL_UART_Receive_DMA(&huart7, AHRS_buff, 4); // start the DMA receive from uart7, when rx complet
 145:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2); // Start the interrupt for timer 2
 146:Src/main.c    **** 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 4


 147:Src/main.c    ****   /* USER CODE END 2 */
 148:Src/main.c    ****  
 149:Src/main.c    ****  
 150:Src/main.c    **** 
 151:Src/main.c    ****   /* Infinite loop */
 152:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 153:Src/main.c    ****   while (1)
 154:Src/main.c    ****   {
 155:Src/main.c    ****     /* USER CODE END WHILE */
 156:Src/main.c    **** 
 157:Src/main.c    ****     /* USER CODE BEGIN 3 */
 158:Src/main.c    ****   }
 159:Src/main.c    ****   /* USER CODE END 3 */
 160:Src/main.c    **** }
 161:Src/main.c    **** 
 162:Src/main.c    **** /**
 163:Src/main.c    ****   * @brief System Clock Configuration
 164:Src/main.c    ****   * @retval None
 165:Src/main.c    ****   */
 166:Src/main.c    **** void SystemClock_Config(void)
 167:Src/main.c    **** {
 168:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 169:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 170:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 171:Src/main.c    **** 
 172:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 173:Src/main.c    ****   */
 174:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 175:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 176:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 177:Src/main.c    ****   */
 178:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 179:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 180:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 181:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 182:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 183:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 184:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 96;
 185:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 186:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 187:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 188:Src/main.c    ****   {
 189:Src/main.c    ****     Error_Handler();
 190:Src/main.c    ****   }
 191:Src/main.c    ****   /** Activate the Over-Drive mode 
 192:Src/main.c    ****   */
 193:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 194:Src/main.c    ****   {
 195:Src/main.c    ****     Error_Handler();
 196:Src/main.c    ****   }
 197:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 198:Src/main.c    ****   */
 199:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 200:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 201:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 202:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 203:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 5


 204:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 205:Src/main.c    **** 
 206:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 207:Src/main.c    ****   {
 208:Src/main.c    ****     Error_Handler();
 209:Src/main.c    ****   }
 210:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_UART4|RCC_PERIPHCLK_UART7;
 211:Src/main.c    ****   PeriphClkInitStruct.Uart4ClockSelection = RCC_UART4CLKSOURCE_PCLK1;
 212:Src/main.c    ****   PeriphClkInitStruct.Uart7ClockSelection = RCC_UART7CLKSOURCE_PCLK1;
 213:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 214:Src/main.c    ****   {
 215:Src/main.c    ****     Error_Handler();
 216:Src/main.c    ****   }
 217:Src/main.c    **** }
 218:Src/main.c    **** 
 219:Src/main.c    **** /**
 220:Src/main.c    ****   * @brief TIM1 Initialization Function
 221:Src/main.c    ****   * @param None
 222:Src/main.c    ****   * @retval None
 223:Src/main.c    ****   */
 224:Src/main.c    **** static void MX_TIM1_Init(void)
 225:Src/main.c    **** {
 226:Src/main.c    **** 
 227:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 0 */
 228:Src/main.c    **** 
 229:Src/main.c    ****   /* USER CODE END TIM1_Init 0 */
 230:Src/main.c    **** 
 231:Src/main.c    ****   LL_TIM_InitTypeDef TIM_InitStruct = {0};
 232:Src/main.c    **** 
 233:Src/main.c    ****   /* Peripheral clock enable */
 234:Src/main.c    ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_TIM1);
 235:Src/main.c    **** 
 236:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 1 */
 237:Src/main.c    **** 
 238:Src/main.c    ****   /* USER CODE END TIM1_Init 1 */
 239:Src/main.c    ****   TIM_InitStruct.Prescaler = 95;
 240:Src/main.c    ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 241:Src/main.c    ****   TIM_InitStruct.Autoreload = 65000;
 242:Src/main.c    ****   TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
 243:Src/main.c    ****   TIM_InitStruct.RepetitionCounter = 0;
 244:Src/main.c    ****   LL_TIM_Init(TIM1, &TIM_InitStruct);
 245:Src/main.c    ****   LL_TIM_DisableARRPreload(TIM1);
 246:Src/main.c    ****   LL_TIM_SetClockSource(TIM1, LL_TIM_CLOCKSOURCE_INTERNAL);
 247:Src/main.c    ****   LL_TIM_SetTriggerOutput(TIM1, LL_TIM_TRGO_RESET);
 248:Src/main.c    ****   LL_TIM_SetTriggerOutput2(TIM1, LL_TIM_TRGO2_RESET);
 249:Src/main.c    ****   LL_TIM_DisableMasterSlaveMode(TIM1);
 250:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 2 */
 251:Src/main.c    **** 
 252:Src/main.c    ****   /* USER CODE END TIM1_Init 2 */
 253:Src/main.c    **** 
 254:Src/main.c    **** }
 255:Src/main.c    **** 
 256:Src/main.c    **** /**
 257:Src/main.c    ****   * @brief TIM2 Initialization Function
 258:Src/main.c    ****   * @param None
 259:Src/main.c    ****   * @retval None
 260:Src/main.c    ****   */
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 6


 261:Src/main.c    **** static void MX_TIM2_Init(void)
 262:Src/main.c    **** {
 263:Src/main.c    **** 
 264:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 265:Src/main.c    **** 
 266:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 267:Src/main.c    **** 
 268:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 269:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 270:Src/main.c    **** 
 271:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 272:Src/main.c    **** 
 273:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 274:Src/main.c    ****   htim2.Instance = TIM2;
 275:Src/main.c    ****   htim2.Init.Prescaler = 95;
 276:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 277:Src/main.c    ****   htim2.Init.Period = 9999;
 278:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 279:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 280:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 281:Src/main.c    ****   {
 282:Src/main.c    ****     Error_Handler();
 283:Src/main.c    ****   }
 284:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 285:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 286:Src/main.c    ****   {
 287:Src/main.c    ****     Error_Handler();
 288:Src/main.c    ****   }
 289:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 290:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 291:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 292:Src/main.c    ****   {
 293:Src/main.c    ****     Error_Handler();
 294:Src/main.c    ****   }
 295:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 296:Src/main.c    **** 
 297:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 298:Src/main.c    **** 
 299:Src/main.c    **** }
 300:Src/main.c    **** 
 301:Src/main.c    **** /**
 302:Src/main.c    ****   * @brief UART4 Initialization Function
 303:Src/main.c    ****   * @param None
 304:Src/main.c    ****   * @retval None
 305:Src/main.c    ****   */
 306:Src/main.c    **** static void MX_UART4_Init(void)
 307:Src/main.c    **** {
 308:Src/main.c    **** 
 309:Src/main.c    ****   /* USER CODE BEGIN UART4_Init 0 */
 310:Src/main.c    **** 
 311:Src/main.c    ****   /* USER CODE END UART4_Init 0 */
 312:Src/main.c    **** 
 313:Src/main.c    ****   /* USER CODE BEGIN UART4_Init 1 */
 314:Src/main.c    **** 
 315:Src/main.c    ****   /* USER CODE END UART4_Init 1 */
 316:Src/main.c    ****   huart4.Instance = UART4;
 317:Src/main.c    ****   huart4.Init.BaudRate = 115200;
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 7


 318:Src/main.c    ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 319:Src/main.c    ****   huart4.Init.StopBits = UART_STOPBITS_1;
 320:Src/main.c    ****   huart4.Init.Parity = UART_PARITY_NONE;
 321:Src/main.c    ****   huart4.Init.Mode = UART_MODE_TX_RX;
 322:Src/main.c    ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 323:Src/main.c    ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 324:Src/main.c    ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 325:Src/main.c    ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 326:Src/main.c    ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 327:Src/main.c    ****   {
 328:Src/main.c    ****     Error_Handler();
 329:Src/main.c    ****   }
 330:Src/main.c    ****   /* USER CODE BEGIN UART4_Init 2 */
 331:Src/main.c    **** 
 332:Src/main.c    ****   /* USER CODE END UART4_Init 2 */
 333:Src/main.c    **** 
 334:Src/main.c    **** }
 335:Src/main.c    **** 
 336:Src/main.c    **** /**
 337:Src/main.c    ****   * @brief UART7 Initialization Function
 338:Src/main.c    ****   * @param None
 339:Src/main.c    ****   * @retval None
 340:Src/main.c    ****   */
 341:Src/main.c    **** static void MX_UART7_Init(void)
 342:Src/main.c    **** {
 343:Src/main.c    **** 
 344:Src/main.c    ****   /* USER CODE BEGIN UART7_Init 0 */
 345:Src/main.c    **** 
 346:Src/main.c    ****   /* USER CODE END UART7_Init 0 */
 347:Src/main.c    **** 
 348:Src/main.c    ****   /* USER CODE BEGIN UART7_Init 1 */
 349:Src/main.c    **** 
 350:Src/main.c    ****   /* USER CODE END UART7_Init 1 */
 351:Src/main.c    ****   huart7.Instance = UART7;
 352:Src/main.c    ****   huart7.Init.BaudRate = 115200;
 353:Src/main.c    ****   huart7.Init.WordLength = UART_WORDLENGTH_8B;
 354:Src/main.c    ****   huart7.Init.StopBits = UART_STOPBITS_1;
 355:Src/main.c    ****   huart7.Init.Parity = UART_PARITY_NONE;
 356:Src/main.c    ****   huart7.Init.Mode = UART_MODE_TX_RX;
 357:Src/main.c    ****   huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 358:Src/main.c    ****   huart7.Init.OverSampling = UART_OVERSAMPLING_16;
 359:Src/main.c    ****   huart7.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 360:Src/main.c    ****   huart7.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 361:Src/main.c    ****   if (HAL_UART_Init(&huart7) != HAL_OK)
 362:Src/main.c    ****   {
 363:Src/main.c    ****     Error_Handler();
 364:Src/main.c    ****   }
 365:Src/main.c    ****   /* USER CODE BEGIN UART7_Init 2 */
 366:Src/main.c    **** 
 367:Src/main.c    ****   /* USER CODE END UART7_Init 2 */
 368:Src/main.c    **** 
 369:Src/main.c    **** }
 370:Src/main.c    **** 
 371:Src/main.c    **** /** 
 372:Src/main.c    ****   * Enable DMA controller clock
 373:Src/main.c    ****   */
 374:Src/main.c    **** static void MX_DMA_Init(void) 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 8


 375:Src/main.c    **** {
 376:Src/main.c    **** 
 377:Src/main.c    ****   /* DMA controller clock enable */
 378:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 379:Src/main.c    **** 
 380:Src/main.c    ****   /* DMA interrupt init */
 381:Src/main.c    ****   /* DMA1_Stream3_IRQn interrupt configuration */
 382:Src/main.c    ****   HAL_NVIC_SetPriority(DMA1_Stream3_IRQn, 0, 0);
 383:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
 384:Src/main.c    **** 
 385:Src/main.c    **** }
 386:Src/main.c    **** 
 387:Src/main.c    **** /**
 388:Src/main.c    ****   * @brief GPIO Initialization Function
 389:Src/main.c    ****   * @param None
 390:Src/main.c    ****   * @retval None
 391:Src/main.c    ****   */
 392:Src/main.c    **** static void MX_GPIO_Init(void)
 393:Src/main.c    **** {
  27              		.loc 1 393 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 394:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 394 3 view .LVU1
  41              		.loc 1 394 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0394     		str	r4, [sp, #12]
  44 0008 0494     		str	r4, [sp, #16]
  45 000a 0594     		str	r4, [sp, #20]
  46 000c 0694     		str	r4, [sp, #24]
  47 000e 0794     		str	r4, [sp, #28]
 395:Src/main.c    **** 
 396:Src/main.c    ****   /* GPIO Ports Clock Enable */
 397:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  48              		.loc 1 397 3 is_stmt 1 view .LVU3
  49              	.LBB22:
  50              		.loc 1 397 3 view .LVU4
  51              		.loc 1 397 3 view .LVU5
  52 0010 164B     		ldr	r3, .L3
  53 0012 1A6B     		ldr	r2, [r3, #48]
  54 0014 42F01002 		orr	r2, r2, #16
  55 0018 1A63     		str	r2, [r3, #48]
  56              		.loc 1 397 3 view .LVU6
  57 001a 1A6B     		ldr	r2, [r3, #48]
  58 001c 02F01002 		and	r2, r2, #16
  59 0020 0092     		str	r2, [sp]
  60              		.loc 1 397 3 view .LVU7
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 9


  61 0022 009A     		ldr	r2, [sp]
  62              	.LBE22:
  63              		.loc 1 397 3 view .LVU8
 398:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  64              		.loc 1 398 3 view .LVU9
  65              	.LBB23:
  66              		.loc 1 398 3 view .LVU10
  67              		.loc 1 398 3 view .LVU11
  68 0024 1A6B     		ldr	r2, [r3, #48]
  69 0026 42F08002 		orr	r2, r2, #128
  70 002a 1A63     		str	r2, [r3, #48]
  71              		.loc 1 398 3 view .LVU12
  72 002c 1A6B     		ldr	r2, [r3, #48]
  73 002e 02F08002 		and	r2, r2, #128
  74 0032 0192     		str	r2, [sp, #4]
  75              		.loc 1 398 3 view .LVU13
  76 0034 019A     		ldr	r2, [sp, #4]
  77              	.LBE23:
  78              		.loc 1 398 3 view .LVU14
 399:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  79              		.loc 1 399 3 view .LVU15
  80              	.LBB24:
  81              		.loc 1 399 3 view .LVU16
  82              		.loc 1 399 3 view .LVU17
  83 0036 1A6B     		ldr	r2, [r3, #48]
  84 0038 42F00102 		orr	r2, r2, #1
  85 003c 1A63     		str	r2, [r3, #48]
  86              		.loc 1 399 3 view .LVU18
  87 003e 1B6B     		ldr	r3, [r3, #48]
  88 0040 03F00103 		and	r3, r3, #1
  89 0044 0293     		str	r3, [sp, #8]
  90              		.loc 1 399 3 view .LVU19
  91 0046 029B     		ldr	r3, [sp, #8]
  92              	.LBE24:
  93              		.loc 1 399 3 view .LVU20
 400:Src/main.c    **** 
 401:Src/main.c    ****   /*Configure GPIO pin Output Level */
 402:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_RESET);
  94              		.loc 1 402 3 view .LVU21
  95 0048 094D     		ldr	r5, .L3+4
  96 004a 2246     		mov	r2, r4
  97 004c 0421     		movs	r1, #4
  98 004e 2846     		mov	r0, r5
  99 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 100              	.LVL0:
 403:Src/main.c    **** 
 404:Src/main.c    ****   /*Configure GPIO pin : PE2 */
 405:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 101              		.loc 1 405 3 view .LVU22
 102              		.loc 1 405 23 is_stmt 0 view .LVU23
 103 0054 0423     		movs	r3, #4
 104 0056 0393     		str	r3, [sp, #12]
 406:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 105              		.loc 1 406 3 is_stmt 1 view .LVU24
 106              		.loc 1 406 24 is_stmt 0 view .LVU25
 107 0058 0123     		movs	r3, #1
 108 005a 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 10


 407:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 109              		.loc 1 407 3 is_stmt 1 view .LVU26
 110              		.loc 1 407 24 is_stmt 0 view .LVU27
 111 005c 0594     		str	r4, [sp, #20]
 408:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 112              		.loc 1 408 3 is_stmt 1 view .LVU28
 113              		.loc 1 408 25 is_stmt 0 view .LVU29
 114 005e 0694     		str	r4, [sp, #24]
 409:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 115              		.loc 1 409 3 is_stmt 1 view .LVU30
 116 0060 03A9     		add	r1, sp, #12
 117 0062 2846     		mov	r0, r5
 118 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 119              	.LVL1:
 410:Src/main.c    **** 
 411:Src/main.c    **** }
 120              		.loc 1 411 1 is_stmt 0 view .LVU31
 121 0068 09B0     		add	sp, sp, #36
 122              	.LCFI2:
 123              		.cfi_def_cfa_offset 12
 124              		@ sp needed
 125 006a 30BD     		pop	{r4, r5, pc}
 126              	.L4:
 127              		.align	2
 128              	.L3:
 129 006c 00380240 		.word	1073887232
 130 0070 00100240 		.word	1073876992
 131              		.cfi_endproc
 132              	.LFE858:
 134              		.section	.text.MX_DMA_Init,"ax",%progbits
 135              		.align	1
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu fpv5-d16
 141              	MX_DMA_Init:
 142              	.LFB857:
 375:Src/main.c    **** 
 143              		.loc 1 375 1 is_stmt 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 8
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147 0000 00B5     		push	{lr}
 148              	.LCFI3:
 149              		.cfi_def_cfa_offset 4
 150              		.cfi_offset 14, -4
 151 0002 83B0     		sub	sp, sp, #12
 152              	.LCFI4:
 153              		.cfi_def_cfa_offset 16
 378:Src/main.c    **** 
 154              		.loc 1 378 3 view .LVU33
 155              	.LBB25:
 378:Src/main.c    **** 
 156              		.loc 1 378 3 view .LVU34
 378:Src/main.c    **** 
 157              		.loc 1 378 3 view .LVU35
 158 0004 0A4B     		ldr	r3, .L7
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 11


 159 0006 1A6B     		ldr	r2, [r3, #48]
 160 0008 42F40012 		orr	r2, r2, #2097152
 161 000c 1A63     		str	r2, [r3, #48]
 378:Src/main.c    **** 
 162              		.loc 1 378 3 view .LVU36
 163 000e 1B6B     		ldr	r3, [r3, #48]
 164 0010 03F40013 		and	r3, r3, #2097152
 165 0014 0193     		str	r3, [sp, #4]
 378:Src/main.c    **** 
 166              		.loc 1 378 3 view .LVU37
 167 0016 019B     		ldr	r3, [sp, #4]
 168              	.LBE25:
 378:Src/main.c    **** 
 169              		.loc 1 378 3 view .LVU38
 382:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
 170              		.loc 1 382 3 view .LVU39
 171 0018 0022     		movs	r2, #0
 172 001a 1146     		mov	r1, r2
 173 001c 0E20     		movs	r0, #14
 174 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 175              	.LVL2:
 383:Src/main.c    **** 
 176              		.loc 1 383 3 view .LVU40
 177 0022 0E20     		movs	r0, #14
 178 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 179              	.LVL3:
 385:Src/main.c    **** 
 180              		.loc 1 385 1 is_stmt 0 view .LVU41
 181 0028 03B0     		add	sp, sp, #12
 182              	.LCFI5:
 183              		.cfi_def_cfa_offset 4
 184              		@ sp needed
 185 002a 5DF804FB 		ldr	pc, [sp], #4
 186              	.L8:
 187 002e 00BF     		.align	2
 188              	.L7:
 189 0030 00380240 		.word	1073887232
 190              		.cfi_endproc
 191              	.LFE857:
 193              		.section	.text.MX_TIM1_Init,"ax",%progbits
 194              		.align	1
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	MX_TIM1_Init:
 201              	.LFB853:
 225:Src/main.c    **** 
 202              		.loc 1 225 1 is_stmt 1 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 24
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206 0000 10B5     		push	{r4, lr}
 207              	.LCFI6:
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 4, -8
 210              		.cfi_offset 14, -4
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 12


 211 0002 86B0     		sub	sp, sp, #24
 212              	.LCFI7:
 213              		.cfi_def_cfa_offset 32
 231:Src/main.c    **** 
 214              		.loc 1 231 3 view .LVU43
 231:Src/main.c    **** 
 215              		.loc 1 231 22 is_stmt 0 view .LVU44
 216 0004 0023     		movs	r3, #0
 217 0006 0193     		str	r3, [sp, #4]
 218 0008 0293     		str	r3, [sp, #8]
 219 000a 0393     		str	r3, [sp, #12]
 220 000c 0493     		str	r3, [sp, #16]
 221 000e 0593     		str	r3, [sp, #20]
 234:Src/main.c    **** 
 222              		.loc 1 234 3 is_stmt 1 view .LVU45
 223              	.LVL4:
 224              	.LBB26:
 225              	.LBI26:
 226              		.file 2 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h"
   1:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @file    stm32f7xx_ll_bus.h
   4:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
   7:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   @verbatim
   8:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****     [..]  
  11:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  12:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write 
  13:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  17:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****     [..]  
  18:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  22:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @attention
  25:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
  26:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  27:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * All rights reserved.</center></h2>
  28:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
  29:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  30:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * the "License"; You may not use this file except in compliance with the
  31:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * License. You may obtain a copy of the License at:
  32:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *                        opensource.org/licenses/BSD-3-Clause
  33:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
  34:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   ******************************************************************************
  35:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
  36:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  37:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  38:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #ifndef __STM32F7xx_LL_BUS_H
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 13


  39:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define __STM32F7xx_LL_BUS_H
  40:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  41:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #ifdef __cplusplus
  42:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** extern "C" {
  43:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif
  44:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  45:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  46:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #include "stm32f7xx.h"
  47:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  48:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @addtogroup STM32F7xx_LL_Driver
  49:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
  50:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
  51:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  52:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(RCC)
  53:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  54:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  55:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
  56:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
  57:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  58:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  59:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  60:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  61:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  62:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  63:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  64:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  65:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
  66:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
  67:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  68:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  69:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
  70:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
  71:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL             0xFFFFFFFFU
  72:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOA           RCC_AHB1ENR_GPIOAEN
  73:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOB           RCC_AHB1ENR_GPIOBEN
  74:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOC           RCC_AHB1ENR_GPIOCEN
  75:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOD           RCC_AHB1ENR_GPIODEN
  76:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOE           RCC_AHB1ENR_GPIOEEN
  77:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOF           RCC_AHB1ENR_GPIOFEN
  78:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOG           RCC_AHB1ENR_GPIOGEN
  79:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOH           RCC_AHB1ENR_GPIOHEN
  80:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOI           RCC_AHB1ENR_GPIOIEN
  81:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(GPIOJ)
  82:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOJ           RCC_AHB1ENR_GPIOJEN
  83:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* GPIOJ */
  84:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(GPIOK)
  85:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOK           RCC_AHB1ENR_GPIOKEN
  86:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* GPIOK */
  87:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC             RCC_AHB1ENR_CRCEN
  88:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_BKPSRAM         RCC_AHB1ENR_BKPSRAMEN
  89:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DTCMRAM         RCC_AHB1ENR_DTCMRAMEN
  90:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1            RCC_AHB1ENR_DMA1EN
  91:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2            RCC_AHB1ENR_DMA2EN
  92:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(DMA2D)
  93:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2D           RCC_AHB1ENR_DMA2DEN
  94:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* DMA2D */
  95:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(ETH)
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 14


  96:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ETHMAC          RCC_AHB1ENR_ETHMACEN
  97:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ETHMACTX        RCC_AHB1ENR_ETHMACTXEN
  98:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ETHMACRX        RCC_AHB1ENR_ETHMACRXEN
  99:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ETHMACPTP       RCC_AHB1ENR_ETHMACPTPEN
 100:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* ETH */
 101:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_OTGHS           RCC_AHB1ENR_OTGHSEN
 102:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_OTGHSULPI       RCC_AHB1ENR_OTGHSULPIEN
 103:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_AXI             RCC_AHB1LPENR_AXILPEN
 104:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLITF           RCC_AHB1LPENR_FLITFLPEN
 105:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM1           RCC_AHB1LPENR_SRAM1LPEN
 106:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM2           RCC_AHB1LPENR_SRAM2LPEN
 107:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 108:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
 109:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 110:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 111:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB2_GRP1_PERIPH  AHB2 GRP1 PERIPH
 112:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
 113:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 114:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
 115:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(DCMI)
 116:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_DCMI           RCC_AHB2ENR_DCMIEN
 117:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* DCMI */
 118:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(JPEG)
 119:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_JPEG           RCC_AHB2ENR_JPEGEN
 120:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* JPEG */
 121:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(CRYP) 
 122:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_CRYP           RCC_AHB2ENR_CRYPEN
 123:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* CRYP */
 124:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(AES)
 125:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_AES            RCC_AHB2ENR_AESEN
 126:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* AES */
 127:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(HASH)
 128:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_HASH           RCC_AHB2ENR_HASHEN
 129:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* HASH */
 130:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_RNG            RCC_AHB2ENR_RNGEN
 131:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_OTGFS          RCC_AHB2ENR_OTGFSEN
 132:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 133:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
 134:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 135:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 136:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB3_GRP1_PERIPH  AHB3 GRP1 PERIPH
 137:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
 138:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 139:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_ALL            0xFFFFFFFFU
 140:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_FMC            RCC_AHB3ENR_FMCEN
 141:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_QSPI           RCC_AHB3ENR_QSPIEN
 142:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 143:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
 144:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 145:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 146:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 147:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
 148:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 149:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
 150:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN
 151:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN
 152:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM4           RCC_APB1ENR_TIM4EN
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 15


 153:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM5           RCC_APB1ENR_TIM5EN
 154:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN
 155:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN
 156:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM12          RCC_APB1ENR_TIM12EN
 157:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM13          RCC_APB1ENR_TIM13EN
 158:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM14          RCC_APB1ENR_TIM14EN
 159:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APB1ENR_LPTIM1EN
 160:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN
 161:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN
 162:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI3           RCC_APB1ENR_SPI3EN
 163:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(SPDIFRX)
 164:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPDIFRX        RCC_APB1ENR_SPDIFRXEN
 165:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* SPDIFRX */
 166:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN
 167:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APB1ENR_USART3EN
 168:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART4          RCC_APB1ENR_UART4EN
 169:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART5          RCC_APB1ENR_UART5EN
 170:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN
 171:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN
 172:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C3           RCC_APB1ENR_I2C3EN
 173:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(I2C4)
 174:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C4           RCC_APB1ENR_I2C4EN
 175:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* I2C4 */
 176:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN1           RCC_APB1ENR_CAN1EN
 177:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(CAN2)
 178:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN2           RCC_APB1ENR_CAN2EN
 179:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* CAN2 */
 180:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(CAN3)
 181:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN3           RCC_APB1ENR_CAN3EN
 182:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* CAN3 */
 183:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(CEC)
 184:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CEC            RCC_APB1ENR_CECEN
 185:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* CEC */
 186:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN
 187:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN
 188:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART7          RCC_APB1ENR_UART7EN
 189:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART8          RCC_APB1ENR_UART8EN
 190:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(RCC_APB1ENR_RTCEN)
 191:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_RTCAPB         RCC_APB1ENR_RTCEN
 192:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* RCC_APB1ENR_RTCEN */
 193:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 194:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
 195:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 196:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 197:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 198:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
 199:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 200:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL          0xFFFFFFFFU
 201:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM1         RCC_APB2ENR_TIM1EN
 202:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM8         RCC_APB2ENR_TIM8EN
 203:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1       RCC_APB2ENR_USART1EN
 204:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART6       RCC_APB2ENR_USART6EN
 205:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC1         RCC_APB2ENR_ADC1EN
 206:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC2         RCC_APB2ENR_ADC2EN
 207:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC3         RCC_APB2ENR_ADC3EN
 208:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SDMMC1       RCC_APB2ENR_SDMMC1EN
 209:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(SDMMC2)
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 16


 210:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SDMMC2       RCC_APB2ENR_SDMMC2EN
 211:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* SDMMC2 */
 212:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1         RCC_APB2ENR_SPI1EN
 213:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI4         RCC_APB2ENR_SPI4EN
 214:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SYSCFG       RCC_APB2ENR_SYSCFGEN
 215:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM9         RCC_APB2ENR_TIM9EN
 216:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM10        RCC_APB2ENR_TIM10EN
 217:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM11        RCC_APB2ENR_TIM11EN
 218:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI5         RCC_APB2ENR_SPI5EN
 219:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(SPI6)
 220:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI6         RCC_APB2ENR_SPI6EN
 221:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* SPI6 */
 222:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SAI1         RCC_APB2ENR_SAI1EN
 223:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SAI2         RCC_APB2ENR_SAI2EN
 224:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(LTDC)
 225:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_LTDC         RCC_APB2ENR_LTDCEN
 226:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* LTDC */
 227:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(DSI)
 228:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DSI          RCC_APB2ENR_DSIEN
 229:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* DSI */
 230:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(DFSDM1_Channel0)
 231:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DFSDM1       RCC_APB2ENR_DFSDM1EN
 232:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* DFSDM1_Channel0 */
 233:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(MDIOS)
 234:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_MDIO         RCC_APB2ENR_MDIOEN
 235:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* MDIOS */
 236:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(USB_HS_PHYC)
 237:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_OTGPHYC      RCC_APB2ENR_OTGPHYCEN
 238:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* USB_HS_PHYC */
 239:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC          RCC_APB2RSTR_ADCRST
 240:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 241:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
 242:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 243:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 244:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 245:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
 246:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 247:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 248:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 249:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 250:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 251:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
 252:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 253:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 254:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 255:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
 256:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 257:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 258:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 259:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 260:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB1ENR      GPIOAEN            LL_AHB1_GRP1_EnableClock\n
 261:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOBEN            LL_AHB1_GRP1_EnableClock\n
 262:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOCEN            LL_AHB1_GRP1_EnableClock\n
 263:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIODEN            LL_AHB1_GRP1_EnableClock\n
 264:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOEEN            LL_AHB1_GRP1_EnableClock\n
 265:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOFEN            LL_AHB1_GRP1_EnableClock\n
 266:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOGEN            LL_AHB1_GRP1_EnableClock\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 17


 267:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOHEN            LL_AHB1_GRP1_EnableClock\n
 268:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOIEN            LL_AHB1_GRP1_EnableClock\n
 269:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOJEN            LL_AHB1_GRP1_EnableClock\n
 270:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOKEN            LL_AHB1_GRP1_EnableClock\n
 271:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      CRCEN              LL_AHB1_GRP1_EnableClock\n
 272:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      BKPSRAMEN          LL_AHB1_GRP1_EnableClock\n
 273:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DTCMRAMEN          LL_AHB1_GRP1_EnableClock\n
 274:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DMA1EN             LL_AHB1_GRP1_EnableClock\n
 275:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DMA2EN             LL_AHB1_GRP1_EnableClock\n
 276:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DMA2DEN            LL_AHB1_GRP1_EnableClock\n
 277:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACEN           LL_AHB1_GRP1_EnableClock\n
 278:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACTXEN         LL_AHB1_GRP1_EnableClock\n
 279:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACRXEN         LL_AHB1_GRP1_EnableClock\n
 280:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACPTPEN        LL_AHB1_GRP1_EnableClock\n
 281:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      OTGHSEN            LL_AHB1_GRP1_EnableClock\n
 282:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      OTGHSULPIEN        LL_AHB1_GRP1_EnableClock
 283:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 284:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 285:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 286:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 287:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 288:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE
 289:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 290:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG
 291:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 292:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOI
 293:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOJ (*)
 294:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOK (*)
 295:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 296:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_BKPSRAM
 297:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DTCMRAM
 298:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 299:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 300:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 301:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 302:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACTX (*)
 303:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACRX (*)
 304:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACPTP (*)
 305:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHS
 306:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHSULPI
 307:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 308:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 309:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 310:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 311:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 312:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 313:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   __IO uint32_t tmpreg;
 314:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->AHB1ENR, Periphs);
 315:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 316:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 317:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   (void)tmpreg;
 318:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 319:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 320:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 321:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 322:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB1ENR      GPIOAEN            LL_AHB1_GRP1_IsEnabledClock\n
 323:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOBEN            LL_AHB1_GRP1_IsEnabledClock\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 18


 324:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOCEN            LL_AHB1_GRP1_IsEnabledClock\n
 325:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIODEN            LL_AHB1_GRP1_IsEnabledClock\n
 326:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOEEN            LL_AHB1_GRP1_IsEnabledClock\n
 327:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOFEN            LL_AHB1_GRP1_IsEnabledClock\n
 328:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOGEN            LL_AHB1_GRP1_IsEnabledClock\n
 329:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOHEN            LL_AHB1_GRP1_IsEnabledClock\n
 330:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOIEN            LL_AHB1_GRP1_IsEnabledClock\n
 331:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOJEN            LL_AHB1_GRP1_IsEnabledClock\n
 332:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOKEN            LL_AHB1_GRP1_IsEnabledClock\n
 333:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      CRCEN              LL_AHB1_GRP1_IsEnabledClock\n
 334:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      BKPSRAMEN          LL_AHB1_GRP1_IsEnabledClock\n
 335:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DTCMRAMEN          LL_AHB1_GRP1_IsEnabledClock\n
 336:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DMA1EN             LL_AHB1_GRP1_IsEnabledClock\n
 337:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DMA2EN             LL_AHB1_GRP1_IsEnabledClock\n
 338:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DMA2DEN            LL_AHB1_GRP1_IsEnabledClock\n
 339:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACEN           LL_AHB1_GRP1_IsEnabledClock\n
 340:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACTXEN         LL_AHB1_GRP1_IsEnabledClock\n
 341:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACRXEN         LL_AHB1_GRP1_IsEnabledClock\n
 342:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACPTPEN        LL_AHB1_GRP1_IsEnabledClock\n
 343:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      OTGHSEN            LL_AHB1_GRP1_IsEnabledClock\n
 344:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      OTGHSULPIENDEN     LL_AHB1_GRP1_IsEnabledClock
 345:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 346:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 347:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 348:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 349:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 350:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE
 351:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 352:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG
 353:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 354:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOI
 355:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOJ (*)
 356:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOK (*)
 357:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 358:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_BKPSRAM
 359:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DTCMRAM
 360:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 361:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 362:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 363:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 364:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACTX (*)
 365:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACRX (*)
 366:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACPTP (*)
 367:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHS
 368:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHSULPI
 369:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 370:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 371:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 372:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 373:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 374:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 375:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   return (READ_BIT(RCC->AHB1ENR, Periphs) == Periphs);
 376:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 377:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 378:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 379:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 380:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB1ENR      GPIOAEN            LL_AHB1_GRP1_DisableClock\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 19


 381:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOBEN            LL_AHB1_GRP1_DisableClock\n
 382:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOCEN            LL_AHB1_GRP1_DisableClock\n
 383:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIODEN            LL_AHB1_GRP1_DisableClock\n
 384:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOEEN            LL_AHB1_GRP1_DisableClock\n
 385:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOFEN            LL_AHB1_GRP1_DisableClock\n
 386:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOGEN            LL_AHB1_GRP1_DisableClock\n
 387:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOHEN            LL_AHB1_GRP1_DisableClock\n
 388:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOIEN            LL_AHB1_GRP1_DisableClock\n
 389:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOJEN            LL_AHB1_GRP1_DisableClock\n
 390:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOKEN            LL_AHB1_GRP1_DisableClock\n
 391:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      CRCEN              LL_AHB1_GRP1_DisableClock\n
 392:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      BKPSRAMEN          LL_AHB1_GRP1_DisableClock\n
 393:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DTCMRAMEN          LL_AHB1_GRP1_DisableClock\n
 394:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DMA1EN             LL_AHB1_GRP1_DisableClock\n
 395:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DMA2EN             LL_AHB1_GRP1_DisableClock\n
 396:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DMA2DEN            LL_AHB1_GRP1_DisableClock\n
 397:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACEN           LL_AHB1_GRP1_DisableClock\n
 398:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACTXEN         LL_AHB1_GRP1_DisableClock\n
 399:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACRXEN         LL_AHB1_GRP1_DisableClock\n
 400:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACPTPEN        LL_AHB1_GRP1_DisableClock\n
 401:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      OTGHSEN            LL_AHB1_GRP1_DisableClock\n
 402:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      OTGHSULPIENDEN     LL_AHB1_GRP1_DisableClock
 403:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 404:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 405:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 406:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 407:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 408:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE
 409:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 410:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG
 411:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 412:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOI
 413:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOJ (*)
 414:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOK (*)
 415:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 416:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_BKPSRAM
 417:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DTCMRAM
 418:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 419:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 420:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 421:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 422:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACTX (*)
 423:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACRX (*)
 424:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACPTP (*)
 425:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHS
 426:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHSULPI
 427:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 428:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 429:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 430:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 431:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 432:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 433:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1ENR, Periphs);
 434:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 435:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 436:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 437:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 20


 438:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB1RSTR     GPIOARST      LL_AHB1_GRP1_ForceReset\n
 439:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOBRST      LL_AHB1_GRP1_ForceReset\n
 440:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOCRST      LL_AHB1_GRP1_ForceReset\n
 441:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIODRST      LL_AHB1_GRP1_ForceReset\n
 442:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOERST      LL_AHB1_GRP1_ForceReset\n
 443:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOFRST      LL_AHB1_GRP1_ForceReset\n
 444:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOGRST      LL_AHB1_GRP1_ForceReset\n
 445:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOHRST      LL_AHB1_GRP1_ForceReset\n
 446:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOIRST      LL_AHB1_GRP1_ForceReset\n
 447:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOJRST      LL_AHB1_GRP1_ForceReset\n
 448:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOKRST      LL_AHB1_GRP1_ForceReset\n
 449:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ForceReset\n
 450:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ForceReset\n
 451:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ForceReset\n
 452:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     DMA2DRST      LL_AHB1_GRP1_ForceReset\n
 453:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     ETHMACRST     LL_AHB1_GRP1_ForceReset\n
 454:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     OTGHSRST      LL_AHB1_GRP1_ForceReset
 455:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 456:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 457:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 458:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 459:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 460:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 461:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE
 462:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 463:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG
 464:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 465:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOI
 466:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOJ (*)
 467:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOK (*)
 468:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 469:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 470:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 471:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 472:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 473:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHS
 474:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 475:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 476:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 477:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 478:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 479:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 480:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->AHB1RSTR, Periphs);
 481:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 482:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 483:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 484:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 485:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB1RSTR     GPIOARST      LL_AHB1_GRP1_ReleaseReset\n
 486:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOBRST      LL_AHB1_GRP1_ReleaseReset\n
 487:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOCRST      LL_AHB1_GRP1_ReleaseReset\n
 488:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIODRST      LL_AHB1_GRP1_ReleaseReset\n
 489:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOERST      LL_AHB1_GRP1_ReleaseReset\n
 490:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOFRST      LL_AHB1_GRP1_ReleaseReset\n
 491:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOGRST      LL_AHB1_GRP1_ReleaseReset\n
 492:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOHRST      LL_AHB1_GRP1_ReleaseReset\n
 493:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOIRST      LL_AHB1_GRP1_ReleaseReset\n
 494:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOJRST      LL_AHB1_GRP1_ReleaseReset\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 21


 495:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOKRST      LL_AHB1_GRP1_ReleaseReset\n
 496:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 497:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ReleaseReset\n
 498:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ReleaseReset\n
 499:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     DMA2DRST      LL_AHB1_GRP1_ReleaseReset\n
 500:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     ETHMACRST     LL_AHB1_GRP1_ReleaseReset\n
 501:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     OTGHSRST      LL_AHB1_GRP1_ReleaseReset
 502:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 503:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 504:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 505:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 506:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 508:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE
 509:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 510:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG
 511:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 512:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOI
 513:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOJ (*)
 514:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOK (*)
 515:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 516:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 517:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 518:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 519:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHS
 521:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 522:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 523:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 524:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 525:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 526:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 527:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1RSTR, Periphs);
 528:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 529:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 530:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 531:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Enable AHB1 peripheral clocks in low-power mode
 532:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB1LPENR    GPIOALPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 533:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOBLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 534:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOCLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 535:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIODLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 536:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOELPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 537:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOFLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 538:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOGLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 539:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOHLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 540:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOILPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 541:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOJLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 542:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOKLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 543:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    CRCLPEN        LL_AHB1_GRP1_EnableClockLowPower\n
 544:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    AXILPEN        LL_AHB1_GRP1_EnableClockLowPower\n
 545:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    FLITFLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 546:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    SRAM1LPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 547:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    SRAM2LPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 548:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    BKPSRAMLPEN    LL_AHB1_GRP1_EnableClockLowPower\n
 549:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    DTCMRAMLPEN    LL_AHB1_GRP1_EnableClockLowPower\n
 550:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    DMA1LPEN       LL_AHB1_GRP1_EnableClockLowPower\n
 551:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    DMA2LPEN       LL_AHB1_GRP1_EnableClockLowPower\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 22


 552:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    DMA2DLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 553:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    ETHMACLPEN     LL_AHB1_GRP1_EnableClockLowPower\n
 554:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    ETHMACTXLPEN   LL_AHB1_GRP1_EnableClockLowPower\n
 555:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    ETHMACRXLPEN   LL_AHB1_GRP1_EnableClockLowPower\n
 556:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    ETHMACPTPLPEN  LL_AHB1_GRP1_EnableClockLowPower\n
 557:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    OTGHSLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 558:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    OTGHSULPILPEN  LL_AHB1_GRP1_EnableClockLowPower
 559:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 560:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 561:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 562:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 563:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 564:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE
 565:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 566:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG
 567:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 568:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOI
 569:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOJ (*)
 570:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOK (*)
 571:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 572:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_AXI
 573:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLITF
 574:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM1
 575:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM2
 576:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_BKPSRAM
 577:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DTCMRAM
 578:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 579:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 580:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 581:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 582:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACTX (*)
 583:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACRX (*)
 584:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACPTP (*)
 585:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHS
 586:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHSULPI
 587:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 588:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 589:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 590:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 591:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockLowPower(uint32_t Periphs)
 592:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 593:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   __IO uint32_t tmpreg;
 594:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->AHB1LPENR, Periphs);
 595:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 596:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1LPENR, Periphs);
 597:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   (void)tmpreg;
 598:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 599:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 600:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 601:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Disable AHB1 peripheral clocks in low-power mode
 602:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB1LPENR    GPIOALPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 603:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOBLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 604:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOCLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 605:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIODLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 606:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOELPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 607:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOFLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 608:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOGLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 23


 609:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOHLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 610:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOILPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 611:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOJLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 612:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOKLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 613:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    CRCLPEN        LL_AHB1_GRP1_DisableClockLowPower\n
 614:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    AXILPEN        LL_AHB1_GRP1_DisableClockLowPower\n
 615:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    FLITFLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 616:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    SRAM1LPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 617:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    SRAM2LPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 618:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    BKPSRAMLPEN    LL_AHB1_GRP1_DisableClockLowPower\n
 619:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    DTCMRAMLPEN    LL_AHB1_GRP1_DisableClockLowPower\n
 620:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    DMA1LPEN       LL_AHB1_GRP1_DisableClockLowPower\n
 621:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    DMA2LPEN       LL_AHB1_GRP1_DisableClockLowPower\n
 622:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    DMA2DLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 623:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    ETHMACLPEN     LL_AHB1_GRP1_DisableClockLowPower\n
 624:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    ETHMACTXLPEN   LL_AHB1_GRP1_DisableClockLowPower\n
 625:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    ETHMACRXLPEN   LL_AHB1_GRP1_DisableClockLowPower\n
 626:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    ETHMACPTPLPEN  LL_AHB1_GRP1_DisableClockLowPower\n
 627:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    OTGHSLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 628:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    OTGHSULPILPEN  LL_AHB1_GRP1_DisableClockLowPower
 629:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 630:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 631:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 632:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 633:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 634:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE
 635:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 636:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG
 637:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 638:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOI
 639:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOJ (*)
 640:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOK (*)
 641:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 642:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_AXI
 643:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLITF
 644:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM1
 645:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM2
 646:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_BKPSRAM
 647:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DTCMRAM
 648:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 649:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 650:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 651:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 652:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACTX (*)
 653:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACRX (*)
 654:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACPTP (*)
 655:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHS
 656:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHSULPI
 657:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 658:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 659:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 660:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 661:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockLowPower(uint32_t Periphs)
 662:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 663:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1LPENR, Periphs);
 664:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 665:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 24


 666:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 667:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
 668:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 669:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 670:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB2 AHB2
 671:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
 672:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 673:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 674:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 675:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Enable AHB2 peripherals clock.
 676:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB2ENR      DCMIEN       LL_AHB2_GRP1_EnableClock\n
 677:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      JPEGEN       LL_AHB2_GRP1_EnableClock\n
 678:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      CRYPEN       LL_AHB2_GRP1_EnableClock\n
 679:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      AESEN        LL_AHB2_GRP1_EnableClock\n
 680:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      HASHEN       LL_AHB2_GRP1_EnableClock\n
 681:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      RNGEN        LL_AHB2_GRP1_EnableClock\n
 682:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      OTGFSEN      LL_AHB2_GRP1_EnableClock
 683:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 684:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 685:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_JPEG (*)
 686:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_CRYP (*)
 687:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES  (*)
 688:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 689:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 690:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS
 691:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 692:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 693:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 694:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 695:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_EnableClock(uint32_t Periphs)
 696:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 697:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   __IO uint32_t tmpreg;
 698:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 699:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 700:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 701:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   (void)tmpreg;
 702:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 703:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 704:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 705:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Check if AHB2 peripheral clock is enabled or not
 706:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB2ENR      DCMIEN       LL_AHB2_GRP1_IsEnabledClock\n
 707:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      JPEGEN       LL_AHB2_GRP1_IsEnabledClock\n
 708:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      CRYPEN       LL_AHB2_GRP1_IsEnabledClock\n
 709:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      AESEN        LL_AHB2_GRP1_IsEnabledClock\n
 710:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      HASHEN       LL_AHB2_GRP1_IsEnabledClock\n
 711:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      RNGEN        LL_AHB2_GRP1_IsEnabledClock\n
 712:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      OTGFSEN      LL_AHB2_GRP1_IsEnabledClock
 713:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 714:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 715:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_JPEG (*)
 716:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_CRYP (*)
 717:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES  (*)
 718:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 719:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 720:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS
 721:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 722:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 25


 723:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 724:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 725:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB2_GRP1_IsEnabledClock(uint32_t Periphs)
 726:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 727:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   return (READ_BIT(RCC->AHB2ENR, Periphs) == Periphs);
 728:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 729:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 730:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 731:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Disable AHB2 peripherals clock.
 732:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB2ENR      DCMIEN       LL_AHB2_GRP1_DisableClock\n
 733:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      JPEGEN       LL_AHB2_GRP1_DisableClock\n
 734:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      CRYPEN       LL_AHB2_GRP1_DisableClock\n
 735:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      AESEN        LL_AHB2_GRP1_DisableClock\n
 736:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      HASHEN       LL_AHB2_GRP1_DisableClock\n
 737:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      RNGEN        LL_AHB2_GRP1_DisableClock\n
 738:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      OTGFSEN      LL_AHB2_GRP1_DisableClock
 739:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 740:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 741:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_JPEG (*)
 742:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_CRYP (*)
 743:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES  (*)
 744:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 745:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 746:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS
 747:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 748:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 749:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 750:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 751:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_DisableClock(uint32_t Periphs)
 752:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 753:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2ENR, Periphs);
 754:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 755:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 756:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 757:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Force AHB2 peripherals reset.
 758:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB2RSTR     DCMIRST      LL_AHB2_GRP1_ForceReset\n
 759:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     JPEGRST      LL_AHB2_GRP1_ForceReset\n
 760:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     CRYPRST      LL_AHB2_GRP1_ForceReset\n
 761:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     AESRST       LL_AHB2_GRP1_ForceReset\n
 762:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     HASHRST      LL_AHB2_GRP1_ForceReset\n
 763:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     RNGRST       LL_AHB2_GRP1_ForceReset\n
 764:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     OTGFSRST     LL_AHB2_GRP1_ForceReset
 765:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 766:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ALL
 767:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 768:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_JPEG (*)
 769:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_CRYP (*)
 770:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES  (*)
 771:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 772:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 773:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS
 774:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 775:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 776:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 777:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 778:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_ForceReset(uint32_t Periphs)
 779:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 26


 780:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->AHB2RSTR, Periphs);
 781:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 782:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 783:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 784:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Release AHB2 peripherals reset.
 785:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB2RSTR     DCMIRST      LL_AHB2_GRP1_ReleaseReset\n
 786:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     JPEGRST      LL_AHB2_GRP1_ReleaseReset\n
 787:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     CRYPRST      LL_AHB2_GRP1_ReleaseReset\n
 788:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     AESRST       LL_AHB2_GRP1_ReleaseReset\n
 789:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     HASHRST      LL_AHB2_GRP1_ReleaseReset\n
 790:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     RNGRST       LL_AHB2_GRP1_ReleaseReset\n
 791:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     OTGFSRST     LL_AHB2_GRP1_ReleaseReset
 792:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 793:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ALL
 794:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 795:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_JPEG (*)
 796:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_CRYP (*)
 797:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES  (*)
 798:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 799:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 800:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS
 801:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 802:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 803:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 804:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 805:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_ReleaseReset(uint32_t Periphs)
 806:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 807:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2RSTR, Periphs);
 808:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 809:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 810:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 811:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Enable AHB2 peripheral clocks in low-power mode
 812:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB2LPENR    DCMILPEN     LL_AHB2_GRP1_EnableClockLowPower\n
 813:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    JPEGLPEN     LL_AHB2_GRP1_EnableClockLowPower\n
 814:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    CRYPLPEN     LL_AHB2_GRP1_EnableClockLowPower\n
 815:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    AESLPEN      LL_AHB2_GRP1_EnableClockLowPower\n
 816:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    HASHLPEN     LL_AHB2_GRP1_EnableClockLowPower\n
 817:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    RNGLPEN      LL_AHB2_GRP1_EnableClockLowPower\n
 818:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    OTGFSLPEN    LL_AHB2_GRP1_EnableClockLowPower
 819:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 820:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 821:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_JPEG (*)
 822:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_CRYP (*)
 823:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES  (*)
 824:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 825:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 826:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS
 827:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 828:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 829:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 830:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 831:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_EnableClockLowPower(uint32_t Periphs)
 832:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 833:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   __IO uint32_t tmpreg;
 834:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->AHB2LPENR, Periphs);
 835:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 836:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB2LPENR, Periphs);
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 27


 837:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   (void)tmpreg;
 838:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 839:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 840:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 841:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Disable AHB2 peripheral clocks in low-power mode
 842:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB2LPENR    DCMILPEN     LL_AHB2_GRP1_DisableClockLowPower\n
 843:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    JPEGLPEN     LL_AHB2_GRP1_DisableClockLowPower\n
 844:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    CRYPLPEN     LL_AHB2_GRP1_DisableClockLowPower\n
 845:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    AESLPEN      LL_AHB2_GRP1_DisableClockLowPower\n
 846:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    HASHLPEN     LL_AHB2_GRP1_DisableClockLowPower\n
 847:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    RNGLPEN      LL_AHB2_GRP1_DisableClockLowPower\n
 848:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    OTGFSLPEN    LL_AHB2_GRP1_DisableClockLowPower
 849:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 850:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 851:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_JPEG (*)
 852:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_CRYP (*)
 853:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES  (*)
 854:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 855:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 856:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS
 857:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 858:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 859:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 860:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 861:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_DisableClockLowPower(uint32_t Periphs)
 862:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 863:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2LPENR, Periphs);
 864:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 865:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 866:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 867:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
 868:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 869:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 870:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB3 AHB3
 871:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
 872:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 873:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 874:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 875:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Enable AHB3 peripherals clock.
 876:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB3ENR      FMCEN         LL_AHB3_GRP1_EnableClock\n
 877:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB3ENR      QSPIEN        LL_AHB3_GRP1_EnableClock
 878:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 879:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 880:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI
 881:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 882:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 883:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 884:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 885:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_EnableClock(uint32_t Periphs)
 886:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 887:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   __IO uint32_t tmpreg;
 888:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->AHB3ENR, Periphs);
 889:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 890:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB3ENR, Periphs);
 891:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   (void)tmpreg;
 892:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 893:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 28


 894:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 895:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Check if AHB3 peripheral clock is enabled or not
 896:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB3ENR      FMCEN         LL_AHB3_GRP1_IsEnabledClock\n
 897:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB3ENR      QSPIEN        LL_AHB3_GRP1_IsEnabledClock
 898:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 899:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 900:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI
 901:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 902:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 903:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 904:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 905:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB3_GRP1_IsEnabledClock(uint32_t Periphs)
 906:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 907:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   return (READ_BIT(RCC->AHB3ENR, Periphs) == Periphs);
 908:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 909:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 910:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 911:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Disable AHB3 peripherals clock.
 912:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB3ENR      FMCEN         LL_AHB3_GRP1_DisableClock\n
 913:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB3ENR      QSPIEN        LL_AHB3_GRP1_DisableClock
 914:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 915:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 916:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI
 917:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 918:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 919:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 920:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 921:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_DisableClock(uint32_t Periphs)
 922:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 923:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3ENR, Periphs);
 924:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 925:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 926:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 927:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Force AHB3 peripherals reset.
 928:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB3RSTR     FMCRST        LL_AHB3_GRP1_ForceReset\n
 929:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB3RSTR     QSPIRST       LL_AHB3_GRP1_ForceReset
 930:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 931:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_ALL
 932:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 933:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI
 934:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 935:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 936:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 937:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 938:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_ForceReset(uint32_t Periphs)
 939:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 940:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->AHB3RSTR, Periphs);
 941:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 942:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 943:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 944:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Release AHB3 peripherals reset.
 945:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB3RSTR     FMCRST        LL_AHB3_GRP1_ReleaseReset\n
 946:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB3RSTR     QSPIRST       LL_AHB3_GRP1_ReleaseReset
 947:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 948:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ALL
 949:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 950:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 29


 951:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 952:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 953:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 954:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 955:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_ReleaseReset(uint32_t Periphs)
 956:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 957:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3RSTR, Periphs);
 958:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 959:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 960:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 961:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Enable AHB3 peripheral clocks in low-power mode
 962:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB3LPENR    FMCLPEN       LL_AHB3_GRP1_EnableClockLowPower\n
 963:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB3LPENR    QSPILPEN      LL_AHB3_GRP1_EnableClockLowPower
 964:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 965:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 966:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI
 967:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 968:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 969:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 970:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 971:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_EnableClockLowPower(uint32_t Periphs)
 972:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 973:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   __IO uint32_t tmpreg;
 974:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->AHB3LPENR, Periphs);
 975:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 976:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB3LPENR, Periphs);
 977:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   (void)tmpreg;
 978:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 979:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 980:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 981:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Disable AHB3 peripheral clocks in low-power mode
 982:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB3LPENR    FMCLPEN       LL_AHB3_GRP1_DisableClockLowPower\n
 983:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB3LPENR    QSPILPEN      LL_AHB3_GRP1_DisableClockLowPower
 984:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 985:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 986:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI
 987:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 988:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 989:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 990:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 991:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_DisableClockLowPower(uint32_t Periphs)
 992:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 993:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3LPENR, Periphs);
 994:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 995:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 996:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 997:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
 998:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 999:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1000:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
1001:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
1002:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
1003:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1004:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
1005:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
1006:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_EnableClock\n
1007:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_EnableClock\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 30


1008:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM4EN        LL_APB1_GRP1_EnableClock\n
1009:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM5EN        LL_APB1_GRP1_EnableClock\n
1010:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_EnableClock\n
1011:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_EnableClock\n
1012:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM12EN       LL_APB1_GRP1_EnableClock\n
1013:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM13EN       LL_APB1_GRP1_EnableClock\n
1014:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM14EN       LL_APB1_GRP1_EnableClock\n
1015:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_EnableClock\n
1016:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_EnableClock\n
1017:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_EnableClock\n
1018:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     SPI3EN        LL_APB1_GRP1_EnableClock\n
1019:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     SPDIFRXEN     LL_APB1_GRP1_EnableClock\n
1020:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_EnableClock\n
1021:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     USART3EN      LL_APB1_GRP1_EnableClock\n
1022:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART4EN       LL_APB1_GRP1_EnableClock\n
1023:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART5EN       LL_APB1_GRP1_EnableClock\n
1024:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_EnableClock\n
1025:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_EnableClock\n
1026:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_EnableClock\n
1027:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C4EN        LL_APB1_GRP1_EnableClock\n
1028:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CAN1EN        LL_APB1_GRP1_EnableClock\n
1029:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CAN2EN        LL_APB1_GRP1_EnableClock\n
1030:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CAN3EN        LL_APB1_GRP1_EnableClock\n
1031:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CECEN         LL_APB1_GRP1_EnableClock\n
1032:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_EnableClock\n
1033:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_EnableClock\n
1034:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART7EN       LL_APB1_GRP1_EnableClock\n
1035:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART8EN       LL_APB1_GRP1_EnableClock\n
1036:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     RTCEN         LL_APB1_GRP1_EnableClock
1037:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1038:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1039:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 
1040:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
1041:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 
1042:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1043:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1044:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12
1045:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13
1046:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
1047:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1048:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1049:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 
1050:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1051:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPDIFRX (*)
1052:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1053:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
1054:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4
1055:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5
1056:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1057:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1058:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1059:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C4 (*)
1060:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1061:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1062:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN3 (*)
1063:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC  (*)
1064:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 31


1065:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1066:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART7
1067:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART8
1068:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB (*)
1069:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
1070:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
1071:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
1072:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
1073:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
1074:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
1075:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   __IO uint32_t tmpreg;
1076:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
1077:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1078:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
1079:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   (void)tmpreg;
1080:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
1081:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1082:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
1083:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
1084:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
1085:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
1086:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM4EN        LL_APB1_GRP1_IsEnabledClock\n
1087:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM5EN        LL_APB1_GRP1_IsEnabledClock\n
1088:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
1089:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
1090:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM12EN       LL_APB1_GRP1_IsEnabledClock\n
1091:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM13EN       LL_APB1_GRP1_IsEnabledClock\n
1092:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM14EN       LL_APB1_GRP1_IsEnabledClock\n
1093:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_IsEnabledClock\n
1094:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
1095:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
1096:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     SPI3EN        LL_APB1_GRP1_IsEnabledClock\n
1097:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     SPDIFRXEN     LL_APB1_GRP1_IsEnabledClock\n
1098:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_IsEnabledClock\n
1099:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     USART3EN      LL_APB1_GRP1_IsEnabledClock\n
1100:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART4EN       LL_APB1_GRP1_IsEnabledClock\n
1101:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART5EN       LL_APB1_GRP1_IsEnabledClock\n
1102:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
1103:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
1104:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_IsEnabledClock\n
1105:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C4EN        LL_APB1_GRP1_IsEnabledClock\n
1106:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CAN1EN        LL_APB1_GRP1_IsEnabledClock\n
1107:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CAN2EN        LL_APB1_GRP1_IsEnabledClock\n
1108:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CAN3EN        LL_APB1_GRP1_IsEnabledClock\n
1109:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CECEN         LL_APB1_GRP1_IsEnabledClock\n
1110:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_IsEnabledClock\n
1111:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_IsEnabledClock\n
1112:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART7EN       LL_APB1_GRP1_IsEnabledClock\n
1113:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART8EN       LL_APB1_GRP1_IsEnabledClock\n
1114:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     RTCEN         LL_APB1_GRP1_IsEnabledClock
1115:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1116:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1117:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 
1118:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
1119:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 
1120:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1121:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 32


1122:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12
1123:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13
1124:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
1125:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1126:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1127:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 
1128:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1129:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPDIFRX (*)
1130:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1131:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
1132:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4
1133:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5
1134:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1135:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1136:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1137:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C4 (*)
1138:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1139:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1140:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN3 (*)
1141:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC  (*)
1142:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1143:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1144:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART7
1145:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART8
1146:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB (*)
1147:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
1148:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
1149:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
1150:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
1151:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
1152:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
1153:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   return (READ_BIT(RCC->APB1ENR, Periphs) == Periphs);
1154:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
1155:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1156:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
1157:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
1158:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_DisableClock\n
1159:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_DisableClock\n
1160:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM4EN        LL_APB1_GRP1_DisableClock\n
1161:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM5EN        LL_APB1_GRP1_DisableClock\n
1162:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_DisableClock\n
1163:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_DisableClock\n
1164:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM12EN       LL_APB1_GRP1_DisableClock\n
1165:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM13EN       LL_APB1_GRP1_DisableClock\n
1166:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM14EN       LL_APB1_GRP1_DisableClock\n
1167:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_DisableClock\n
1168:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_DisableClock\n
1169:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_DisableClock\n
1170:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     SPI3EN        LL_APB1_GRP1_DisableClock\n
1171:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     SPDIFRXEN     LL_APB1_GRP1_DisableClock\n
1172:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_DisableClock\n
1173:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     USART3EN      LL_APB1_GRP1_DisableClock\n
1174:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART4EN       LL_APB1_GRP1_DisableClock\n
1175:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART5EN       LL_APB1_GRP1_DisableClock\n
1176:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_DisableClock\n
1177:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_DisableClock\n
1178:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_DisableClock\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 33


1179:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C4EN        LL_APB1_GRP1_DisableClock\n
1180:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CAN1EN        LL_APB1_GRP1_DisableClock\n
1181:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CAN2EN        LL_APB1_GRP1_DisableClock\n
1182:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CAN3EN        LL_APB1_GRP1_DisableClock\n
1183:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CECEN         LL_APB1_GRP1_DisableClock\n
1184:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_DisableClock\n
1185:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_DisableClock\n
1186:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART7EN       LL_APB1_GRP1_DisableClock\n
1187:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART8EN       LL_APB1_GRP1_DisableClock\n
1188:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     RTCEN         LL_APB1_GRP1_DisableClock
1189:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1190:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1191:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 
1192:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
1193:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 
1194:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1195:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1196:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12
1197:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13
1198:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
1199:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1200:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1201:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 
1202:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1203:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPDIFRX (*)
1204:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1205:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
1206:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4
1207:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5
1208:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1209:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1210:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1211:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C4 (*)
1212:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1213:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1214:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN3 (*)
1215:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC  (*)
1216:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1217:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1218:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART7
1219:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART8
1220:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB (*)
1221:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
1222:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
1223:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
1224:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
1225:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
1226:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
1227:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR, Periphs);
1228:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
1229:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1230:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
1231:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
1232:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST        LL_APB1_GRP1_ForceReset\n
1233:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM3RST        LL_APB1_GRP1_ForceReset\n
1234:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM4RST        LL_APB1_GRP1_ForceReset\n
1235:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM5RST        LL_APB1_GRP1_ForceReset\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 34


1236:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM6RST        LL_APB1_GRP1_ForceReset\n
1237:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM7RST        LL_APB1_GRP1_ForceReset\n
1238:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM12RST       LL_APB1_GRP1_ForceReset\n
1239:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM13RST       LL_APB1_GRP1_ForceReset\n
1240:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM14RST       LL_APB1_GRP1_ForceReset\n
1241:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     LPTIM1RST      LL_APB1_GRP1_ForceReset\n
1242:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     WWDGRST        LL_APB1_GRP1_ForceReset\n
1243:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     SPI2RST        LL_APB1_GRP1_ForceReset\n
1244:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     SPI3RST        LL_APB1_GRP1_ForceReset\n
1245:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     SPDIFRXRST     LL_APB1_GRP1_ForceReset\n
1246:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     USART2RST      LL_APB1_GRP1_ForceReset\n
1247:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     USART3RST      LL_APB1_GRP1_ForceReset\n
1248:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     UART4RST       LL_APB1_GRP1_ForceReset\n
1249:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     UART5RST       LL_APB1_GRP1_ForceReset\n
1250:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     I2C1RST        LL_APB1_GRP1_ForceReset\n
1251:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     I2C2RST        LL_APB1_GRP1_ForceReset\n
1252:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     I2C3RST        LL_APB1_GRP1_ForceReset\n
1253:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     I2C4RST        LL_APB1_GRP1_ForceReset\n
1254:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     CAN1RST        LL_APB1_GRP1_ForceReset\n
1255:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     CAN2RST        LL_APB1_GRP1_ForceReset\n
1256:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     CAN3RST        LL_APB1_GRP1_ForceReset\n
1257:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     CECRST         LL_APB1_GRP1_ForceReset\n
1258:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     PWRRST         LL_APB1_GRP1_ForceReset\n
1259:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     DACRST         LL_APB1_GRP1_ForceReset\n
1260:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     UART7RST       LL_APB1_GRP1_ForceReset\n
1261:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     UART8RST       LL_APB1_GRP1_ForceReset
1262:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1263:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1264:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 
1265:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
1266:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 
1267:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1268:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1269:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12
1270:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13
1271:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
1272:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1273:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1274:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 
1275:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1276:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPDIFRX (*)
1277:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1278:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
1279:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4
1280:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5
1281:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1282:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1283:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1284:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C4 (*)
1285:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1286:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1287:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN3 (*)
1288:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC  (*)
1289:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1290:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1291:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART7
1292:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART8
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 35


1293:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
1294:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
1295:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
1296:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
1297:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
1298:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
1299:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR, Periphs);
1300:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
1301:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1302:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
1303:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
1304:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST        LL_APB1_GRP1_ReleaseReset\n
1305:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM3RST        LL_APB1_GRP1_ReleaseReset\n
1306:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM4RST        LL_APB1_GRP1_ReleaseReset\n
1307:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM5RST        LL_APB1_GRP1_ReleaseReset\n
1308:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM6RST        LL_APB1_GRP1_ReleaseReset\n
1309:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM7RST        LL_APB1_GRP1_ReleaseReset\n
1310:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM12RST       LL_APB1_GRP1_ReleaseReset\n
1311:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM13RST       LL_APB1_GRP1_ReleaseReset\n
1312:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM14RST       LL_APB1_GRP1_ReleaseReset\n
1313:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     LPTIM1RST      LL_APB1_GRP1_ReleaseReset\n
1314:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     WWDGRST        LL_APB1_GRP1_ReleaseReset\n
1315:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     SPI2RST        LL_APB1_GRP1_ReleaseReset\n
1316:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     SPI3RST        LL_APB1_GRP1_ReleaseReset\n
1317:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     SPDIFRXRST     LL_APB1_GRP1_ReleaseReset\n
1318:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     USART2RST      LL_APB1_GRP1_ReleaseReset\n
1319:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     USART3RST      LL_APB1_GRP1_ReleaseReset\n
1320:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     UART4RST       LL_APB1_GRP1_ReleaseReset\n
1321:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     UART5RST       LL_APB1_GRP1_ReleaseReset\n
1322:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     I2C1RST        LL_APB1_GRP1_ReleaseReset\n
1323:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     I2C2RST        LL_APB1_GRP1_ReleaseReset\n
1324:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     I2C3RST        LL_APB1_GRP1_ReleaseReset\n
1325:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     I2C4RST        LL_APB1_GRP1_ReleaseReset\n
1326:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     CAN1RST        LL_APB1_GRP1_ReleaseReset\n
1327:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     CAN2RST        LL_APB1_GRP1_ReleaseReset\n
1328:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     CAN3RST        LL_APB1_GRP1_ReleaseReset\n
1329:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     CECRST         LL_APB1_GRP1_ReleaseReset\n
1330:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     PWRRST         LL_APB1_GRP1_ReleaseReset\n
1331:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     DACRST         LL_APB1_GRP1_ReleaseReset\n
1332:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     UART7RST       LL_APB1_GRP1_ReleaseReset\n
1333:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     UART8RST       LL_APB1_GRP1_ReleaseReset
1334:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1335:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1336:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 
1337:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
1338:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 
1339:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1340:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1341:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12
1342:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13
1343:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
1344:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1345:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1346:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 
1347:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1348:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPDIFRX (*)
1349:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 36


1350:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
1351:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4
1352:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5
1353:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1354:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1355:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1356:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C4 (*)
1357:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1358:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1359:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN3 (*)
1360:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC  (*)
1361:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1362:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1363:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART7
1364:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART8
1365:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
1366:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
1367:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
1368:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
1369:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
1370:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
1371:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR, Periphs);
1372:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
1373:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1374:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
1375:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Enable APB1 peripheral clocks in low-power mode
1376:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll APB1LPENR     TIM2LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1377:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM3LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1378:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM4LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1379:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM5LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1380:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM6LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1381:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM7LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1382:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM12LPEN       LL_APB1_GRP1_EnableClockLowPower\n
1383:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM13LPEN       LL_APB1_GRP1_EnableClockLowPower\n
1384:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM14LPEN       LL_APB1_GRP1_EnableClockLowPower\n
1385:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     LPTIM1LPEN      LL_APB1_GRP1_EnableClockLowPower\n
1386:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     WWDGLPEN        LL_APB1_GRP1_EnableClockLowPower\n
1387:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     SPI2LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1388:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     SPI3LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1389:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     SPDIFRXLPEN     LL_APB1_GRP1_EnableClockLowPower\n
1390:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     USART2LPEN      LL_APB1_GRP1_EnableClockLowPower\n
1391:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     USART3LPEN      LL_APB1_GRP1_EnableClockLowPower\n
1392:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     UART4LPEN       LL_APB1_GRP1_EnableClockLowPower\n
1393:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     UART5LPEN       LL_APB1_GRP1_EnableClockLowPower\n
1394:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     I2C1LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1395:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     I2C2LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1396:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     I2C3LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1397:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     I2C4LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1398:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     CAN1LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1399:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     CAN2LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1400:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     CAN3LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1401:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     CECLPEN         LL_APB1_GRP1_EnableClockLowPower\n
1402:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     PWRLPEN         LL_APB1_GRP1_EnableClockLowPower\n
1403:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     DACLPEN         LL_APB1_GRP1_EnableClockLowPower\n
1404:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     UART7LPEN       LL_APB1_GRP1_EnableClockLowPower\n
1405:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     UART8LPEN       LL_APB1_GRP1_EnableClockLowPower\n
1406:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     RTCLPEN         LL_APB1_GRP1_EnableClockLowPower
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 37


1407:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1408:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1409:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 
1410:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
1411:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 
1412:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1413:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1414:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12
1415:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13
1416:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
1417:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1418:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1419:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 
1420:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1421:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPDIFRX (*)
1422:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1423:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
1424:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4
1425:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5
1426:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1427:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1428:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1429:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C4 (*)
1430:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1431:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1432:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN3 (*)
1433:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC  (*)
1434:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1435:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1436:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART7
1437:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART8
1438:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB (*)
1439:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
1440:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
1441:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
1442:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
1443:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClockLowPower(uint32_t Periphs)
1444:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
1445:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   __IO uint32_t tmpreg;
1446:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->APB1LPENR, Periphs);
1447:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1448:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1LPENR, Periphs);
1449:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   (void)tmpreg;
1450:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
1451:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1452:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
1453:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Disable APB1 peripheral clocks in low-power mode
1454:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll APB1LPENR     TIM2LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1455:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM3LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1456:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM4LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1457:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM5LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1458:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM6LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1459:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM7LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1460:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM12LPEN       LL_APB1_GRP1_DisableClockLowPower\n
1461:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM13LPEN       LL_APB1_GRP1_DisableClockLowPower\n
1462:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM14LPEN       LL_APB1_GRP1_DisableClockLowPower\n
1463:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     LPTIM1LPEN      LL_APB1_GRP1_DisableClockLowPower\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 38


1464:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     WWDGLPEN        LL_APB1_GRP1_DisableClockLowPower\n
1465:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     SPI2LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1466:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     SPI3LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1467:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     SPDIFRXLPEN     LL_APB1_GRP1_DisableClockLowPower\n
1468:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     USART2LPEN      LL_APB1_GRP1_DisableClockLowPower\n
1469:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     USART3LPEN      LL_APB1_GRP1_DisableClockLowPower\n
1470:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     UART4LPEN       LL_APB1_GRP1_DisableClockLowPower\n
1471:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     UART5LPEN       LL_APB1_GRP1_DisableClockLowPower\n
1472:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     I2C1LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1473:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     I2C2LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1474:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     I2C3LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1475:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     I2C4LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1476:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     CAN1LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1477:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     CAN2LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1478:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     CAN3LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1479:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     CECLPEN         LL_APB1_GRP1_DisableClockLowPower\n
1480:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     PWRLPEN         LL_APB1_GRP1_DisableClockLowPower\n
1481:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     DACLPEN         LL_APB1_GRP1_DisableClockLowPower\n
1482:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     UART7LPEN       LL_APB1_GRP1_DisableClockLowPower\n
1483:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     UART8LPEN       LL_APB1_GRP1_DisableClockLowPower\n
1484:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     RTCLPEN         LL_APB1_GRP1_DisableClockLowPower
1485:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1486:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1487:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 
1488:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
1489:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 
1490:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1491:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1492:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12
1493:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13
1494:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
1495:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1496:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1497:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 
1498:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1499:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPDIFRX (*)
1500:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1501:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
1502:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4
1503:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5
1504:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1505:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1506:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C4 (*)
1508:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1509:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1510:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN3 (*)
1511:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC  (*)
1512:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1513:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1514:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART7
1515:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART8
1516:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB (*)
1517:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
1518:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
1519:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 39


1521:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClockLowPower(uint32_t Periphs)
1522:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
1523:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1LPENR, Periphs);
1524:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
1525:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1526:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
1527:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
1528:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
1529:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1530:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB2 APB2
1531:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
1532:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
1533:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1534:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
1535:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock.
1536:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll APB2ENR     TIM1EN        LL_APB2_GRP1_EnableClock\n
1537:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     TIM8EN        LL_APB2_GRP1_EnableClock\n
1538:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     USART1EN      LL_APB2_GRP1_EnableClock\n
1539:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     USART6EN      LL_APB2_GRP1_EnableClock\n
1540:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     ADC1EN        LL_APB2_GRP1_EnableClock\n
1541:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     ADC2EN        LL_APB2_GRP1_EnableClock\n
1542:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     ADC3EN        LL_APB2_GRP1_EnableClock\n
1543:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     SDMMC1EN      LL_APB2_GRP1_EnableClock\n
1544:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     SDMMC2EN      LL_APB2_GRP1_EnableClock\n
1545:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     SPI1EN        LL_APB2_GRP1_EnableClock\n
1546:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     SPI4EN        LL_APB2_GRP1_EnableClock\n
1547:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     SYSCFGEN      LL_APB2_GRP1_EnableClock\n
1548:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     TIM9EN        LL_APB2_GRP1_EnableClock\n
1549:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     TIM10EN       LL_APB2_GRP1_EnableClock\n
1550:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     TIM11EN       LL_APB2_GRP1_EnableClock\n
1551:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     SPI5EN        LL_APB2_GRP1_EnableClock\n
1552:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     SPI6EN        LL_APB2_GRP1_EnableClock\n
1553:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     SAI1EN        LL_APB2_GRP1_EnableClock\n
1554:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     SAI2EN        LL_APB2_GRP1_EnableClock\n
1555:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     LTDCEN        LL_APB2_GRP1_EnableClock\n
1556:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     DSIEN         LL_APB2_GRP1_EnableClock\n
1557:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     DFSDM1EN      LL_APB2_GRP1_EnableClock\n
1558:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     MDIOEN        LL_APB2_GRP1_EnableClock\n
1559:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     OTGPHYCEN     LL_APB2_GRP1_EnableClock
1560:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1561:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
1562:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM8
1563:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
1564:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART6
1565:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
1566:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC2
1567:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC3
1568:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SDMMC1
1569:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SDMMC2 (*)
1570:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
1571:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI4
1572:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
1573:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM9
1574:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM10
1575:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM11
1576:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI5
1577:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI6 (*)
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 40


1578:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SAI1
1579:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SAI2
1580:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_LTDC (*)
1581:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DSI  (*)
1582:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DFSDM1 (*)
1583:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_MDIO (*)
1584:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_OTGPHYC (*)
1585:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
1586:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
1587:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
1588:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
1589:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
 227              		.loc 2 1589 22 view .LVU46
 228              	.LBB27:
1590:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
1591:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   __IO uint32_t tmpreg;
 229              		.loc 2 1591 3 view .LVU47
1592:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 230              		.loc 2 1592 3 view .LVU48
 231 0010 154B     		ldr	r3, .L11
 232 0012 5A6C     		ldr	r2, [r3, #68]
 233 0014 42F00102 		orr	r2, r2, #1
 234 0018 5A64     		str	r2, [r3, #68]
1593:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1594:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 235              		.loc 2 1594 3 view .LVU49
 236              		.loc 2 1594 12 is_stmt 0 view .LVU50
 237 001a 5B6C     		ldr	r3, [r3, #68]
 238 001c 03F00103 		and	r3, r3, #1
 239              		.loc 2 1594 10 view .LVU51
 240 0020 0093     		str	r3, [sp]
1595:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   (void)tmpreg;
 241              		.loc 2 1595 3 is_stmt 1 view .LVU52
 242 0022 009B     		ldr	r3, [sp]
 243              	.LVL5:
 244              		.loc 2 1595 3 is_stmt 0 view .LVU53
 245              	.LBE27:
 246              	.LBE26:
 239:Src/main.c    ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 247              		.loc 1 239 3 is_stmt 1 view .LVU54
 239:Src/main.c    ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 248              		.loc 1 239 28 is_stmt 0 view .LVU55
 249 0024 5F23     		movs	r3, #95
 250 0026 ADF80430 		strh	r3, [sp, #4]	@ movhi
 240:Src/main.c    ****   TIM_InitStruct.Autoreload = 65000;
 251              		.loc 1 240 3 is_stmt 1 view .LVU56
 241:Src/main.c    ****   TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
 252              		.loc 1 241 3 view .LVU57
 241:Src/main.c    ****   TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
 253              		.loc 1 241 29 is_stmt 0 view .LVU58
 254 002a 4FF6E853 		movw	r3, #65000
 255 002e 0393     		str	r3, [sp, #12]
 242:Src/main.c    ****   TIM_InitStruct.RepetitionCounter = 0;
 256              		.loc 1 242 3 is_stmt 1 view .LVU59
 243:Src/main.c    ****   LL_TIM_Init(TIM1, &TIM_InitStruct);
 257              		.loc 1 243 3 view .LVU60
 244:Src/main.c    ****   LL_TIM_DisableARRPreload(TIM1);
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 41


 258              		.loc 1 244 3 view .LVU61
 259 0030 0E4C     		ldr	r4, .L11+4
 260 0032 01A9     		add	r1, sp, #4
 261 0034 2046     		mov	r0, r4
 262 0036 FFF7FEFF 		bl	LL_TIM_Init
 263              	.LVL6:
 245:Src/main.c    ****   LL_TIM_SetClockSource(TIM1, LL_TIM_CLOCKSOURCE_INTERNAL);
 264              		.loc 1 245 3 view .LVU62
 265              	.LBB28:
 266              	.LBI28:
 267              		.file 3 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h"
   1:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @file    stm32f7xx_ll_tim.h
   4:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief   Header file of TIM LL module.
   6:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   ******************************************************************************
   7:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @attention
   8:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *
   9:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *
  12:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *
  17:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   ******************************************************************************
  18:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
  19:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  20:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #ifndef __STM32F7xx_LL_TIM_H
  22:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define __STM32F7xx_LL_TIM_H
  23:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  24:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #ifdef __cplusplus
  25:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** extern "C" {
  26:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #endif
  27:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  28:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #include "stm32f7xx.h"
  30:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  31:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @addtogroup STM32F7xx_LL_Driver
  32:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
  33:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
  34:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  35:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #if defined (TIM1) || defined (TIM8) || defined (TIM2) || defined (TIM3) ||  defined (TIM4) || defi
  36:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  37:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL TIM
  38:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
  39:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
  40:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  41:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Variables TIM Private Variables
  44:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
  45:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
  46:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** static const uint8_t OFFSET_TAB_CCMRx[] =
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 42


  47:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
  48:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0x00U,   /* 0: TIMx_CH1  */
  49:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0x00U,   /* 1: TIMx_CH1N */
  50:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0x00U,   /* 2: TIMx_CH2  */
  51:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0x00U,   /* 3: TIMx_CH2N */
  52:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0x04U,   /* 4: TIMx_CH3  */
  53:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0x04U,   /* 5: TIMx_CH3N */
  54:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0x04U,   /* 6: TIMx_CH4  */
  55:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0x3CU,   /* 7: TIMx_CH5  */
  56:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0x3CU    /* 8: TIMx_CH6  */
  57:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** };
  58:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  59:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OCxx[] =
  60:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
  61:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 0: OC1M, OC1FE, OC1PE */
  62:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 1: - NA */
  63:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   8U,            /* 2: OC2M, OC2FE, OC2PE */
  64:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 3: - NA */
  65:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 4: OC3M, OC3FE, OC3PE */
  66:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 5: - NA */
  67:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   8U,            /* 6: OC4M, OC4FE, OC4PE */
  68:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 7: OC5M, OC5FE, OC5PE */
  69:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   8U             /* 8: OC6M, OC6FE, OC6PE */
  70:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** };
  71:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  72:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** static const uint8_t SHIFT_TAB_ICxx[] =
  73:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
  74:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 0: CC1S, IC1PSC, IC1F */
  75:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 1: - NA */
  76:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   8U,            /* 2: CC2S, IC2PSC, IC2F */
  77:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 3: - NA */
  78:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 4: CC3S, IC3PSC, IC3F */
  79:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 5: - NA */
  80:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   8U,            /* 6: CC4S, IC4PSC, IC4F */
  81:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 7: - NA */
  82:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U             /* 8: - NA */
  83:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** };
  84:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  85:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** static const uint8_t SHIFT_TAB_CCxP[] =
  86:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
  87:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 0: CC1P */
  88:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   2U,            /* 1: CC1NP */
  89:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   4U,            /* 2: CC2P */
  90:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   6U,            /* 3: CC2NP */
  91:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   8U,            /* 4: CC3P */
  92:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   10U,           /* 5: CC3NP */
  93:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   12U,           /* 6: CC4P */
  94:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   16U,           /* 7: CC5P */
  95:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   20U            /* 8: CC6P */
  96:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** };
  97:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  98:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OISx[] =
  99:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 100:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 0: OIS1 */
 101:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   1U,            /* 1: OIS1N */
 102:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   2U,            /* 2: OIS2 */
 103:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   3U,            /* 3: OIS2N */
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 43


 104:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   4U,            /* 4: OIS3 */
 105:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   5U,            /* 5: OIS3N */
 106:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   6U,            /* 6: OIS4 */
 107:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   8U,            /* 7: OIS5 */
 108:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   10U            /* 8: OIS6 */
 109:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** };
 110:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 111:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 112:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 113:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 114:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Private constants ---------------------------------------------------------*/
 115:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Constants TIM Private Constants
 116:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 117:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 118:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 119:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #if   defined(TIM_BREAK_INPUT_SUPPORT)
 120:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Defines used for the bit position in the register and perform offsets */
 121:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIM_POSITION_BRK_SOURCE           (POSITION_VAL(Source) & 0x1FUL)
 122:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 123:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Generic bit definitions for TIMx_AF1 register */
 124:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIMx_AF1_BKINE          TIM1_AF1_BKINE       /*!< BRK BKINE input enable */
 125:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #if defined(DFSDM1_Channel0)
 126:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIMx_AF1_BKDFBKE        TIM1_AF1_BKDFBKE     /*!< BRK DFSDM1_BREAK[0] enable */
 127:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #endif /* DFSDM1_Channel0 */
 128:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIMx_AF1_BKINP        TIM1_AF1_BKINP       /*!< BRK BKIN input polarity */
 129:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Generic bit definitions for TIMx_AF2 register */
 130:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIMx_AF2_BK2INE         TIM1_AF2_BK2INE      /*!< BRK B2KINE input enable */
 131:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #if defined(DFSDM1_Channel0)
 132:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIMx_AF2_BK2DFBKE       TIM1_AF2_BK2DFBKE    /*!< BRK DFSDM_BREAK[0] enable */
 133:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #endif /* DFSDM1_Channel0 */
 134:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIMx_AF2_BK2INP       TIM1_AF2_BK2INP      /*!< BRK BK2IN input polarity */
 135:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #endif /* TIM_BREAK_INPUT_SUPPORT */
 136:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 137:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Remap mask definitions */
 138:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIMx_OR_RMP_SHIFT  16U
 139:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIMx_OR_RMP_MASK   0x0000FFFFU
 140:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIM2_OR_RMP_MASK   (TIM2_OR_ITR1_RMP << TIMx_OR_RMP_SHIFT)
 141:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIM5_OR_RMP_MASK   (TIM5_OR_TI4_RMP << TIMx_OR_RMP_SHIFT)
 142:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIM11_OR_RMP_MASK  (TIM11_OR_TI1_RMP << TIMx_OR_RMP_SHIFT)
 143:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 144:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Mask used to set the TDG[x:0] of the DTG bits of the TIMx_BDTR register */
 145:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define DT_DELAY_1 ((uint8_t)0x7F)
 146:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define DT_DELAY_2 ((uint8_t)0x3F)
 147:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define DT_DELAY_3 ((uint8_t)0x1F)
 148:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define DT_DELAY_4 ((uint8_t)0x1F)
 149:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 150:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Mask used to set the DTG[7:5] bits of the DTG bits of the TIMx_BDTR register */
 151:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define DT_RANGE_1 ((uint8_t)0x00)
 152:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define DT_RANGE_2 ((uint8_t)0x80)
 153:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define DT_RANGE_3 ((uint8_t)0xC0)
 154:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define DT_RANGE_4 ((uint8_t)0xE0)
 155:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 156:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 157:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 158:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 159:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 160:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 44


 161:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Private macros ------------------------------------------------------------*/
 162:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Macros TIM Private Macros
 163:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 164:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 165:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @brief  Convert channel id into channel index.
 166:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 167:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
 168:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
 169:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
 170:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
 171:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
 172:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
 173:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
 174:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
 175:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
 176:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval none
 177:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 178:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIM_GET_CHANNEL_INDEX( __CHANNEL__) \
 179:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** (((__CHANNEL__) == LL_TIM_CHANNEL_CH1) ? 0U :\
 180:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH1N) ? 1U :\
 181:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH2) ? 2U :\
 182:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH2N) ? 3U :\
 183:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH3) ? 4U :\
 184:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH3N) ? 5U :\
 185:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH4) ? 6U :\
 186:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH5) ? 7U : 8U)
 187:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 188:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @brief  Calculate the deadtime sampling period(in ps).
 189:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz).
 190:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
 191:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
 192:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
 193:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
 194:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval none
 195:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 196:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIM_CALC_DTS(__TIMCLK__, __CKD__)                                                        \
 197:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****     (((__CKD__) == LL_TIM_CLOCKDIVISION_DIV1) ? ((uint64_t)1000000000000U/(__TIMCLK__))         : \
 198:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****      ((__CKD__) == LL_TIM_CLOCKDIVISION_DIV2) ? ((uint64_t)1000000000000U/((__TIMCLK__) >> 1U)) : \
 199:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****      ((uint64_t)1000000000000U/((__TIMCLK__) >> 2U)))
 200:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 201:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 202:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 203:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 204:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 205:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Exported types ------------------------------------------------------------*/
 206:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 207:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_ES_INIT TIM Exported Init structure
 208:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 209:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 210:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 211:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 212:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  TIM Time Base configuration structure definition.
 213:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 214:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** typedef struct
 215:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 216:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint16_t Prescaler;         /*!< Specifies the prescaler value used to divide the TIM clock.
 217:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This parameter can be a number between Min_Data=0x0000 and Max_D
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 45


 218:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 219:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 220:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 221:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t CounterMode;       /*!< Specifies the counter mode.
 222:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_COUNTERMODE.
 223:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 224:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 225:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 226:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t Autoreload;        /*!< Specifies the auto reload value to be loaded into the active
 227:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    Auto-Reload Register at the next update event.
 228:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This parameter must be a number between Min_Data=0x0000 and Max_
 229:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    Some timer instances may support 32 bits counters. In that case 
 230:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 231:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 232:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 233:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t ClockDivision;     /*!< Specifies the clock division.
 234:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_CLOCKDIVISION.
 235:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 236:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 237:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 238:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint8_t RepetitionCounter;  /*!< Specifies the repetition counter value. Each time the RCR downco
 239:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    reaches zero, an update event is generated and counting restarts
 240:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    from the RCR value (N).
 241:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This means in PWM mode that (N+1) corresponds to:
 242:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       - the number of PWM periods in edge-aligned mode
 243:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       - the number of half PWM period in center-aligned mode
 244:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This parameter must be a number between 0x00 and 0xFF.
 245:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 246:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 247:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** } LL_TIM_InitTypeDef;
 248:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 249:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 250:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  TIM Output Compare configuration structure definition.
 251:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 252:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** typedef struct
 253:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 254:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t OCMode;        /*!< Specifies the output mode.
 255:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCMODE.
 256:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 257:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 258:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 259:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t OCState;       /*!< Specifies the TIM Output Compare state.
 260:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 261:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 262:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions @ref
 263:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 264:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t OCNState;      /*!< Specifies the TIM complementary Output Compare state.
 265:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 266:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 267:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions @ref
 268:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 269:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t CompareValue;  /*!< Specifies the Compare value to be loaded into the Capture Compare Re
 270:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a number between Min_Data=0x0000 and Max_Data=
 271:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 272:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function LL_TI
 273:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 274:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t OCPolarity;    /*!< Specifies the output polarity.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 46


 275:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 276:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 277:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 278:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 279:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t OCNPolarity;   /*!< Specifies the complementary output polarity.
 280:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 281:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 282:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 283:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 284:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 285:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t OCIdleState;   /*!< Specifies the TIM Output Compare pin state during Idle state.
 286:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 287:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 288:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 289:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 290:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t OCNIdleState;  /*!< Specifies the TIM Output Compare pin state during Idle state.
 291:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 292:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 293:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 294:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** } LL_TIM_OC_InitTypeDef;
 295:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 296:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 297:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  TIM Input Capture configuration structure definition.
 298:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 299:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 300:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** typedef struct
 301:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 302:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 303:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t ICPolarity;    /*!< Specifies the active edge of the input signal.
 304:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 305:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 306:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 307:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 308:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t ICActiveInput; /*!< Specifies the input.
 309:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 310:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 311:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 312:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 313:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t ICPrescaler;   /*!< Specifies the Input Capture Prescaler.
 314:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 315:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 316:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 317:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 318:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t ICFilter;      /*!< Specifies the input capture filter.
 319:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 320:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 321:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 322:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** } LL_TIM_IC_InitTypeDef;
 323:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 324:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 325:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 326:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  TIM Encoder interface configuration structure definition.
 327:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 328:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** typedef struct
 329:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 330:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t EncoderMode;     /*!< Specifies the encoder resolution (x2 or x4).
 331:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ENCODERMODE.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 47


 332:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 333:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 334:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 335:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC1Polarity;     /*!< Specifies the active edge of TI1 input.
 336:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 337:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 338:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 339:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 340:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC1ActiveInput;  /*!< Specifies the TI1 input source
 341:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 342:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 343:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 344:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 345:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC1Prescaler;    /*!< Specifies the TI1 input prescaler value.
 346:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 347:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 348:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 349:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 350:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC1Filter;       /*!< Specifies the TI1 input filter.
 351:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 352:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 353:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 354:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 355:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC2Polarity;      /*!< Specifies the active edge of TI2 input.
 356:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 357:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 358:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 359:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 360:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC2ActiveInput;  /*!< Specifies the TI2 input source
 361:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 362:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 363:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 364:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 365:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC2Prescaler;    /*!< Specifies the TI2 input prescaler value.
 366:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 367:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 368:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 369:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 370:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC2Filter;       /*!< Specifies the TI2 input filter.
 371:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 372:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 373:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 374:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 375:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** } LL_TIM_ENCODER_InitTypeDef;
 376:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 377:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 378:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  TIM Hall sensor interface configuration structure definition.
 379:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 380:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** typedef struct
 381:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 382:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 383:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC1Polarity;        /*!< Specifies the active edge of TI1 input.
 384:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 385:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 386:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 387:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 388:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC1Prescaler;       /*!< Specifies the TI1 input prescaler value.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 48


 389:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     Prescaler must be set to get a maximum counter period longer th
 390:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     time interval between 2 consecutive changes on the Hall inputs.
 391:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 392:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 393:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 394:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 395:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC1Filter;          /*!< Specifies the TI1 input filter.
 396:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 397:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 398:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 399:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 400:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t CommutationDelay;   /*!< Specifies the compare value to be loaded into the Capture Compa
 401:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     A positive pulse (TRGO event) is generated with a programmable 
 402:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     a change occurs on the Hall inputs.
 403:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     This parameter can be a number between Min_Data = 0x0000 and Ma
 404:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 405:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 406:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** } LL_TIM_HALLSENSOR_InitTypeDef;
 407:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 408:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 409:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  BDTR (Break and Dead Time) structure definition
 410:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 411:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** typedef struct
 412:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 413:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t OSSRState;            /*!< Specifies the Off-State selection used in Run mode.
 414:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSR
 415:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 416:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 417:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 418:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 419:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 420:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t OSSIState;            /*!< Specifies the Off-State used in Idle state.
 421:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSI
 422:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 423:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 424:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 425:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 426:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 427:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t LockLevel;            /*!< Specifies the LOCK level parameters.
 428:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_LOCKLEVEL
 429:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 430:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note The LOCK bits can be written only once after the reset.
 431:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                             has been written, their content is frozen until the nex
 432:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 433:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint8_t DeadTime;              /*!< Specifies the delay time between the switching-off and the
 434:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       switching-on of the outputs.
 435:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a number between Min_Data = 0x00 and Ma
 436:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 437:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 438:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 439:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 440:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 441:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint16_t BreakState;           /*!< Specifies whether the TIM Break input is enabled or not.
 442:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_ENABLE
 443:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 444:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 445:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 49


 446:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 447:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 448:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t BreakPolarity;        /*!< Specifies the TIM Break Input pin polarity.
 449:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_POLARIT
 450:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 451:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 452:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 453:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 454:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 455:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t BreakFilter;          /*!< Specifies the TIM Break Filter.
 456:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_FILTER
 457:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 458:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 459:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 460:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 461:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 462:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t Break2State;          /*!< Specifies whether the TIM Break2 input is enabled or not.
 463:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_ENABLE
 464:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 465:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 466:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 467:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 468:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 469:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t Break2Polarity;        /*!< Specifies the TIM Break2 Input pin polarity.
 470:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_POLARI
 471:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 472:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 473:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 474:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 475:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 476:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t Break2Filter;          /*!< Specifies the TIM Break2 Filter.
 477:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_FILTER
 478:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 479:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 480:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 481:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 482:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 483:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t AutomaticOutput;      /*!< Specifies whether the TIM Automatic Output feature is enabled
 484:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_AUTOMATICOUTP
 485:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 486:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 487:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 488:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 489:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** } LL_TIM_BDTR_InitTypeDef;
 490:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 491:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 492:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 493:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 494:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 495:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 496:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Exported constants --------------------------------------------------------*/
 497:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Constants TIM Exported Constants
 498:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 499:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 500:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 501:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_GET_FLAG Get Flags Defines
 502:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief    Flags defines which can be used with LL_TIM_ReadReg function.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 50


 503:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 504:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 505:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_UIF                          TIM_SR_UIF           /*!< Update interrupt flag */
 506:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC1IF                        TIM_SR_CC1IF         /*!< Capture/compare 1 interrup
 507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC2IF                        TIM_SR_CC2IF         /*!< Capture/compare 2 interrup
 508:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC3IF                        TIM_SR_CC3IF         /*!< Capture/compare 3 interrup
 509:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC4IF                        TIM_SR_CC4IF         /*!< Capture/compare 4 interrup
 510:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC5IF                        TIM_SR_CC5IF         /*!< Capture/compare 5 interrup
 511:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC6IF                        TIM_SR_CC6IF         /*!< Capture/compare 6 interrup
 512:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_COMIF                        TIM_SR_COMIF         /*!< COM interrupt flag */
 513:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_TIF                          TIM_SR_TIF           /*!< Trigger interrupt flag */
 514:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_BIF                          TIM_SR_BIF           /*!< Break interrupt flag */
 515:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_B2IF                         TIM_SR_B2IF          /*!< Second break interrupt fla
 516:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC1OF                        TIM_SR_CC1OF         /*!< Capture/Compare 1 overcapt
 517:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC2OF                        TIM_SR_CC2OF         /*!< Capture/Compare 2 overcapt
 518:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC3OF                        TIM_SR_CC3OF         /*!< Capture/Compare 3 overcapt
 519:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC4OF                        TIM_SR_CC4OF         /*!< Capture/Compare 4 overcapt
 520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_SBIF                         TIM_SR_SBIF          /*!< System Break interrupt fla
 521:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 522:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 523:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 524:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 525:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 526:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_ENABLE Break Enable
 527:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 528:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 529:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_DISABLE            0x00000000U             /*!< Break function disabled */
 530:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_ENABLE             TIM_BDTR_BKE            /*!< Break function enabled */
 531:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 532:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 533:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 534:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 535:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_ENABLE Break2 Enable
 536:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 537:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 538:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_DISABLE            0x00000000U              /*!< Break2 function disabled */
 539:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_ENABLE             TIM_BDTR_BK2E            /*!< Break2 function enabled */
 540:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 541:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 542:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 543:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 544:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_AUTOMATICOUTPUT_ENABLE Automatic output enable
 545:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 546:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 547:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_DISABLE         0x00000000U             /*!< MOE can be set only by 
 548:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_ENABLE          TIM_BDTR_AOE            /*!< MOE can be set by softw
 549:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 550:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 551:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 552:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 553:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 554:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IT IT Defines
 555:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief    IT defines which can be used with LL_TIM_ReadReg and  LL_TIM_WriteReg functions.
 556:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 557:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 558:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DIER_UIE                        TIM_DIER_UIE         /*!< Update interrupt enable */
 559:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DIER_CC1IE                      TIM_DIER_CC1IE       /*!< Capture/compare 1 interrup
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 51


 560:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DIER_CC2IE                      TIM_DIER_CC2IE       /*!< Capture/compare 2 interrup
 561:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DIER_CC3IE                      TIM_DIER_CC3IE       /*!< Capture/compare 3 interrup
 562:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DIER_CC4IE                      TIM_DIER_CC4IE       /*!< Capture/compare 4 interrup
 563:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DIER_COMIE                      TIM_DIER_COMIE       /*!< COM interrupt enable */
 564:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DIER_TIE                        TIM_DIER_TIE         /*!< Trigger interrupt enable *
 565:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DIER_BIE                        TIM_DIER_BIE         /*!< Break interrupt enable */
 566:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 567:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 568:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 569:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 570:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_UPDATESOURCE Update Source
 571:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 572:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 573:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_REGULAR            0x00000000U          /*!< Counter overflow/underflow
 574:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_COUNTER            TIM_CR1_URS          /*!< Only counter overflow/unde
 575:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 576:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 577:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 578:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 579:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ONEPULSEMODE One Pulse Mode
 580:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 581:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 582:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_SINGLE             TIM_CR1_OPM          /*!< Counter is not stopped at 
 583:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_REPETITIVE         0x00000000U          /*!< Counter stops counting at 
 584:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 585:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 586:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 587:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 588:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERMODE Counter Mode
 589:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 590:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 591:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_UP                  0x00000000U          /*!<Counter used as upcounter *
 592:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_DOWN                TIM_CR1_DIR          /*!< Counter used as downcounte
 593:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP           TIM_CR1_CMS_0        /*!< The counter counts up and 
 594:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_DOWN         TIM_CR1_CMS_1        /*!<The counter counts up and d
 595:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP_DOWN      TIM_CR1_CMS          /*!< The counter counts up and 
 596:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 597:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 598:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 599:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 600:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKDIVISION Clock Division
 601:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 602:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 603:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV1              0x00000000U          /*!< tDTS=tCK_INT */
 604:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV2              TIM_CR1_CKD_0        /*!< tDTS=2*tCK_INT */
 605:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV4              TIM_CR1_CKD_1        /*!< tDTS=4*tCK_INT */
 606:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 607:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 608:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 609:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 610:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERDIRECTION Counter Direction
 611:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 612:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 613:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_UP             0x00000000U          /*!< Timer counter counts up */
 614:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_DOWN           TIM_CR1_DIR          /*!< Timer counter counts down 
 615:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 616:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 52


 617:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 618:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 619:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCUPDATESOURCE Capture Compare  Update Source
 620:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 621:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 622:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_ONLY        0x00000000U          /*!< Capture/compare control bi
 623:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI    TIM_CR2_CCUS         /*!< Capture/compare control bi
 624:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 625:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 626:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 627:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 628:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCDMAREQUEST Capture Compare DMA Request
 629:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 630:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 631:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_CC                 0x00000000U          /*!< CCx DMA request sent when 
 632:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_UPDATE             TIM_CR2_CCDS         /*!< CCx DMA requests sent when
 633:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 634:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 635:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 636:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 637:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_LOCKLEVEL Lock Level
 638:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 639:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 640:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_OFF                   0x00000000U          /*!< LOCK OFF - No bit is write
 641:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_1                     TIM_BDTR_LOCK_0      /*!< LOCK Level 1 */
 642:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_2                     TIM_BDTR_LOCK_1      /*!< LOCK Level 2 */
 643:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_3                     TIM_BDTR_LOCK        /*!< LOCK Level 3 */
 644:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 645:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 646:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 647:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 648:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CHANNEL Channel
 649:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 650:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 651:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1                     TIM_CCER_CC1E     /*!< Timer input/output channel 1 
 652:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1N                    TIM_CCER_CC1NE    /*!< Timer complementary output ch
 653:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2                     TIM_CCER_CC2E     /*!< Timer input/output channel 2 
 654:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2N                    TIM_CCER_CC2NE    /*!< Timer complementary output ch
 655:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3                     TIM_CCER_CC3E     /*!< Timer input/output channel 3 
 656:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3N                    TIM_CCER_CC3NE    /*!< Timer complementary output ch
 657:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH4                     TIM_CCER_CC4E     /*!< Timer input/output channel 4 
 658:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH5                     TIM_CCER_CC5E     /*!< Timer output channel 5 */
 659:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH6                     TIM_CCER_CC6E     /*!< Timer output channel 6 */
 660:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 661:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 662:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 663:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 664:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 665:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCSTATE Output Configuration State
 666:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 667:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 668:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCSTATE_DISABLE                 0x00000000U             /*!< OCx is not active */
 669:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCSTATE_ENABLE                  TIM_CCER_CC1E           /*!< OCx signal is output on
 670:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 671:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 672:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 673:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 53


 674:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 675:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCMODE Output Configuration Mode
 676:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 677:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 678:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_FROZEN                   0x00000000U                                         
 679:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_ACTIVE                   TIM_CCMR1_OC1M_0                                    
 680:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_INACTIVE                 TIM_CCMR1_OC1M_1                                    
 681:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_TOGGLE                   (TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_0)               
 682:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_INACTIVE          TIM_CCMR1_OC1M_2                                    
 683:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_ACTIVE            (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_0)               
 684:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM1                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1)               
 685:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM2                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1
 686:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_RETRIG_OPM1              TIM_CCMR1_OC1M_3                                    
 687:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_RETRIG_OPM2              (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_0)               
 688:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_COMBINED_PWM1            (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_2)               
 689:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_COMBINED_PWM2            (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_0 | TIM_CCMR1_OC1
 690:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_ASSYMETRIC_PWM1          (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1
 691:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_ASSYMETRIC_PWM2          (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M)                 
 692:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 693:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 694:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 695:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 696:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCPOLARITY Output Configuration Polarity
 697:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 698:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 699:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_HIGH                 0x00000000U                 /*!< OCxactive high*/
 700:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_LOW                  TIM_CCER_CC1P               /*!< OCxactive low*/
 701:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 702:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 703:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 704:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 705:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCIDLESTATE Output Configuration Idle State
 706:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 707:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 708:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_LOW                 0x00000000U             /*!<OCx=0 (after a dead-time
 709:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_HIGH                TIM_CR2_OIS1            /*!<OCx=1 (after a dead-time
 710:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 711:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 712:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 713:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 714:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_GROUPCH5 GROUPCH5
 715:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 716:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 717:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_GROUPCH5_NONE                   0x00000000U           /*!< No effect of OC5REF on OC
 718:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_GROUPCH5_OC1REFC                TIM_CCR5_GC5C1        /*!< OC1REFC is the logical AN
 719:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_GROUPCH5_OC2REFC                TIM_CCR5_GC5C2        /*!< OC2REFC is the logical AN
 720:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_GROUPCH5_OC3REFC                TIM_CCR5_GC5C3        /*!< OC3REFC is the logical AN
 721:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 722:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 723:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 724:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 725:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ACTIVEINPUT Active Input Selection
 726:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 727:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 728:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_DIRECTTI            (TIM_CCMR1_CC1S_0 << 16U) /*!< ICx is mapped on TIx 
 729:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_INDIRECTTI          (TIM_CCMR1_CC1S_1 << 16U) /*!< ICx is mapped on TIy 
 730:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_TRC                 (TIM_CCMR1_CC1S << 16U)   /*!< ICx is mapped on TRC 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 54


 731:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 732:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 733:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 734:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 735:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ICPSC Input Configuration Prescaler
 736:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 737:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 738:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV1                      0x00000000U                    /*!< No prescaler, ca
 739:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV2                      (TIM_CCMR1_IC1PSC_0 << 16U)    /*!< Capture is done 
 740:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV4                      (TIM_CCMR1_IC1PSC_1 << 16U)    /*!< Capture is done 
 741:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV8                      (TIM_CCMR1_IC1PSC << 16U)      /*!< Capture is done 
 742:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 743:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 744:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 745:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 746:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_FILTER Input Configuration Filter
 747:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 748:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 749:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1                 0x00000000U                                         
 750:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N2              (TIM_CCMR1_IC1F_0 << 16U)                           
 751:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N4              (TIM_CCMR1_IC1F_1 << 16U)                           
 752:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N8              ((TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC1F_0) << 16U)      
 753:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N6              (TIM_CCMR1_IC1F_2 << 16U)                           
 754:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_0) << 16U)      
 755:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N6              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1) << 16U)      
 756:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 757:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N6              (TIM_CCMR1_IC1F_3 << 16U)                           
 758:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N8              ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_0) << 16U)      
 759:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1) << 16U)      
 760:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 761:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N8             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2) << 16U)      
 762:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 763:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 764:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N8             (TIM_CCMR1_IC1F << 16U)                             
 765:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 766:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 767:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 768:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 769:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_POLARITY Input Configuration Polarity
 770:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 771:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 772:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_RISING              0x00000000U                      /*!< The circuit is
 773:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_FALLING             TIM_CCER_CC1P                    /*!< The circuit is
 774:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_BOTHEDGE            (TIM_CCER_CC1P | TIM_CCER_CC1NP) /*!< The circuit is
 775:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 776:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 777:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 778:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 779:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKSOURCE Clock Source
 780:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 781:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 782:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_INTERNAL            0x00000000U                                         
 783:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE1           (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)  
 784:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE2           TIM_SMCR_ECE                                        
 785:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 786:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 787:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 55


 788:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 789:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ENCODERMODE Encoder Mode
 790:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 791:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 792:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI1                     TIM_SMCR_SMS_0                               
 793:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI2                     TIM_SMCR_SMS_1                               
 794:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X4_TI12                   (TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)             
 795:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 796:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 797:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 798:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 799:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TRGO Trigger Output
 800:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 801:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 802:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO_RESET                      0x00000000U                                     /*!<
 803:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO_ENABLE                     TIM_CR2_MMS_0                                   /*!<
 804:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO_UPDATE                     TIM_CR2_MMS_1                                   /*!<
 805:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO_CC1IF                      (TIM_CR2_MMS_1 | TIM_CR2_MMS_0)                 /*!<
 806:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO_OC1REF                     TIM_CR2_MMS_2                                   /*!<
 807:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO_OC2REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_0)                 /*!<
 808:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO_OC3REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1)                 /*!<
 809:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO_OC4REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1 | TIM_CR2_MMS_0) /*!<
 810:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 811:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 812:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 813:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 814:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TRGO2 Trigger Output 2
 815:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 816:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 817:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_RESET                     0x00000000U                                         
 818:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_ENABLE                    TIM_CR2_MMS2_0                                      
 819:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_UPDATE                    TIM_CR2_MMS2_1                                      
 820:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_CC1F                      (TIM_CR2_MMS2_1 | TIM_CR2_MMS2_0)                   
 821:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC1                       TIM_CR2_MMS2_2                                      
 822:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC2                       (TIM_CR2_MMS2_2 | TIM_CR2_MMS2_0)                   
 823:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC3                       (TIM_CR2_MMS2_2 | TIM_CR2_MMS2_1)                   
 824:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4                       (TIM_CR2_MMS2_2 | TIM_CR2_MMS2_1 | TIM_CR2_MMS2_0)  
 825:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC5                       TIM_CR2_MMS2_3                                      
 826:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC6                       (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_0)                   
 827:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4_RISINGFALLING         (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_1)                   
 828:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC6_RISINGFALLING         (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_1 | TIM_CR2_MMS2_0)  
 829:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4_RISING_OC6_RISING     (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2)                   
 830:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4_RISING_OC6_FALLING    (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2 | TIM_CR2_MMS2_0)  
 831:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC5_RISING_OC6_RISING     (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2 |TIM_CR2_MMS2_1)   
 832:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC5_RISING_OC6_FALLING    (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2 | TIM_CR2_MMS2_1 | 
 833:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 834:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 835:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 836:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 837:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_SLAVEMODE Slave Mode
 838:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 839:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 840:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_DISABLED              0x00000000U                         /*!< Slave mode 
 841:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_RESET                 TIM_SMCR_SMS_2                      /*!< Reset Mode 
 842:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_GATED                 (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_0)   /*!< Gated Mode 
 843:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_TRIGGER               (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1)   /*!< Trigger Mod
 844:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_COMBINED_RESETTRIGGER TIM_SMCR_SMS_3                      /*!< Combined re
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 56


 845:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 846:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 847:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 848:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 849:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TS Trigger Selection
 850:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 851:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 852:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TS_ITR0                         0x00000000U                                         
 853:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TS_ITR1                         TIM_SMCR_TS_0                                       
 854:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TS_ITR2                         TIM_SMCR_TS_1                                       
 855:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TS_ITR3                         (TIM_SMCR_TS_0 | TIM_SMCR_TS_1)                     
 856:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TS_TI1F_ED                      TIM_SMCR_TS_2                                       
 857:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TS_TI1FP1                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_0)                     
 858:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TS_TI2FP2                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_1)                     
 859:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TS_ETRF                         (TIM_SMCR_TS_2 | TIM_SMCR_TS_1 | TIM_SMCR_TS_0)     
 860:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 861:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 862:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 863:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 864:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_POLARITY External Trigger Polarity
 865:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 866:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 867:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_NONINVERTED        0x00000000U             /*!< ETR is non-inverted, ac
 868:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_INVERTED           TIM_SMCR_ETP            /*!< ETR is inverted, active
 869:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 870:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 871:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 872:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 873:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_PRESCALER External Trigger Prescaler
 874:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 875:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 876:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV1              0x00000000U             /*!< ETR prescaler OFF */
 877:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV2              TIM_SMCR_ETPS_0         /*!< ETR frequency is divide
 878:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV4              TIM_SMCR_ETPS_1         /*!< ETR frequency is divide
 879:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV8              TIM_SMCR_ETPS           /*!< ETR frequency is divide
 880:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 881:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 882:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 883:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 884:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_FILTER External Trigger Filter
 885:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 886:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 887:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1                0x00000000U                                         
 888:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N2             TIM_SMCR_ETF_0                                      
 889:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N4             TIM_SMCR_ETF_1                                      
 890:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N8             (TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)                   
 891:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N6             TIM_SMCR_ETF_2                                      
 892:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)                   
 893:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N6             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)                   
 894:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 895:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N6             TIM_SMCR_ETF_3                                      
 896:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N8             (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_0)                   
 897:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1)                   
 898:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 899:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N8            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2)                   
 900:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)  
 901:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)  
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 57


 902:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N8            TIM_SMCR_ETF                                        
 903:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 904:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 905:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 906:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 907:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 908:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_POLARITY break polarity
 909:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 910:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 911:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_LOW              0x00000000U               /*!< Break input BRK is ac
 912:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_HIGH             TIM_BDTR_BKP              /*!< Break input BRK is ac
 913:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 914:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 915:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 916:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 917:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_FILTER break filter
 918:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 919:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 920:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1              0x00000000U   /*!< No filter, BRK acts asynchronousl
 921:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1_N2           0x00010000U   /*!< fSAMPLING=fCK_INT, N=2 */
 922:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1_N4           0x00020000U   /*!< fSAMPLING=fCK_INT, N=4 */
 923:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1_N8           0x00030000U   /*!< fSAMPLING=fCK_INT, N=8 */
 924:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV2_N6           0x00040000U   /*!< fSAMPLING=fDTS/2, N=6 */
 925:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV2_N8           0x00050000U   /*!< fSAMPLING=fDTS/2, N=8 */
 926:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV4_N6           0x00060000U   /*!< fSAMPLING=fDTS/4, N=6 */
 927:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV4_N8           0x00070000U   /*!< fSAMPLING=fDTS/4, N=8 */
 928:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV8_N6           0x00080000U   /*!< fSAMPLING=fDTS/8, N=6 */
 929:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV8_N8           0x00090000U   /*!< fSAMPLING=fDTS/8, N=8 */
 930:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV16_N5          0x000A0000U   /*!< fSAMPLING=fDTS/16, N=5 */
 931:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV16_N6          0x000B0000U   /*!< fSAMPLING=fDTS/16, N=6 */
 932:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV16_N8          0x000C0000U   /*!< fSAMPLING=fDTS/16, N=8 */
 933:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV32_N5          0x000D0000U   /*!< fSAMPLING=fDTS/32, N=5 */
 934:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV32_N6          0x000E0000U   /*!< fSAMPLING=fDTS/32, N=6 */
 935:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV32_N8          0x000F0000U   /*!< fSAMPLING=fDTS/32, N=8 */
 936:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 937:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 938:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 939:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 940:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_POLARITY BREAK2 POLARITY
 941:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 942:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 943:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_POLARITY_LOW             0x00000000U             /*!< Break input BRK2 is act
 944:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_POLARITY_HIGH            TIM_BDTR_BK2P           /*!< Break input BRK2 is act
 945:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 946:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 947:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 948:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 949:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_FILTER BREAK2 FILTER
 950:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 951:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 952:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1             0x00000000U   /*!< No filter, BRK acts asynchronousl
 953:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1_N2          0x00100000U   /*!< fSAMPLING=fCK_INT, N=2 */
 954:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1_N4          0x00200000U   /*!< fSAMPLING=fCK_INT, N=4 */
 955:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1_N8          0x00300000U   /*!< fSAMPLING=fCK_INT, N=8 */
 956:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV2_N6          0x00400000U   /*!< fSAMPLING=fDTS/2, N=6 */
 957:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV2_N8          0x00500000U   /*!< fSAMPLING=fDTS/2, N=8 */
 958:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV4_N6          0x00600000U   /*!< fSAMPLING=fDTS/4, N=6 */
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 58


 959:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV4_N8          0x00700000U   /*!< fSAMPLING=fDTS/4, N=8 */
 960:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV8_N6          0x00800000U   /*!< fSAMPLING=fDTS/8, N=6 */
 961:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV8_N8          0x00900000U   /*!< fSAMPLING=fDTS/8, N=8 */
 962:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV16_N5         0x00A00000U   /*!< fSAMPLING=fDTS/16, N=5 */
 963:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV16_N6         0x00B00000U   /*!< fSAMPLING=fDTS/16, N=6 */
 964:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV16_N8         0x00C00000U   /*!< fSAMPLING=fDTS/16, N=8 */
 965:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV32_N5         0x00D00000U   /*!< fSAMPLING=fDTS/32, N=5 */
 966:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV32_N6         0x00E00000U   /*!< fSAMPLING=fDTS/32, N=6 */
 967:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV32_N8         0x00F00000U   /*!< fSAMPLING=fDTS/32, N=8 */
 968:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 969:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 970:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 971:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 972:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSI OSSI
 973:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 974:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 975:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OSSI_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
 976:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OSSI_ENABLE                     TIM_BDTR_OSSI           /*!< When inactive, OxC/OCxN
 977:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 978:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 979:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 980:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 981:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSR OSSR
 982:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 983:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 984:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OSSR_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
 985:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OSSR_ENABLE                     TIM_BDTR_OSSR           /*!< When inactive, OC/OCN o
 986:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 987:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 988:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 989:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 990:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #if   defined(TIM_BREAK_INPUT_SUPPORT)
 991:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_INPUT BREAK INPUT
 992:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 993:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 994:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_INPUT_BKIN                0x00000000U  /*!< TIMx_BKIN input */
 995:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_INPUT_BKIN2               0x00000004U  /*!< TIMx_BKIN2 input */
 996:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 997:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 998:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 999:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1000:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BKIN_SOURCE BKIN SOURCE
1001:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1002:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1003:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKIN                TIM1_AF1_BKINE      /*!< BKIN input from AF controll
1004:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_DF1BK               TIM1_AF1_BKDF1BKE   /*!< internal signal: DFSDM1 bre
1005:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1006:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1007:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1008:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1009:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BKIN_POLARITY BKIN POLARITY
1010:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1011:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1012:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BKIN_POLARITY_LOW               TIM1_AF1_BKINP           /*!< BRK BKIN input is acti
1013:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BKIN_POLARITY_HIGH              0x00000000U              /*!< BRK BKIN input is acti
1014:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1015:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 59


1016:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1017:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #endif /* TIM_BREAK_INPUT_SUPPORT */
1018:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1019:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_BASEADDR DMA Burst Base Address
1020:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1021:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1022:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR1           0x00000000U                                         
1023:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR2           TIM_DCR_DBA_0                                       
1024:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SMCR          TIM_DCR_DBA_1                                       
1025:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_DIER          (TIM_DCR_DBA_1 |  TIM_DCR_DBA_0)                    
1026:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SR            TIM_DCR_DBA_2                                       
1027:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_EGR           (TIM_DCR_DBA_2 | TIM_DCR_DBA_0)                     
1028:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR1         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1)                     
1029:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR2         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
1030:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCER          TIM_DCR_DBA_3                                       
1031:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CNT           (TIM_DCR_DBA_3 | TIM_DCR_DBA_0)                     
1032:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_PSC           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1)                     
1033:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_ARR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
1034:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_RCR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_2)                     
1035:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR1          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_0)     
1036:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR2          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1)     
1037:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR3          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM
1038:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR4          TIM_DCR_DBA_4                                       
1039:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_BDTR          (TIM_DCR_DBA_4 | TIM_DCR_DBA_0)                     
1040:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_OR            (TIM_DCR_DBA_4 | TIM_DCR_DBA_2)                     
1041:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR3         (TIM_DCR_DBA_4 | TIM_DCR_DBA_2 | TIM_DCR_DBA_0)     
1042:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR5          (TIM_DCR_DBA_4 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1)     
1043:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR6          (TIM_DCR_DBA_4 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM
1044:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #if defined(TIM_AF1_BKINE)&&defined(TIM_AF2_BKINE)
1045:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_AF1           (TIM_DCR_DBA_4 | TIM_DCR_DBA_3)                     
1046:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_AF2           (TIM_DCR_DBA_4 | TIM_DCR_DBA_3 | TIM_DCR_DBA_0)     
1047:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #endif /* TIM_AF1_BKINE && TIM_AF2_BKINE */
1048:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1049:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1050:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1051:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1052:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_LENGTH DMA Burst Length
1053:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1054:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1055:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_1TRANSFER       0x00000000U                                         
1056:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_2TRANSFERS      TIM_DCR_DBL_0                                       
1057:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_3TRANSFERS      TIM_DCR_DBL_1                                       
1058:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_4TRANSFERS      (TIM_DCR_DBL_1 |  TIM_DCR_DBL_0)                    
1059:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_5TRANSFERS      TIM_DCR_DBL_2                                       
1060:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_6TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_0)                     
1061:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_7TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1)                     
1062:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_8TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
1063:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_9TRANSFERS      TIM_DCR_DBL_3                                       
1064:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_10TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_0)                     
1065:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_11TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1)                     
1066:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_12TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
1067:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_13TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2)                     
1068:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_14TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_0)     
1069:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_15TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1)     
1070:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_16TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM
1071:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_17TRANSFERS     TIM_DCR_DBL_4                                       
1072:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_18TRANSFERS     (TIM_DCR_DBL_4 |  TIM_DCR_DBL_0)                    
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 60


1073:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1074:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1075:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1076:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1077:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1078:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_ITR1_RMP_TIM8  TIM2 Internal Trigger1 Remap TIM8
1079:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1080:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1081:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM2_ITR1_RMP_TIM8_TRGO    TIM2_OR_RMP_MASK                           /*!< TIM2_ITR1
1082:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM2_ITR1_RMP_ETH_PTP      (TIM2_OR_ITR1_RMP_0 | TIM2_OR_RMP_MASK)    /*!< TIM2_ITR1
1083:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM2_ITR1_RMP_OTG_FS_SOF   (TIM2_OR_ITR1_RMP_1 | TIM2_OR_RMP_MASK)    /*!< TIM2_ITR1
1084:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM2_ITR1_RMP_OTG_HS_SOF   (TIM2_OR_ITR1_RMP | TIM2_OR_RMP_MASK)      /*!< TIM2_ITR1
1085:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1086:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1087:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1088:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1089:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM5_TI4_RMP  TIM5 External Input Ch4 Remap
1090:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1091:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1092:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM5_TI4_RMP_GPIO        TIM5_OR_RMP_MASK                             /*!< TIM5 chan
1093:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM5_TI4_RMP_LSI         (TIM5_OR_TI4_RMP_0 | TIM5_OR_RMP_MASK)       /*!< TIM5 chan
1094:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM5_TI4_RMP_LSE         (TIM5_OR_TI4_RMP_1 | TIM5_OR_RMP_MASK)       /*!< TIM5 chan
1095:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM5_TI4_RMP_RTC         (TIM5_OR_TI4_RMP | TIM5_OR_RMP_MASK)         /*!< TIM5 chan
1096:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1097:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1098:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1099:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1100:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM11_TI1_RMP  TIM11 External Input Capture 1 Remap
1101:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1102:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1103:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_GPIO        TIM11_OR_RMP_MASK                           /*!< TIM11 cha
1104:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_SPDIFRX     (TIM11_OR_TI1_RMP_0 | TIM11_OR_RMP_MASK)    /*!< TIM11 cha
1105:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_HSE         (TIM11_OR_TI1_RMP_1 | TIM11_OR_RMP_MASK)    /*!< TIM11 cha
1106:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_MCO1        (TIM11_OR_TI1_RMP | TIM11_OR_RMP_MASK)      /*!< TIM11 cha
1107:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1108:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1109:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1110:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1111:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1112:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1113:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1114:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1115:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1116:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1117:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1118:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1119:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Exported macro ------------------------------------------------------------*/
1120:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Macros TIM Exported Macros
1121:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1122:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1123:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1124:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EM_WRITE_READ Common Write and read registers Macros
1125:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1126:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1127:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1128:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Write a value in TIM register.
1129:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 61


1130:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __REG__ Register to be written
1131:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __VALUE__ Value to be written in the register
1132:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1133:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1134:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG((__INSTANCE__)->__REG__, (__VAL
1135:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1136:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1137:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Read a value in TIM register.
1138:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
1139:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __REG__ Register to be read
1140:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Register value
1141:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1142:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ReadReg(__INSTANCE__, __REG__) READ_REG((__INSTANCE__)->__REG__)
1143:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1144:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1145:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1146:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1147:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EM_Exported_Macros Exported_Macros
1148:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1149:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1150:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1151:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1152:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  HELPER macro retrieving the UIFCPY flag from the counter value.
1153:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_GETFLAG_UIFCPY (@ref LL_TIM_GetCounter ());
1154:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note  Relevant only if UIF flag remapping has been enabled  (UIF status bit is copied
1155:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *        to TIMx_CNT register bit 31)
1156:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __CNT__ Counter value
1157:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval UIF status bit
1158:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1159:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define __LL_TIM_GETFLAG_UIFCPY(__CNT__)  \
1160:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****    (READ_BIT((__CNT__), TIM_CNT_UIFCPY) >> TIM_CNT_UIFCPY_Pos)
1161:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1162:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1163:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  HELPER macro calculating DTG[0:7] in the TIMx_BDTR register to achieve the requested de
1164:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DEADTIME (80000000, @ref LL_TIM_GetClockDivision (), 120);
1165:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1166:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
1167:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1168:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1169:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1170:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __DT__ deadtime duration (in ns)
1171:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval DTG[0:7]
1172:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1173:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define __LL_TIM_CALC_DEADTIME(__TIMCLK__, __CKD__, __DT__)  \
1174:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****     ( (((uint64_t)((__DT__)*1000U)) < ((DT_DELAY_1+1U) * TIM_CALC_DTS((__TIMCLK__), (__CKD__))))   
1175:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****       (((uint64_t)((__DT__)*1000U)) < ((64U + (DT_DELAY_2+1U)) * 2U * TIM_CALC_DTS((__TIMCLK__), (_
1176:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****       (((uint64_t)((__DT__)*1000U)) < ((32U + (DT_DELAY_3+1U)) * 8U * TIM_CALC_DTS((__TIMCLK__), (_
1177:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****       (((uint64_t)((__DT__)*1000U)) < ((32U + (DT_DELAY_4+1U)) * 16U * TIM_CALC_DTS((__TIMCLK__), (
1178:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****        0U)
1179:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1180:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1181:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  HELPER macro calculating the prescaler value to achieve the required counter clock freq
1182:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PSC (80000000, 1000000);
1183:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1184:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __CNTCLK__ counter clock frequency (in Hz)
1185:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Prescaler value  (between Min_Data=0 and Max_Data=65535)
1186:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 62


1187:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define __LL_TIM_CALC_PSC(__TIMCLK__, __CNTCLK__)   \
1188:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****    (((__TIMCLK__) >= (__CNTCLK__)) ? (uint32_t)(((__TIMCLK__)/(__CNTCLK__)) - 1U) : 0U)
1189:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1190:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1191:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required output signal fr
1192:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_ARR (1000000, @ref LL_TIM_GetPrescaler (), 10000);
1193:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1194:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __PSC__ prescaler
1195:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __FREQ__ output signal frequency (in Hz)
1196:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval  Auto-reload value  (between Min_Data=0 and Max_Data=65535)
1197:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1198:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define __LL_TIM_CALC_ARR(__TIMCLK__, __PSC__, __FREQ__) \
1199:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****      ((((__TIMCLK__)/((__PSC__) + 1U)) >= (__FREQ__)) ? (((__TIMCLK__)/((__FREQ__) * ((__PSC__) + 1
1200:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1201:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1202:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  HELPER macro calculating the compare value required to achieve the required timer outpu
1203:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DELAY (1000000, @ref LL_TIM_GetPrescaler (), 10);
1204:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1205:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __PSC__ prescaler
1206:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1207:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Compare value  (between Min_Data=0 and Max_Data=65535)
1208:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1209:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define __LL_TIM_CALC_DELAY(__TIMCLK__, __PSC__, __DELAY__)  \
1210:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** ((uint32_t)(((uint64_t)(__TIMCLK__) * (uint64_t)(__DELAY__)) \
1211:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****           / ((uint64_t)1000000U * (uint64_t)((__PSC__) + 1U))))
1212:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1213:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1214:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required pulse duration (
1215:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PULSE (1000000, @ref LL_TIM_GetPrescaler (), 10, 20);
1216:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1217:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __PSC__ prescaler
1218:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1219:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __PULSE__ pulse duration (in us)
1220:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Auto-reload value  (between Min_Data=0 and Max_Data=65535)
1221:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1222:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define __LL_TIM_CALC_PULSE(__TIMCLK__, __PSC__, __DELAY__, __PULSE__)  \
1223:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****  ((uint32_t)(__LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__PULSE__)) \
1224:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****            + __LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__DELAY__))))
1225:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1226:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1227:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  HELPER macro retrieving the ratio of the input capture prescaler
1228:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_GET_ICPSC_RATIO (@ref LL_TIM_IC_GetPrescaler ());
1229:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __ICPSC__ This parameter can be one of the following values:
1230:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
1231:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
1232:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
1233:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
1234:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Input capture prescaler ratio (1, 2, 4 or 8)
1235:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1236:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define __LL_TIM_GET_ICPSC_RATIO(__ICPSC__)  \
1237:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****    ((uint32_t)(0x01U << (((__ICPSC__) >> 16U) >> TIM_CCMR1_IC1PSC_Pos)))
1238:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1239:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1240:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1241:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1242:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1243:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 63


1244:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1245:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1246:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1247:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1248:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1249:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Exported functions --------------------------------------------------------*/
1250:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Functions TIM Exported Functions
1251:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1252:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1253:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1254:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Time_Base Time Base configuration
1255:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1256:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1257:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1258:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable timer counter.
1259:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_EnableCounter
1260:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1261:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1262:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1263:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableCounter(TIM_TypeDef *TIMx)
1264:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1265:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_CEN);
1266:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1267:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1268:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1269:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable timer counter.
1270:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_DisableCounter
1271:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1272:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1273:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1274:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableCounter(TIM_TypeDef *TIMx)
1275:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1276:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_CEN);
1277:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1278:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1279:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1280:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Indicates whether the timer counter is enabled.
1281:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_IsEnabledCounter
1282:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1283:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1284:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1285:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledCounter(TIM_TypeDef *TIMx)
1286:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1287:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_CEN) == (TIM_CR1_CEN)) ? 1UL : 0UL);
1288:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1289:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1290:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1291:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable update event generation.
1292:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_EnableUpdateEvent
1293:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1294:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1295:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1296:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableUpdateEvent(TIM_TypeDef *TIMx)
1297:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1298:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_UDIS);
1299:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1300:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 64


1301:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1302:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable update event generation.
1303:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_DisableUpdateEvent
1304:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1305:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1306:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1307:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableUpdateEvent(TIM_TypeDef *TIMx)
1308:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1309:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_UDIS);
1310:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1311:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1312:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1313:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Indicates whether update event generation is enabled.
1314:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_IsEnabledUpdateEvent
1315:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1316:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Inverted state of bit (0 or 1).
1317:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1318:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledUpdateEvent(TIM_TypeDef *TIMx)
1319:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1320:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_UDIS) == (uint32_t)RESET) ? 1UL : 0UL);
1321:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1322:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1323:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1324:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set update event source
1325:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_REGULAR: any of the following events
1326:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       generate an update interrupt or DMA request if enabled:
1327:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *        - Counter overflow/underflow
1328:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *        - Setting the UG bit
1329:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *        - Update generation through the slave mode controller
1330:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_COUNTER: only counter
1331:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       overflow/underflow generates an update interrupt or DMA request if enabled.
1332:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_SetUpdateSource
1333:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1334:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  UpdateSource This parameter can be one of the following values:
1335:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
1336:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
1337:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1338:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1339:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetUpdateSource(TIM_TypeDef *TIMx, uint32_t UpdateSource)
1340:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1341:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_URS, UpdateSource);
1342:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1343:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1344:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1345:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get actual event update source
1346:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_GetUpdateSource
1347:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1348:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1349:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
1350:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
1351:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1352:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetUpdateSource(TIM_TypeDef *TIMx)
1353:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1354:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_URS));
1355:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1356:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1357:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 65


1358:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set one pulse mode (one shot v.s. repetitive).
1359:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_SetOnePulseMode
1360:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1361:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  OnePulseMode This parameter can be one of the following values:
1362:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
1363:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
1364:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1365:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1366:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOnePulseMode(TIM_TypeDef *TIMx, uint32_t OnePulseMode)
1367:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1368:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_OPM, OnePulseMode);
1369:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1370:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1371:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1372:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get actual one pulse mode.
1373:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_GetOnePulseMode
1374:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1375:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1376:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
1377:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
1378:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1379:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetOnePulseMode(TIM_TypeDef *TIMx)
1380:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1381:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_OPM));
1382:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1383:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1384:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1385:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the timer counter counting mode.
1386:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1387:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1388:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       by a timer instance.
1389:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Switching from Center Aligned counter mode to Edge counter mode (or reverse)
1390:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       requires a timer reset to avoid unexpected direction
1391:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       due to DIR bit readonly in center aligned mode.
1392:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_SetCounterMode\n
1393:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_SetCounterMode
1394:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1395:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  CounterMode This parameter can be one of the following values:
1396:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1397:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1398:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1399:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1400:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1401:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1402:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1403:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounterMode(TIM_TypeDef *TIMx, uint32_t CounterMode)
1404:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1405:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, (TIM_CR1_DIR | TIM_CR1_CMS), CounterMode);
1406:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1407:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1408:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1409:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get actual counter mode.
1410:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1411:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1412:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       by a timer instance.
1413:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetCounterMode\n
1414:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_GetCounterMode
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 66


1415:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1416:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1417:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1418:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1419:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1420:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1421:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1422:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1423:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounterMode(TIM_TypeDef *TIMx)
1424:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1425:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR | TIM_CR1_CMS));
1426:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1427:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1428:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1429:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable auto-reload (ARR) preload.
1430:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_EnableARRPreload
1431:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1432:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1433:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1434:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableARRPreload(TIM_TypeDef *TIMx)
1435:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1436:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_ARPE);
1437:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1438:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1439:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1440:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable auto-reload (ARR) preload.
1441:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_DisableARRPreload
1442:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1443:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1444:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1445:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableARRPreload(TIM_TypeDef *TIMx)
 268              		.loc 3 1445 22 view .LVU63
 269              	.LBB29:
1446:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1447:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1,TIM_CR1_ARPE);
 270              		.loc 3 1447 3 view .LVU64
 271 003a 2368     		ldr	r3, [r4]
 272 003c 23F08003 		bic	r3, r3, #128
 273 0040 2360     		str	r3, [r4]
 274              	.LVL7:
 275              		.loc 3 1447 3 is_stmt 0 view .LVU65
 276              	.LBE29:
 277              	.LBE28:
 246:Src/main.c    ****   LL_TIM_SetTriggerOutput(TIM1, LL_TIM_TRGO_RESET);
 278              		.loc 1 246 3 is_stmt 1 view .LVU66
 279              	.LBB30:
 280              	.LBI30:
1448:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1449:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1450:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1451:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Indicates whether auto-reload (ARR) preload is enabled.
1452:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_IsEnabledARRPreload
1453:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1454:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1455:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1456:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledARRPreload(TIM_TypeDef *TIMx)
1457:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 67


1458:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_ARPE) == (TIM_CR1_ARPE)) ? 1UL : 0UL);
1459:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1460:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1461:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1462:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the division ratio between the timer clock  and the sampling clock used by the dead
1463:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1464:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1465:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       instance.
1466:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_SetClockDivision
1467:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1468:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  ClockDivision This parameter can be one of the following values:
1469:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1470:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1471:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1472:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1473:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1474:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockDivision(TIM_TypeDef *TIMx, uint32_t ClockDivision)
1475:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1476:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_CKD, ClockDivision);
1477:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1478:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1479:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1480:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the actual division ratio between the timer clock  and the sampling clock used by t
1481:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1482:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1483:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       instance.
1484:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_GetClockDivision
1485:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1486:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1487:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1488:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1489:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1490:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1491:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetClockDivision(TIM_TypeDef *TIMx)
1492:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1493:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_CKD));
1494:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1495:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1496:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1497:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the counter value.
1498:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1499:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1500:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_SetCounter
1501:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1502:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Counter Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
1503:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1504:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1505:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounter(TIM_TypeDef *TIMx, uint32_t Counter)
1506:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   WRITE_REG(TIMx->CNT, Counter);
1508:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1509:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1510:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1511:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the counter value.
1512:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1513:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1514:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_GetCounter
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 68


1515:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1516:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
1517:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1518:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounter(TIM_TypeDef *TIMx)
1519:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CNT));
1521:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1522:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1523:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1524:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the current direction of the counter
1525:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetDirection
1526:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1527:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1528:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_UP
1529:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_DOWN
1530:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1531:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetDirection(TIM_TypeDef *TIMx)
1532:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1533:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR));
1534:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1535:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1536:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1537:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the prescaler value.
1538:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note The counter clock frequency CK_CNT is equal to fCK_PSC / (PSC[15:0] + 1).
1539:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note The prescaler can be changed on the fly as this control register is buffered. The new
1540:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       prescaler ratio is taken into account at the next update event.
1541:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_PSC can be used to calculate the Prescaler parameter
1542:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_SetPrescaler
1543:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1544:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Prescaler between Min_Data=0 and Max_Data=65535
1545:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1546:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1547:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Prescaler)
1548:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1549:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   WRITE_REG(TIMx->PSC, Prescaler);
1550:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1551:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1552:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1553:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the prescaler value.
1554:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_GetPrescaler
1555:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1556:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval  Prescaler value between Min_Data=0 and Max_Data=65535
1557:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1558:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetPrescaler(TIM_TypeDef *TIMx)
1559:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1560:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->PSC));
1561:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1562:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1563:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1564:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the auto-reload value.
1565:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note The counter is blocked while the auto-reload value is null.
1566:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1567:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1568:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_ARR can be used to calculate the AutoReload parameter
1569:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_SetAutoReload
1570:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1571:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  AutoReload between Min_Data=0 and Max_Data=65535
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 69


1572:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1573:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1574:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetAutoReload(TIM_TypeDef *TIMx, uint32_t AutoReload)
1575:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1576:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   WRITE_REG(TIMx->ARR, AutoReload);
1577:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1578:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1579:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1580:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the auto-reload value.
1581:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_GetAutoReload
1582:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1583:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1584:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1585:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Auto-reload value
1586:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1587:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetAutoReload(TIM_TypeDef *TIMx)
1588:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1589:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->ARR));
1590:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1591:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1592:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1593:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the repetition counter value.
1594:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note For advanced timer instances RepetitionCounter can be up to 65535.
1595:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
1596:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
1597:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_SetRepetitionCounter
1598:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1599:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  RepetitionCounter between Min_Data=0 and Max_Data=255
1600:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1601:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1602:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetRepetitionCounter(TIM_TypeDef *TIMx, uint32_t RepetitionCounter)
1603:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1604:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   WRITE_REG(TIMx->RCR, RepetitionCounter);
1605:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1606:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1607:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1608:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the repetition counter value.
1609:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
1610:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
1611:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_GetRepetitionCounter
1612:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1613:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Repetition counter value
1614:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1615:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetRepetitionCounter(TIM_TypeDef *TIMx)
1616:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1617:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->RCR));
1618:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1619:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1620:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1621:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Force a continuous copy of the update interrupt flag (UIF) into the timer counter regis
1622:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note This allows both the counter value and a potential roll-over condition signalled by the U
1623:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          UIFREMAP      LL_TIM_EnableUIFRemap
1624:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1625:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1626:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1627:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableUIFRemap(TIM_TypeDef *TIMx)
1628:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 70


1629:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_UIFREMAP);
1630:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1631:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1632:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1633:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable update interrupt flag (UIF) remapping.
1634:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          UIFREMAP      LL_TIM_DisableUIFRemap
1635:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1636:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1637:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1638:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableUIFRemap(TIM_TypeDef *TIMx)
1639:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1640:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_UIFREMAP);
1641:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1642:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1643:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1644:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1645:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1646:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1647:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Capture_Compare Capture Compare configuration
1648:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1649:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1650:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1651:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
1652:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note CCxE, CCxNE and OCxM bits are preloaded, after having been written,
1653:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       they are updated only when a commutation event (COM) occurs.
1654:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Only on channels that have a complementary output.
1655:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1656:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1657:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_EnablePreload
1658:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1659:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1660:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1661:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnablePreload(TIM_TypeDef *TIMx)
1662:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1663:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_CCPC);
1664:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1665:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1666:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1667:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
1668:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1669:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1670:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_DisablePreload
1671:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1672:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1673:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1674:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisablePreload(TIM_TypeDef *TIMx)
1675:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1676:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_CCPC);
1677:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1678:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1679:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1680:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the updated source of the capture/compare control bits (CCxE, CCxNE and OCxM).
1681:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1682:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1683:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          CCUS          LL_TIM_CC_SetUpdate
1684:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1685:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  CCUpdateSource This parameter can be one of the following values:
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 71


1686:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_ONLY
1687:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI
1688:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1689:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1690:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetUpdate(TIM_TypeDef *TIMx, uint32_t CCUpdateSource)
1691:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1692:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCUS, CCUpdateSource);
1693:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1694:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1695:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1696:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the trigger of the capture/compare DMA request.
1697:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_SetDMAReqTrigger
1698:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1699:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  DMAReqTrigger This parameter can be one of the following values:
1700:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1701:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1702:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1703:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1704:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetDMAReqTrigger(TIM_TypeDef *TIMx, uint32_t DMAReqTrigger)
1705:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1706:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCDS, DMAReqTrigger);
1707:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1708:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1709:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1710:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get actual trigger of the capture/compare DMA request.
1711:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_GetDMAReqTrigger
1712:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1713:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1714:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1715:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1716:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1717:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_GetDMAReqTrigger(TIM_TypeDef *TIMx)
1718:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1719:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR2, TIM_CR2_CCDS));
1720:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1721:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1722:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1723:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the lock level to freeze the
1724:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         configuration of several capture/compare parameters.
1725:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
1726:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       the lock mechanism is supported by a timer instance.
1727:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll BDTR         LOCK          LL_TIM_CC_SetLockLevel
1728:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1729:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  LockLevel This parameter can be one of the following values:
1730:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_OFF
1731:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_1
1732:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_2
1733:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_3
1734:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1735:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1736:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetLockLevel(TIM_TypeDef *TIMx, uint32_t LockLevel)
1737:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1738:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_LOCK, LockLevel);
1739:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1740:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1741:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1742:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable capture/compare channels.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 72


1743:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_EnableChannel\n
1744:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_EnableChannel\n
1745:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_EnableChannel\n
1746:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_EnableChannel\n
1747:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_EnableChannel\n
1748:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_EnableChannel\n
1749:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_EnableChannel\n
1750:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC5E          LL_TIM_CC_EnableChannel\n
1751:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC6E          LL_TIM_CC_EnableChannel
1752:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1753:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1754:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1755:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1756:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1757:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1758:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1759:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1760:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1761:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
1762:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
1763:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1764:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1765:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1766:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1767:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(TIMx->CCER, Channels);
1768:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1769:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1770:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1771:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable capture/compare channels.
1772:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_DisableChannel\n
1773:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_DisableChannel\n
1774:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_DisableChannel\n
1775:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_DisableChannel\n
1776:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_DisableChannel\n
1777:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_DisableChannel\n
1778:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_DisableChannel\n
1779:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC5E          LL_TIM_CC_DisableChannel\n
1780:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC6E          LL_TIM_CC_DisableChannel
1781:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1782:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1783:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1784:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1785:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1786:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1787:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1788:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1789:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1790:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
1791:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
1792:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1793:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1794:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1795:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1796:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(TIMx->CCER, Channels);
1797:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1798:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1799:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 73


1800:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Indicate whether channel(s) is(are) enabled.
1801:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_IsEnabledChannel\n
1802:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_IsEnabledChannel\n
1803:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_IsEnabledChannel\n
1804:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_IsEnabledChannel\n
1805:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_IsEnabledChannel\n
1806:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_IsEnabledChannel\n
1807:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_IsEnabledChannel\n
1808:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC5E          LL_TIM_CC_IsEnabledChannel\n
1809:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC6E          LL_TIM_CC_IsEnabledChannel
1810:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1811:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1812:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1813:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1814:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1815:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1816:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1817:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1818:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1819:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
1820:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
1821:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1822:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1823:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_IsEnabledChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1824:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1825:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(TIMx->CCER, Channels) == (Channels)) ? 1UL : 0UL);
1826:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1827:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1828:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1829:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1830:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1831:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1832:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Output_Channel Output channel configuration
1833:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1834:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1835:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1836:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Configure an output channel.
1837:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_OC_ConfigOutput\n
1838:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_OC_ConfigOutput\n
1839:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_OC_ConfigOutput\n
1840:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_OC_ConfigOutput\n
1841:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        CC5S          LL_TIM_OC_ConfigOutput\n
1842:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        CC6S          LL_TIM_OC_ConfigOutput\n
1843:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_OC_ConfigOutput\n
1844:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_ConfigOutput\n
1845:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_ConfigOutput\n
1846:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_ConfigOutput\n
1847:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC5P          LL_TIM_OC_ConfigOutput\n
1848:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC6P          LL_TIM_OC_ConfigOutput\n
1849:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2          OIS1          LL_TIM_OC_ConfigOutput\n
1850:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2          OIS2          LL_TIM_OC_ConfigOutput\n
1851:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2          OIS3          LL_TIM_OC_ConfigOutput\n
1852:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2          OIS4          LL_TIM_OC_ConfigOutput\n
1853:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2          OIS5          LL_TIM_OC_ConfigOutput\n
1854:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2          OIS6          LL_TIM_OC_ConfigOutput
1855:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1856:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 74


1857:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1858:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1859:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1860:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1861:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
1862:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
1863:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
1864:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH or @ref LL_TIM_OCPOLARITY_LOW
1865:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW or @ref LL_TIM_OCIDLESTATE_HIGH
1866:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1867:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1868:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_ConfigOutput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configura
1869:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1870:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1871:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1872:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_CC1S << SHIFT_TAB_OCxx[iChannel]));
1873:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),
1874:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****              (Configuration & TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]);
1875:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),
1876:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****              (Configuration & TIM_CR2_OIS1) << SHIFT_TAB_OISx[iChannel]);
1877:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1878:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1879:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1880:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Define the behavior of the output reference signal OCxREF from which
1881:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         OCx and OCxN (when relevant) are derived.
1882:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_SetMode\n
1883:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_SetMode\n
1884:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_SetMode\n
1885:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_SetMode\n
1886:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5M          LL_TIM_OC_SetMode\n
1887:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6M          LL_TIM_OC_SetMode
1888:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1889:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1890:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1891:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1892:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1893:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1894:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
1895:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
1896:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Mode This parameter can be one of the following values:
1897:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
1898:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
1899:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
1900:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
1901:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
1902:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
1903:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
1904:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
1905:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM1
1906:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM2
1907:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM1
1908:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM2
1909:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM1
1910:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM2
1911:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1912:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1913:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetMode(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Mode)
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 75


1914:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1915:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1916:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1917:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel]),  Mode << SHIF
1918:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1919:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1920:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1921:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the output compare mode of an output channel.
1922:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_GetMode\n
1923:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_GetMode\n
1924:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_GetMode\n
1925:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_GetMode\n
1926:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5M          LL_TIM_OC_GetMode\n
1927:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6M          LL_TIM_OC_GetMode
1928:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1929:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1930:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1931:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1932:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1933:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1934:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
1935:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
1936:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1937:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
1938:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
1939:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
1940:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
1941:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
1942:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
1943:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
1944:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
1945:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM1
1946:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM2
1947:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM1
1948:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM2
1949:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM1
1950:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM2
1951:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1952:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetMode(TIM_TypeDef *TIMx, uint32_t Channel)
1953:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1954:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1955:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
1956:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (READ_BIT(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel])) >> SHIF
1957:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1958:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1959:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1960:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the polarity of an output channel.
1961:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_SetPolarity\n
1962:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_SetPolarity\n
1963:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_SetPolarity\n
1964:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_SetPolarity\n
1965:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_SetPolarity\n
1966:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_SetPolarity\n
1967:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_SetPolarity\n
1968:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC5P          LL_TIM_OC_SetPolarity\n
1969:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC6P          LL_TIM_OC_SetPolarity
1970:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 76


1971:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1972:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1973:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1974:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1975:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1976:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1977:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1978:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1979:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
1980:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
1981:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Polarity This parameter can be one of the following values:
1982:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
1983:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
1984:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1985:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1986:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Polarity)
1987:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1988:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1989:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),  Polarity << SHIFT_TAB_CCxP[i
1990:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1991:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1992:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1993:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the polarity of an output channel.
1994:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_GetPolarity\n
1995:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_GetPolarity\n
1996:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_GetPolarity\n
1997:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_GetPolarity\n
1998:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_GetPolarity\n
1999:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_GetPolarity\n
2000:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_GetPolarity\n
2001:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC5P          LL_TIM_OC_GetPolarity\n
2002:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC6P          LL_TIM_OC_GetPolarity
2003:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2004:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2005:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2006:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2007:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2008:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2009:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2010:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2011:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2012:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2013:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2014:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2015:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
2016:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
2017:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2018:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
2019:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2020:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2021:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel])) >> SHIFT_TAB_CCxP[iChan
2022:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2023:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2024:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2025:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the IDLE state of an output channel
2026:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note This function is significant only for the timer instances
2027:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       supporting the break feature. Macro @ref IS_TIM_BREAK_INSTANCE(TIMx)
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 77


2028:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       can be used to check whether or not a timer instance provides
2029:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       a break input.
2030:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_SetIdleState\n
2031:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_SetIdleState\n
2032:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_SetIdleState\n
2033:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_SetIdleState\n
2034:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_SetIdleState\n
2035:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_SetIdleState\n
2036:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_SetIdleState\n
2037:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS5          LL_TIM_OC_SetIdleState\n
2038:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS6          LL_TIM_OC_SetIdleState
2039:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2040:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2041:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2042:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2043:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2044:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2045:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2046:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2047:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2048:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2049:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2050:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  IdleState This parameter can be one of the following values:
2051:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
2052:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
2053:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2054:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2055:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetIdleState(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t IdleState
2056:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2057:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2058:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),  IdleState << SHIFT_TAB_OISx[iC
2059:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2060:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2061:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2062:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the IDLE state of an output channel
2063:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_GetIdleState\n
2064:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_GetIdleState\n
2065:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_GetIdleState\n
2066:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_GetIdleState\n
2067:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_GetIdleState\n
2068:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_GetIdleState\n
2069:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_GetIdleState\n
2070:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS5          LL_TIM_OC_GetIdleState\n
2071:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS6          LL_TIM_OC_GetIdleState
2072:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2073:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2074:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2075:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2076:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2077:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2078:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2079:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2080:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2081:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2082:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2083:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2084:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 78


2085:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
2086:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2087:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetIdleState(TIM_TypeDef *TIMx, uint32_t Channel)
2088:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2089:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2090:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (READ_BIT(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel])) >> SHIFT_TAB_OISx[iChanne
2091:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2092:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2093:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2094:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable fast mode for the output channel.
2095:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Acts only if the channel is configured in PWM1 or PWM2 mode.
2096:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_EnableFast\n
2097:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_EnableFast\n
2098:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_EnableFast\n
2099:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_EnableFast\n
2100:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5FE          LL_TIM_OC_EnableFast\n
2101:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6FE          LL_TIM_OC_EnableFast
2102:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2103:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2104:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2105:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2106:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2107:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2108:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2109:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2110:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2111:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2112:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableFast(TIM_TypeDef *TIMx, uint32_t Channel)
2113:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2114:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2115:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2116:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
2117:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2118:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2119:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2120:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2121:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable fast mode for the output channel.
2122:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_DisableFast\n
2123:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_DisableFast\n
2124:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_DisableFast\n
2125:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_DisableFast\n
2126:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5FE          LL_TIM_OC_DisableFast\n
2127:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6FE          LL_TIM_OC_DisableFast
2128:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2129:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2130:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2131:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2132:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2133:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2134:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2135:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2136:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2137:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2138:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableFast(TIM_TypeDef *TIMx, uint32_t Channel)
2139:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2140:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2141:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 79


2142:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
2143:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2144:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2145:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2146:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2147:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Indicates whether fast mode is enabled for the output channel.
2148:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_IsEnabledFast\n
2149:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_IsEnabledFast\n
2150:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_IsEnabledFast\n
2151:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_IsEnabledFast\n
2152:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5FE          LL_TIM_OC_IsEnabledFast\n
2153:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6FE          LL_TIM_OC_IsEnabledFast
2154:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2155:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2156:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2157:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2158:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2159:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2160:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2161:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2162:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2163:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2164:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledFast(TIM_TypeDef *TIMx, uint32_t Channel)
2165:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2166:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2167:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2168:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel];
2169:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
2170:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2171:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2172:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2173:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable compare register (TIMx_CCRx) preload for the output channel.
2174:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_EnablePreload\n
2175:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_EnablePreload\n
2176:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_EnablePreload\n
2177:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_EnablePreload\n
2178:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5PE          LL_TIM_OC_EnablePreload\n
2179:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6PE          LL_TIM_OC_EnablePreload
2180:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2181:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2182:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2183:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2184:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2185:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2186:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2187:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2188:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2189:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2190:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
2191:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2192:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2193:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2194:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
2195:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2196:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2197:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2198:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable compare register (TIMx_CCRx) preload for the output channel.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 80


2199:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_DisablePreload\n
2200:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_DisablePreload\n
2201:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_DisablePreload\n
2202:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_DisablePreload\n
2203:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5PE          LL_TIM_OC_DisablePreload\n
2204:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6PE          LL_TIM_OC_DisablePreload
2205:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2206:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2207:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2208:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2209:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2210:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2211:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2212:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2213:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2214:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2215:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
2216:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2217:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2218:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2219:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
2220:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2221:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2222:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2223:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Indicates whether compare register (TIMx_CCRx) preload is enabled for the output channe
2224:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_IsEnabledPreload\n
2225:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_IsEnabledPreload\n
2226:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_IsEnabledPreload\n
2227:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_IsEnabledPreload\n
2228:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5PE          LL_TIM_OC_IsEnabledPreload\n
2229:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6PE          LL_TIM_OC_IsEnabledPreload
2230:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2231:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2232:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2233:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2234:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2235:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2236:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2237:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2238:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2239:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2240:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledPreload(TIM_TypeDef *TIMx, uint32_t Channel)
2241:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2242:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2243:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2244:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel];
2245:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
2246:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2247:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2248:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2249:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable clearing the output channel on an external event.
2250:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
2251:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
2252:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
2253:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_EnableClear\n
2254:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_EnableClear\n
2255:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_EnableClear\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 81


2256:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_EnableClear\n
2257:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5CE          LL_TIM_OC_EnableClear\n
2258:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6CE          LL_TIM_OC_EnableClear
2259:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2260:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2261:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2262:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2263:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2264:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2265:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2266:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2267:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2268:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2269:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableClear(TIM_TypeDef *TIMx, uint32_t Channel)
2270:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2271:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2272:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2273:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
2274:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2275:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2276:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2277:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable clearing the output channel on an external event.
2278:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
2279:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
2280:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_DisableClear\n
2281:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_DisableClear\n
2282:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_DisableClear\n
2283:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_DisableClear\n
2284:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5CE          LL_TIM_OC_DisableClear\n
2285:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6CE          LL_TIM_OC_DisableClear
2286:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2287:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2288:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2289:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2290:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2291:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2292:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2293:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2294:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2295:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2296:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableClear(TIM_TypeDef *TIMx, uint32_t Channel)
2297:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2298:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2299:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2300:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
2301:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2302:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2303:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2304:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Indicates clearing the output channel on an external event is enabled for the output ch
2305:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note This function enables clearing the output channel on an external event.
2306:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
2307:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
2308:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
2309:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_IsEnabledClear\n
2310:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_IsEnabledClear\n
2311:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_IsEnabledClear\n
2312:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_IsEnabledClear\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 82


2313:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5CE          LL_TIM_OC_IsEnabledClear\n
2314:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6CE          LL_TIM_OC_IsEnabledClear
2315:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2316:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2317:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2318:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2319:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2320:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2321:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2322:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2323:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2324:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2325:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledClear(TIM_TypeDef *TIMx, uint32_t Channel)
2326:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2327:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2328:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2329:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel];
2330:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
2331:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2332:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2333:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2334:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the dead-time delay (delay inserted between the rising edge of the OCxREF signal an
2335:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2336:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       dead-time insertion feature is supported by a timer instance.
2337:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_DEADTIME can be used to calculate the DeadTime parameter
2338:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll BDTR         DTG           LL_TIM_OC_SetDeadTime
2339:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2340:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  DeadTime between Min_Data=0 and Max_Data=255
2341:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2342:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2343:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetDeadTime(TIM_TypeDef *TIMx, uint32_t DeadTime)
2344:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2345:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_DTG, DeadTime);
2346:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2347:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2348:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2349:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set compare value for output channel 1 (TIMx_CCR1).
2350:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2351:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2352:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2353:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2354:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
2355:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_SetCompareCH1
2356:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2357:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2358:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2359:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2360:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH1(TIM_TypeDef *TIMx, uint32_t CompareValue)
2361:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2362:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   WRITE_REG(TIMx->CCR1, CompareValue);
2363:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2364:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2365:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2366:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set compare value for output channel 2 (TIMx_CCR2).
2367:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2368:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2369:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 83


2370:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2371:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
2372:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_SetCompareCH2
2373:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2374:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2375:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2376:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2377:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH2(TIM_TypeDef *TIMx, uint32_t CompareValue)
2378:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2379:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   WRITE_REG(TIMx->CCR2, CompareValue);
2380:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2381:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2382:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2383:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set compare value for output channel 3 (TIMx_CCR3).
2384:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2385:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2386:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2387:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2388:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel is supported by a timer instance.
2389:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_SetCompareCH3
2390:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2391:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2392:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2393:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2394:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH3(TIM_TypeDef *TIMx, uint32_t CompareValue)
2395:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2396:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   WRITE_REG(TIMx->CCR3, CompareValue);
2397:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2398:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2399:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2400:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set compare value for output channel 4 (TIMx_CCR4).
2401:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2402:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2403:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2404:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2405:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
2406:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_SetCompareCH4
2407:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2408:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2409:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2410:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2411:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH4(TIM_TypeDef *TIMx, uint32_t CompareValue)
2412:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2413:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   WRITE_REG(TIMx->CCR4, CompareValue);
2414:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2415:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2416:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2417:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set compare value for output channel 5 (TIMx_CCR5).
2418:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC5_INSTANCE(TIMx) can be used to check whether or not
2419:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 5 is supported by a timer instance.
2420:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR5         CCR5          LL_TIM_OC_SetCompareCH5
2421:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2422:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2423:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2424:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2425:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH5(TIM_TypeDef *TIMx, uint32_t CompareValue)
2426:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 84


2427:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CCR5, TIM_CCR5_CCR5, CompareValue);
2428:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2429:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2430:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2431:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set compare value for output channel 6 (TIMx_CCR6).
2432:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC6_INSTANCE(TIMx) can be used to check whether or not
2433:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 6 is supported by a timer instance.
2434:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR6         CCR6          LL_TIM_OC_SetCompareCH6
2435:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2436:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2437:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2438:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2439:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH6(TIM_TypeDef *TIMx, uint32_t CompareValue)
2440:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2441:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   WRITE_REG(TIMx->CCR6, CompareValue);
2442:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2443:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2444:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2445:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR1) set for  output channel 1.
2446:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
2447:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2448:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2449:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2450:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
2451:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_GetCompareCH1
2452:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2453:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2454:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2455:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH1(TIM_TypeDef *TIMx)
2456:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2457:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
2458:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2459:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2460:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2461:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR2) set for  output channel 2.
2462:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
2463:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2464:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2465:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2466:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
2467:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_GetCompareCH2
2468:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2469:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2470:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2471:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH2(TIM_TypeDef *TIMx)
2472:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2473:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
2474:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2475:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2476:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2477:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR3) set for  output channel 3.
2478:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
2479:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2480:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2481:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2482:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 3 is supported by a timer instance.
2483:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_GetCompareCH3
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 85


2484:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2485:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2486:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2487:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH3(TIM_TypeDef *TIMx)
2488:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2489:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
2490:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2491:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2492:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2493:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR4) set for  output channel 4.
2494:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
2495:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2496:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2497:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2498:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
2499:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_GetCompareCH4
2500:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2501:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2502:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2503:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH4(TIM_TypeDef *TIMx)
2504:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2505:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
2506:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2508:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2509:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR5) set for  output channel 5.
2510:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC5_INSTANCE(TIMx) can be used to check whether or not
2511:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 5 is supported by a timer instance.
2512:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR5         CCR5          LL_TIM_OC_GetCompareCH5
2513:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2514:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2515:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2516:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH5(TIM_TypeDef *TIMx)
2517:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2518:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CCR5, TIM_CCR5_CCR5));
2519:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2521:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2522:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR6) set for  output channel 6.
2523:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC6_INSTANCE(TIMx) can be used to check whether or not
2524:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 6 is supported by a timer instance.
2525:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR6         CCR6          LL_TIM_OC_GetCompareCH6
2526:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2527:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2528:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2529:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH6(TIM_TypeDef *TIMx)
2530:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2531:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR6));
2532:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2533:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2534:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2535:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Select on which reference signal the OC5REF is combined to.
2536:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COMBINED3PHASEPWM_INSTANCE(TIMx) can be used to check
2537:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports the combined 3-phase PWM mode.
2538:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR5         GC5C3          LL_TIM_SetCH5CombinedChannels\n
2539:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCR5         GC5C2          LL_TIM_SetCH5CombinedChannels\n
2540:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCR5         GC5C1          LL_TIM_SetCH5CombinedChannels
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 86


2541:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2542:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  GroupCH5 This parameter can be a combination of the following values:
2543:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_NONE
2544:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_OC1REFC
2545:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_OC2REFC
2546:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_OC3REFC
2547:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2548:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2549:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCH5CombinedChannels(TIM_TypeDef *TIMx, uint32_t GroupCH5)
2550:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2551:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CCR5, (TIM_CCR5_GC5C3 | TIM_CCR5_GC5C2 | TIM_CCR5_GC5C1), GroupCH5);
2552:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2553:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2554:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2555:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
2556:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2557:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2558:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Input_Channel Input channel configuration
2559:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
2560:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2561:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2562:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Configure input channel.
2563:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_Config\n
2564:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        IC1PSC        LL_TIM_IC_Config\n
2565:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        IC1F          LL_TIM_IC_Config\n
2566:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_Config\n
2567:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_Config\n
2568:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_Config\n
2569:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_Config\n
2570:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_Config\n
2571:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_Config\n
2572:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_Config\n
2573:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_Config\n
2574:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_Config\n
2575:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_IC_Config\n
2576:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_Config\n
2577:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_Config\n
2578:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_Config\n
2579:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_Config\n
2580:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_Config\n
2581:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_Config\n
2582:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_Config
2583:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2584:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2585:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2586:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2587:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2588:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2589:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
2590:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI or @ref LL_TIM_ACTIVEINPUT_INDIRECTTI or @ref LL_
2591:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1 or ... or @ref LL_TIM_ICPSC_DIV8
2592:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1 or ... or @ref LL_TIM_IC_FILTER_FDIV32_N8
2593:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING or @ref LL_TIM_IC_POLARITY_FALLING or @ref LL_TIM_I
2594:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2595:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2596:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_Config(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configuration)
2597:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 87


2598:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2599:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2600:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChanne
2601:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****              ((Configuration >> 16U) & (TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S))  << SH
2602:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
2603:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****              (Configuration & (TIM_CCER_CC1NP | TIM_CCER_CC1P)) << SHIFT_TAB_CCxP[iChannel]);
2604:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2605:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2606:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2607:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the active input.
2608:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_SetActiveInput\n
2609:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_SetActiveInput\n
2610:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_SetActiveInput\n
2611:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_SetActiveInput
2612:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2613:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2614:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2615:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2616:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2617:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2618:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  ICActiveInput This parameter can be one of the following values:
2619:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
2620:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
2621:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
2622:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2623:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2624:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICActiv
2625:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2626:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2627:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2628:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel]), (ICActiveInput >> 16U) << SHIFT
2629:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2630:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2631:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2632:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the current active input.
2633:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_GetActiveInput\n
2634:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_GetActiveInput\n
2635:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_GetActiveInput\n
2636:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_GetActiveInput
2637:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2638:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2639:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2640:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2641:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2642:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2643:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2644:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
2645:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
2646:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
2647:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2648:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel)
2649:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2650:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2651:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2652:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
2653:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2654:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 88


2655:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2656:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the prescaler of input channel.
2657:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_SetPrescaler\n
2658:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_SetPrescaler\n
2659:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_SetPrescaler\n
2660:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_SetPrescaler
2661:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2662:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2663:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2664:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2665:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2666:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2667:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  ICPrescaler This parameter can be one of the following values:
2668:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
2669:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
2670:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
2671:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
2672:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2673:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2674:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPrescal
2675:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2676:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2677:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2678:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel]), (ICPrescaler >> 16U) << SHIFT
2679:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2680:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2681:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2682:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the current prescaler value acting on an  input channel.
2683:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_GetPrescaler\n
2684:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_GetPrescaler\n
2685:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_GetPrescaler\n
2686:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_GetPrescaler
2687:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2688:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2689:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2690:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2691:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2692:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2693:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2694:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
2695:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
2696:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
2697:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
2698:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2699:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel)
2700:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2701:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2702:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2703:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iCha
2704:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2705:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2706:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2707:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the input filter duration.
2708:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_SetFilter\n
2709:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_SetFilter\n
2710:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_SetFilter\n
2711:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_SetFilter
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 89


2712:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2713:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2714:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2715:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2716:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2717:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2718:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  ICFilter This parameter can be one of the following values:
2719:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
2720:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
2721:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
2722:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
2723:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
2724:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
2725:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
2726:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
2727:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
2728:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
2729:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
2730:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
2731:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
2732:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
2733:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
2734:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
2735:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2736:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2737:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetFilter(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICFilter)
2738:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2739:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2740:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2741:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel]), (ICFilter >> 16U) << SHIFT_TAB_
2742:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2743:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2744:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2745:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the input filter duration.
2746:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_GetFilter\n
2747:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_GetFilter\n
2748:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_GetFilter\n
2749:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_GetFilter
2750:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2751:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2752:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2753:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2754:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2755:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2756:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2757:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
2758:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
2759:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
2760:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
2761:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
2762:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
2763:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
2764:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
2765:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
2766:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
2767:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
2768:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 90


2769:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
2770:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
2771:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
2772:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
2773:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2774:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetFilter(TIM_TypeDef *TIMx, uint32_t Channel)
2775:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2776:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2777:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2778:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
2779:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2780:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2781:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2782:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the input channel polarity.
2783:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_SetPolarity\n
2784:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_SetPolarity\n
2785:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_SetPolarity\n
2786:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_SetPolarity\n
2787:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_SetPolarity\n
2788:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_SetPolarity\n
2789:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_SetPolarity\n
2790:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_SetPolarity
2791:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2792:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2793:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2794:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2795:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2796:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2797:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  ICPolarity This parameter can be one of the following values:
2798:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
2799:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
2800:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
2801:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2802:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2803:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPolarity
2804:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2805:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2806:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
2807:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****              ICPolarity << SHIFT_TAB_CCxP[iChannel]);
2808:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2809:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2810:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2811:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the current input channel polarity.
2812:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_GetPolarity\n
2813:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_GetPolarity\n
2814:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_GetPolarity\n
2815:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_GetPolarity\n
2816:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_GetPolarity\n
2817:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_GetPolarity\n
2818:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_GetPolarity\n
2819:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_GetPolarity
2820:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2821:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2822:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2823:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2824:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2825:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 91


2826:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2827:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
2828:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
2829:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
2830:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2831:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
2832:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2833:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2834:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel])) >>
2835:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****           SHIFT_TAB_CCxP[iChannel]);
2836:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2837:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2838:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2839:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Connect the TIMx_CH1, CH2 and CH3 pins  to the TI1 input (XOR combination).
2840:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2841:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       a timer instance provides an XOR input.
2842:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_EnableXORCombination
2843:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2844:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2845:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2846:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_EnableXORCombination(TIM_TypeDef *TIMx)
2847:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2848:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_TI1S);
2849:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2850:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2851:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2852:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disconnect the TIMx_CH1, CH2 and CH3 pins  from the TI1 input.
2853:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2854:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       a timer instance provides an XOR input.
2855:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_DisableXORCombination
2856:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2857:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2858:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2859:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_DisableXORCombination(TIM_TypeDef *TIMx)
2860:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2861:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_TI1S);
2862:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2863:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2864:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2865:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Indicates whether the TIMx_CH1, CH2 and CH3 pins are connectected to the TI1 input.
2866:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2867:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * a timer instance provides an XOR input.
2868:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_IsEnabledXORCombination
2869:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2870:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2871:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2872:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_IsEnabledXORCombination(TIM_TypeDef *TIMx)
2873:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2874:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR2, TIM_CR2_TI1S) == (TIM_CR2_TI1S)) ? 1UL : 0UL);
2875:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2876:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2877:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2878:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get captured value for input channel 1.
2879:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2880:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2881:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2882:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 92


2883:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       input channel 1 is supported by a timer instance.
2884:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_IC_GetCaptureCH1
2885:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2886:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2887:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2888:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH1(TIM_TypeDef *TIMx)
2889:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2890:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
2891:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2892:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2893:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2894:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get captured value for input channel 2.
2895:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2896:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2897:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2898:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2899:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       input channel 2 is supported by a timer instance.
2900:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_IC_GetCaptureCH2
2901:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2902:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2903:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2904:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH2(TIM_TypeDef *TIMx)
2905:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2906:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
2907:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2908:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2909:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2910:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get captured value for input channel 3.
2911:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2912:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2913:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2914:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2915:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       input channel 3 is supported by a timer instance.
2916:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_IC_GetCaptureCH3
2917:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2918:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2919:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2920:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH3(TIM_TypeDef *TIMx)
2921:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2922:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
2923:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2924:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2925:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2926:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get captured value for input channel 4.
2927:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2928:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2929:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2930:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2931:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       input channel 4 is supported by a timer instance.
2932:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_IC_GetCaptureCH4
2933:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2934:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2935:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2936:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH4(TIM_TypeDef *TIMx)
2937:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2938:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
2939:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 93


2940:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2941:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2942:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
2943:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2944:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2945:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Clock_Selection Counter clock selection
2946:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
2947:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2948:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2949:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable external clock mode 2.
2950:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note When external clock mode 2 is enabled the counter is clocked by any active edge on the ET
2951:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2952:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2953:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_EnableExternalClock
2954:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2955:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2956:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2957:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableExternalClock(TIM_TypeDef *TIMx)
2958:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2959:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_ECE);
2960:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2961:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2962:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2963:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable external clock mode 2.
2964:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2965:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2966:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_DisableExternalClock
2967:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2968:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2969:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2970:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableExternalClock(TIM_TypeDef *TIMx)
2971:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2972:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_ECE);
2973:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2974:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2975:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2976:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Indicate whether external clock mode 2 is enabled.
2977:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2978:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2979:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_IsEnabledExternalClock
2980:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2981:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2982:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2983:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledExternalClock(TIM_TypeDef *TIMx)
2984:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2985:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_ECE) == (TIM_SMCR_ECE)) ? 1UL : 0UL);
2986:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2987:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2988:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2989:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the clock source of the counter clock.
2990:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note when selected clock source is external clock mode 1, the timer input
2991:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       the external clock is applied is selected by calling the @ref LL_TIM_SetTriggerInput()
2992:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       function. This timer input must be configured by calling
2993:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       the @ref LL_TIM_IC_Config() function.
2994:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(TIMx) can be used to check
2995:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode1.
2996:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 94


2997:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2998:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetClockSource\n
2999:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         SMCR         ECE           LL_TIM_SetClockSource
3000:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
3001:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  ClockSource This parameter can be one of the following values:
3002:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_INTERNAL
3003:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE1
3004:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE2
3005:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
3006:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3007:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockSource(TIM_TypeDef *TIMx, uint32_t ClockSource)
 281              		.loc 3 3007 22 view .LVU67
 282              	.LBB31:
3008:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
3009:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS | TIM_SMCR_ECE, ClockSource);
 283              		.loc 3 3009 3 view .LVU68
 284 0042 A268     		ldr	r2, [r4, #8]
 285 0044 0A4B     		ldr	r3, .L11+8
 286 0046 1340     		ands	r3, r3, r2
 287 0048 A360     		str	r3, [r4, #8]
 288              	.LVL8:
 289              		.loc 3 3009 3 is_stmt 0 view .LVU69
 290              	.LBE31:
 291              	.LBE30:
 247:Src/main.c    ****   LL_TIM_SetTriggerOutput2(TIM1, LL_TIM_TRGO2_RESET);
 292              		.loc 1 247 3 is_stmt 1 view .LVU70
 293              	.LBB32:
 294              	.LBI32:
3010:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
3011:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
3012:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
3013:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the encoder interface mode.
3014:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_ENCODER_INTERFACE_INSTANCE(TIMx) can be used to check
3015:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports the encoder mode.
3016:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetEncoderMode
3017:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
3018:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  EncoderMode This parameter can be one of the following values:
3019:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI1
3020:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI2
3021:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X4_TI12
3022:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
3023:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3024:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetEncoderMode(TIM_TypeDef *TIMx, uint32_t EncoderMode)
3025:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
3026:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, EncoderMode);
3027:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
3028:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
3029:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
3030:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
3031:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3032:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
3033:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Synchronization Timer synchronisation configuration
3034:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
3035:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3036:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
3037:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the trigger output (TRGO) used for timer synchronization .
3038:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_MASTER_INSTANCE(TIMx) can be used to check
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 95


3039:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance can operate as a master timer.
3040:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          MMS           LL_TIM_SetTriggerOutput
3041:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
3042:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TimerSynchronization This parameter can be one of the following values:
3043:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_RESET
3044:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_ENABLE
3045:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_UPDATE
3046:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_CC1IF
3047:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC1REF
3048:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC2REF
3049:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC3REF
3050:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC4REF
3051:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
3052:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3053:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerOutput(TIM_TypeDef *TIMx, uint32_t TimerSynchronization)
 295              		.loc 3 3053 22 view .LVU71
 296              	.LBB33:
3054:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
3055:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_MMS, TimerSynchronization);
 297              		.loc 3 3055 3 view .LVU72
 298 004a 6368     		ldr	r3, [r4, #4]
 299 004c 23F07003 		bic	r3, r3, #112
 300 0050 6360     		str	r3, [r4, #4]
 301              	.LVL9:
 302              		.loc 3 3055 3 is_stmt 0 view .LVU73
 303              	.LBE33:
 304              	.LBE32:
 248:Src/main.c    ****   LL_TIM_DisableMasterSlaveMode(TIM1);
 305              		.loc 1 248 3 is_stmt 1 view .LVU74
 306              	.LBB34:
 307              	.LBI34:
3056:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
3057:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
3058:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
3059:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the trigger output 2 (TRGO2) used for ADC synchronization .
3060:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_TRGO2_INSTANCE(TIMx) can be used to check
3061:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance can be used for ADC synchronization.
3062:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          MMS2          LL_TIM_SetTriggerOutput2
3063:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer Instance
3064:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  ADCSynchronization This parameter can be one of the following values:
3065:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_RESET
3066:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_ENABLE
3067:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_UPDATE
3068:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_CC1F
3069:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC1
3070:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC2
3071:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC3
3072:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4
3073:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC5
3074:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC6
3075:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4_RISINGFALLING
3076:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC6_RISINGFALLING
3077:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4_RISING_OC6_RISING
3078:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4_RISING_OC6_FALLING
3079:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC5_RISING_OC6_RISING
3080:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC5_RISING_OC6_FALLING
3081:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 96


3082:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3083:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerOutput2(TIM_TypeDef *TIMx, uint32_t ADCSynchronization)
 308              		.loc 3 3083 22 view .LVU75
 309              	.LBB35:
3084:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
3085:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_MMS2, ADCSynchronization);
 310              		.loc 3 3085 3 view .LVU76
 311 0052 6368     		ldr	r3, [r4, #4]
 312 0054 23F47003 		bic	r3, r3, #15728640
 313 0058 6360     		str	r3, [r4, #4]
 314              	.LVL10:
 315              		.loc 3 3085 3 is_stmt 0 view .LVU77
 316              	.LBE35:
 317              	.LBE34:
 249:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 2 */
 318              		.loc 1 249 3 is_stmt 1 view .LVU78
 319              	.LBB36:
 320              	.LBI36:
3086:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
3087:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
3088:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
3089:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the synchronization mode of a slave timer.
3090:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
3091:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
3092:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetSlaveMode
3093:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
3094:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  SlaveMode This parameter can be one of the following values:
3095:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_DISABLED
3096:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_RESET
3097:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_GATED
3098:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_TRIGGER
3099:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_COMBINED_RESETTRIGGER
3100:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
3101:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3102:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetSlaveMode(TIM_TypeDef *TIMx, uint32_t SlaveMode)
3103:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
3104:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, SlaveMode);
3105:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
3106:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
3107:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
3108:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the selects the trigger input to be used to synchronize the counter.
3109:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
3110:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
3111:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll SMCR         TS            LL_TIM_SetTriggerInput
3112:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
3113:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TriggerInput This parameter can be one of the following values:
3114:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR0
3115:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR1
3116:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR2
3117:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR3
3118:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1F_ED
3119:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1FP1
3120:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI2FP2
3121:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ETRF
3122:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
3123:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3124:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerInput(TIM_TypeDef *TIMx, uint32_t TriggerInput)
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 97


3125:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
3126:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_TS, TriggerInput);
3127:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
3128:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
3129:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
3130:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable the Master/Slave mode.
3131:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
3132:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
3133:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_EnableMasterSlaveMode
3134:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
3135:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
3136:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3137:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableMasterSlaveMode(TIM_TypeDef *TIMx)
3138:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
3139:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_MSM);
3140:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
3141:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
3142:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
3143:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable the Master/Slave mode.
3144:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
3145:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
3146:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_DisableMasterSlaveMode
3147:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
3148:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
3149:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3150:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableMasterSlaveMode(TIM_TypeDef *TIMx)
 321              		.loc 3 3150 22 view .LVU79
 322              	.LBB37:
3151:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
3152:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_MSM);
 323              		.loc 3 3152 3 view .LVU80
 324 005a A368     		ldr	r3, [r4, #8]
 325 005c 23F08003 		bic	r3, r3, #128
 326 0060 A360     		str	r3, [r4, #8]
 327              	.LVL11:
 328              		.loc 3 3152 3 is_stmt 0 view .LVU81
 329              	.LBE37:
 330              	.LBE36:
 254:Src/main.c    **** 
 331              		.loc 1 254 1 view .LVU82
 332 0062 06B0     		add	sp, sp, #24
 333              	.LCFI8:
 334              		.cfi_def_cfa_offset 8
 335              		@ sp needed
 336 0064 10BD     		pop	{r4, pc}
 337              	.L12:
 338 0066 00BF     		.align	2
 339              	.L11:
 340 0068 00380240 		.word	1073887232
 341 006c 00000140 		.word	1073807360
 342 0070 F8BFFEFF 		.word	-81928
 343              		.cfi_endproc
 344              	.LFE853:
 346              		.section	.text.MX_TIM2_Init,"ax",%progbits
 347              		.align	1
 348              		.syntax unified
 349              		.thumb
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 98


 350              		.thumb_func
 351              		.fpu fpv5-d16
 353              	MX_TIM2_Init:
 354              	.LFB854:
 262:Src/main.c    **** 
 355              		.loc 1 262 1 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 32
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359 0000 30B5     		push	{r4, r5, lr}
 360              	.LCFI9:
 361              		.cfi_def_cfa_offset 12
 362              		.cfi_offset 4, -12
 363              		.cfi_offset 5, -8
 364              		.cfi_offset 14, -4
 365 0002 89B0     		sub	sp, sp, #36
 366              	.LCFI10:
 367              		.cfi_def_cfa_offset 48
 268:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 368              		.loc 1 268 3 view .LVU84
 268:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 369              		.loc 1 268 26 is_stmt 0 view .LVU85
 370 0004 0024     		movs	r4, #0
 371 0006 0494     		str	r4, [sp, #16]
 372 0008 0594     		str	r4, [sp, #20]
 373 000a 0694     		str	r4, [sp, #24]
 374 000c 0794     		str	r4, [sp, #28]
 269:Src/main.c    **** 
 375              		.loc 1 269 3 is_stmt 1 view .LVU86
 269:Src/main.c    **** 
 376              		.loc 1 269 27 is_stmt 0 view .LVU87
 377 000e 0194     		str	r4, [sp, #4]
 378 0010 0294     		str	r4, [sp, #8]
 379 0012 0394     		str	r4, [sp, #12]
 274:Src/main.c    ****   htim2.Init.Prescaler = 95;
 380              		.loc 1 274 3 is_stmt 1 view .LVU88
 274:Src/main.c    ****   htim2.Init.Prescaler = 95;
 381              		.loc 1 274 18 is_stmt 0 view .LVU89
 382 0014 0E4D     		ldr	r5, .L15
 383 0016 4FF08043 		mov	r3, #1073741824
 384 001a 2B60     		str	r3, [r5]
 275:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 385              		.loc 1 275 3 is_stmt 1 view .LVU90
 275:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 386              		.loc 1 275 24 is_stmt 0 view .LVU91
 387 001c 5F23     		movs	r3, #95
 388 001e 6B60     		str	r3, [r5, #4]
 276:Src/main.c    ****   htim2.Init.Period = 9999;
 389              		.loc 1 276 3 is_stmt 1 view .LVU92
 276:Src/main.c    ****   htim2.Init.Period = 9999;
 390              		.loc 1 276 26 is_stmt 0 view .LVU93
 391 0020 AC60     		str	r4, [r5, #8]
 277:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 392              		.loc 1 277 3 is_stmt 1 view .LVU94
 277:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 393              		.loc 1 277 21 is_stmt 0 view .LVU95
 394 0022 42F20F73 		movw	r3, #9999
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 99


 395 0026 EB60     		str	r3, [r5, #12]
 278:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 396              		.loc 1 278 3 is_stmt 1 view .LVU96
 278:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 397              		.loc 1 278 28 is_stmt 0 view .LVU97
 398 0028 2C61     		str	r4, [r5, #16]
 279:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 399              		.loc 1 279 3 is_stmt 1 view .LVU98
 279:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 400              		.loc 1 279 32 is_stmt 0 view .LVU99
 401 002a AC61     		str	r4, [r5, #24]
 280:Src/main.c    ****   {
 402              		.loc 1 280 3 is_stmt 1 view .LVU100
 280:Src/main.c    ****   {
 403              		.loc 1 280 7 is_stmt 0 view .LVU101
 404 002c 2846     		mov	r0, r5
 405 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 406              	.LVL12:
 284:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 407              		.loc 1 284 3 is_stmt 1 view .LVU102
 284:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 408              		.loc 1 284 34 is_stmt 0 view .LVU103
 409 0032 4FF48053 		mov	r3, #4096
 410 0036 0493     		str	r3, [sp, #16]
 285:Src/main.c    ****   {
 411              		.loc 1 285 3 is_stmt 1 view .LVU104
 285:Src/main.c    ****   {
 412              		.loc 1 285 7 is_stmt 0 view .LVU105
 413 0038 04A9     		add	r1, sp, #16
 414 003a 2846     		mov	r0, r5
 415 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 416              	.LVL13:
 289:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 417              		.loc 1 289 3 is_stmt 1 view .LVU106
 289:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 418              		.loc 1 289 37 is_stmt 0 view .LVU107
 419 0040 0194     		str	r4, [sp, #4]
 290:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 420              		.loc 1 290 3 is_stmt 1 view .LVU108
 290:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 421              		.loc 1 290 33 is_stmt 0 view .LVU109
 422 0042 0394     		str	r4, [sp, #12]
 291:Src/main.c    ****   {
 423              		.loc 1 291 3 is_stmt 1 view .LVU110
 291:Src/main.c    ****   {
 424              		.loc 1 291 7 is_stmt 0 view .LVU111
 425 0044 01A9     		add	r1, sp, #4
 426 0046 2846     		mov	r0, r5
 427 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 428              	.LVL14:
 299:Src/main.c    **** 
 429              		.loc 1 299 1 view .LVU112
 430 004c 09B0     		add	sp, sp, #36
 431              	.LCFI11:
 432              		.cfi_def_cfa_offset 12
 433              		@ sp needed
 434 004e 30BD     		pop	{r4, r5, pc}
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 100


 435              	.L16:
 436              		.align	2
 437              	.L15:
 438 0050 00000000 		.word	.LANCHOR0
 439              		.cfi_endproc
 440              	.LFE854:
 442              		.section	.text.MX_UART4_Init,"ax",%progbits
 443              		.align	1
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 447              		.fpu fpv5-d16
 449              	MX_UART4_Init:
 450              	.LFB855:
 307:Src/main.c    **** 
 451              		.loc 1 307 1 is_stmt 1 view -0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455 0000 08B5     		push	{r3, lr}
 456              	.LCFI12:
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 3, -8
 459              		.cfi_offset 14, -4
 316:Src/main.c    ****   huart4.Init.BaudRate = 115200;
 460              		.loc 1 316 3 view .LVU114
 316:Src/main.c    ****   huart4.Init.BaudRate = 115200;
 461              		.loc 1 316 19 is_stmt 0 view .LVU115
 462 0002 0948     		ldr	r0, .L19
 463 0004 094B     		ldr	r3, .L19+4
 464 0006 0360     		str	r3, [r0]
 317:Src/main.c    ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 465              		.loc 1 317 3 is_stmt 1 view .LVU116
 317:Src/main.c    ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 466              		.loc 1 317 24 is_stmt 0 view .LVU117
 467 0008 4FF4E133 		mov	r3, #115200
 468 000c 4360     		str	r3, [r0, #4]
 318:Src/main.c    ****   huart4.Init.StopBits = UART_STOPBITS_1;
 469              		.loc 1 318 3 is_stmt 1 view .LVU118
 318:Src/main.c    ****   huart4.Init.StopBits = UART_STOPBITS_1;
 470              		.loc 1 318 26 is_stmt 0 view .LVU119
 471 000e 0023     		movs	r3, #0
 472 0010 8360     		str	r3, [r0, #8]
 319:Src/main.c    ****   huart4.Init.Parity = UART_PARITY_NONE;
 473              		.loc 1 319 3 is_stmt 1 view .LVU120
 319:Src/main.c    ****   huart4.Init.Parity = UART_PARITY_NONE;
 474              		.loc 1 319 24 is_stmt 0 view .LVU121
 475 0012 C360     		str	r3, [r0, #12]
 320:Src/main.c    ****   huart4.Init.Mode = UART_MODE_TX_RX;
 476              		.loc 1 320 3 is_stmt 1 view .LVU122
 320:Src/main.c    ****   huart4.Init.Mode = UART_MODE_TX_RX;
 477              		.loc 1 320 22 is_stmt 0 view .LVU123
 478 0014 0361     		str	r3, [r0, #16]
 321:Src/main.c    ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 479              		.loc 1 321 3 is_stmt 1 view .LVU124
 321:Src/main.c    ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 480              		.loc 1 321 20 is_stmt 0 view .LVU125
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 101


 481 0016 0C22     		movs	r2, #12
 482 0018 4261     		str	r2, [r0, #20]
 322:Src/main.c    ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 483              		.loc 1 322 3 is_stmt 1 view .LVU126
 322:Src/main.c    ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 484              		.loc 1 322 25 is_stmt 0 view .LVU127
 485 001a 8361     		str	r3, [r0, #24]
 323:Src/main.c    ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 486              		.loc 1 323 3 is_stmt 1 view .LVU128
 323:Src/main.c    ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 487              		.loc 1 323 28 is_stmt 0 view .LVU129
 488 001c C361     		str	r3, [r0, #28]
 324:Src/main.c    ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 489              		.loc 1 324 3 is_stmt 1 view .LVU130
 324:Src/main.c    ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 490              		.loc 1 324 30 is_stmt 0 view .LVU131
 491 001e 0362     		str	r3, [r0, #32]
 325:Src/main.c    ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 492              		.loc 1 325 3 is_stmt 1 view .LVU132
 325:Src/main.c    ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 493              		.loc 1 325 38 is_stmt 0 view .LVU133
 494 0020 4362     		str	r3, [r0, #36]
 326:Src/main.c    ****   {
 495              		.loc 1 326 3 is_stmt 1 view .LVU134
 326:Src/main.c    ****   {
 496              		.loc 1 326 7 is_stmt 0 view .LVU135
 497 0022 FFF7FEFF 		bl	HAL_UART_Init
 498              	.LVL15:
 334:Src/main.c    **** 
 499              		.loc 1 334 1 view .LVU136
 500 0026 08BD     		pop	{r3, pc}
 501              	.L20:
 502              		.align	2
 503              	.L19:
 504 0028 00000000 		.word	.LANCHOR1
 505 002c 004C0040 		.word	1073761280
 506              		.cfi_endproc
 507              	.LFE855:
 509              		.section	.text.MX_UART7_Init,"ax",%progbits
 510              		.align	1
 511              		.syntax unified
 512              		.thumb
 513              		.thumb_func
 514              		.fpu fpv5-d16
 516              	MX_UART7_Init:
 517              	.LFB856:
 342:Src/main.c    **** 
 518              		.loc 1 342 1 is_stmt 1 view -0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522 0000 08B5     		push	{r3, lr}
 523              	.LCFI13:
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 3, -8
 526              		.cfi_offset 14, -4
 351:Src/main.c    ****   huart7.Init.BaudRate = 115200;
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 102


 527              		.loc 1 351 3 view .LVU138
 351:Src/main.c    ****   huart7.Init.BaudRate = 115200;
 528              		.loc 1 351 19 is_stmt 0 view .LVU139
 529 0002 0948     		ldr	r0, .L23
 530 0004 094B     		ldr	r3, .L23+4
 531 0006 0360     		str	r3, [r0]
 352:Src/main.c    ****   huart7.Init.WordLength = UART_WORDLENGTH_8B;
 532              		.loc 1 352 3 is_stmt 1 view .LVU140
 352:Src/main.c    ****   huart7.Init.WordLength = UART_WORDLENGTH_8B;
 533              		.loc 1 352 24 is_stmt 0 view .LVU141
 534 0008 4FF4E133 		mov	r3, #115200
 535 000c 4360     		str	r3, [r0, #4]
 353:Src/main.c    ****   huart7.Init.StopBits = UART_STOPBITS_1;
 536              		.loc 1 353 3 is_stmt 1 view .LVU142
 353:Src/main.c    ****   huart7.Init.StopBits = UART_STOPBITS_1;
 537              		.loc 1 353 26 is_stmt 0 view .LVU143
 538 000e 0023     		movs	r3, #0
 539 0010 8360     		str	r3, [r0, #8]
 354:Src/main.c    ****   huart7.Init.Parity = UART_PARITY_NONE;
 540              		.loc 1 354 3 is_stmt 1 view .LVU144
 354:Src/main.c    ****   huart7.Init.Parity = UART_PARITY_NONE;
 541              		.loc 1 354 24 is_stmt 0 view .LVU145
 542 0012 C360     		str	r3, [r0, #12]
 355:Src/main.c    ****   huart7.Init.Mode = UART_MODE_TX_RX;
 543              		.loc 1 355 3 is_stmt 1 view .LVU146
 355:Src/main.c    ****   huart7.Init.Mode = UART_MODE_TX_RX;
 544              		.loc 1 355 22 is_stmt 0 view .LVU147
 545 0014 0361     		str	r3, [r0, #16]
 356:Src/main.c    ****   huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 546              		.loc 1 356 3 is_stmt 1 view .LVU148
 356:Src/main.c    ****   huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 547              		.loc 1 356 20 is_stmt 0 view .LVU149
 548 0016 0C22     		movs	r2, #12
 549 0018 4261     		str	r2, [r0, #20]
 357:Src/main.c    ****   huart7.Init.OverSampling = UART_OVERSAMPLING_16;
 550              		.loc 1 357 3 is_stmt 1 view .LVU150
 357:Src/main.c    ****   huart7.Init.OverSampling = UART_OVERSAMPLING_16;
 551              		.loc 1 357 25 is_stmt 0 view .LVU151
 552 001a 8361     		str	r3, [r0, #24]
 358:Src/main.c    ****   huart7.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 553              		.loc 1 358 3 is_stmt 1 view .LVU152
 358:Src/main.c    ****   huart7.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 554              		.loc 1 358 28 is_stmt 0 view .LVU153
 555 001c C361     		str	r3, [r0, #28]
 359:Src/main.c    ****   huart7.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 556              		.loc 1 359 3 is_stmt 1 view .LVU154
 359:Src/main.c    ****   huart7.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 557              		.loc 1 359 30 is_stmt 0 view .LVU155
 558 001e 0362     		str	r3, [r0, #32]
 360:Src/main.c    ****   if (HAL_UART_Init(&huart7) != HAL_OK)
 559              		.loc 1 360 3 is_stmt 1 view .LVU156
 360:Src/main.c    ****   if (HAL_UART_Init(&huart7) != HAL_OK)
 560              		.loc 1 360 38 is_stmt 0 view .LVU157
 561 0020 4362     		str	r3, [r0, #36]
 361:Src/main.c    ****   {
 562              		.loc 1 361 3 is_stmt 1 view .LVU158
 361:Src/main.c    ****   {
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 103


 563              		.loc 1 361 7 is_stmt 0 view .LVU159
 564 0022 FFF7FEFF 		bl	HAL_UART_Init
 565              	.LVL16:
 369:Src/main.c    **** 
 566              		.loc 1 369 1 view .LVU160
 567 0026 08BD     		pop	{r3, pc}
 568              	.L24:
 569              		.align	2
 570              	.L23:
 571 0028 00000000 		.word	.LANCHOR2
 572 002c 00780040 		.word	1073772544
 573              		.cfi_endproc
 574              	.LFE856:
 576              		.section	.text.SystemClock_Config,"ax",%progbits
 577              		.align	1
 578              		.global	SystemClock_Config
 579              		.syntax unified
 580              		.thumb
 581              		.thumb_func
 582              		.fpu fpv5-d16
 584              	SystemClock_Config:
 585              	.LFB852:
 167:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 586              		.loc 1 167 1 is_stmt 1 view -0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 224
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590 0000 30B5     		push	{r4, r5, lr}
 591              	.LCFI14:
 592              		.cfi_def_cfa_offset 12
 593              		.cfi_offset 4, -12
 594              		.cfi_offset 5, -8
 595              		.cfi_offset 14, -4
 596 0002 B9B0     		sub	sp, sp, #228
 597              	.LCFI15:
 598              		.cfi_def_cfa_offset 240
 168:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 599              		.loc 1 168 3 view .LVU162
 168:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 600              		.loc 1 168 22 is_stmt 0 view .LVU163
 601 0004 3422     		movs	r2, #52
 602 0006 0021     		movs	r1, #0
 603 0008 2BA8     		add	r0, sp, #172
 604 000a FFF7FEFF 		bl	memset
 605              	.LVL17:
 169:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 606              		.loc 1 169 3 is_stmt 1 view .LVU164
 169:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 607              		.loc 1 169 22 is_stmt 0 view .LVU165
 608 000e 0024     		movs	r4, #0
 609 0010 2694     		str	r4, [sp, #152]
 610 0012 2794     		str	r4, [sp, #156]
 611 0014 2894     		str	r4, [sp, #160]
 612 0016 2994     		str	r4, [sp, #164]
 613 0018 2A94     		str	r4, [sp, #168]
 170:Src/main.c    **** 
 614              		.loc 1 170 3 is_stmt 1 view .LVU166
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 104


 170:Src/main.c    **** 
 615              		.loc 1 170 28 is_stmt 0 view .LVU167
 616 001a 9022     		movs	r2, #144
 617 001c 2146     		mov	r1, r4
 618 001e 02A8     		add	r0, sp, #8
 619 0020 FFF7FEFF 		bl	memset
 620              	.LVL18:
 174:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 621              		.loc 1 174 3 is_stmt 1 view .LVU168
 622              	.LBB38:
 174:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 623              		.loc 1 174 3 view .LVU169
 174:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 624              		.loc 1 174 3 view .LVU170
 625 0024 1F4B     		ldr	r3, .L27
 626 0026 1A6C     		ldr	r2, [r3, #64]
 627 0028 42F08052 		orr	r2, r2, #268435456
 628 002c 1A64     		str	r2, [r3, #64]
 174:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 629              		.loc 1 174 3 view .LVU171
 630 002e 1B6C     		ldr	r3, [r3, #64]
 631 0030 03F08053 		and	r3, r3, #268435456
 632 0034 0093     		str	r3, [sp]
 174:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 633              		.loc 1 174 3 view .LVU172
 634 0036 009B     		ldr	r3, [sp]
 635              	.LBE38:
 174:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 636              		.loc 1 174 3 view .LVU173
 175:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 637              		.loc 1 175 3 view .LVU174
 638              	.LBB39:
 175:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 639              		.loc 1 175 3 view .LVU175
 175:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 640              		.loc 1 175 3 view .LVU176
 641 0038 1B4A     		ldr	r2, .L27+4
 642 003a 1368     		ldr	r3, [r2]
 643 003c 23F44043 		bic	r3, r3, #49152
 644 0040 43F48043 		orr	r3, r3, #16384
 645 0044 1360     		str	r3, [r2]
 175:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 646              		.loc 1 175 3 view .LVU177
 647 0046 1368     		ldr	r3, [r2]
 648 0048 03F44043 		and	r3, r3, #49152
 649 004c 0193     		str	r3, [sp, #4]
 175:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 650              		.loc 1 175 3 view .LVU178
 651 004e 019B     		ldr	r3, [sp, #4]
 652              	.LBE39:
 175:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 653              		.loc 1 175 3 view .LVU179
 178:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 654              		.loc 1 178 3 view .LVU180
 178:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 655              		.loc 1 178 36 is_stmt 0 view .LVU181
 656 0050 0225     		movs	r5, #2
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 105


 657 0052 2B95     		str	r5, [sp, #172]
 179:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 658              		.loc 1 179 3 is_stmt 1 view .LVU182
 179:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 659              		.loc 1 179 30 is_stmt 0 view .LVU183
 660 0054 0123     		movs	r3, #1
 661 0056 2E93     		str	r3, [sp, #184]
 180:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 662              		.loc 1 180 3 is_stmt 1 view .LVU184
 180:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 663              		.loc 1 180 41 is_stmt 0 view .LVU185
 664 0058 1023     		movs	r3, #16
 665 005a 2F93     		str	r3, [sp, #188]
 181:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 666              		.loc 1 181 3 is_stmt 1 view .LVU186
 181:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 667              		.loc 1 181 34 is_stmt 0 view .LVU187
 668 005c 3195     		str	r5, [sp, #196]
 182:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 669              		.loc 1 182 3 is_stmt 1 view .LVU188
 182:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 670              		.loc 1 182 35 is_stmt 0 view .LVU189
 671 005e 3294     		str	r4, [sp, #200]
 183:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 96;
 672              		.loc 1 183 3 is_stmt 1 view .LVU190
 183:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 96;
 673              		.loc 1 183 30 is_stmt 0 view .LVU191
 674 0060 0823     		movs	r3, #8
 675 0062 3393     		str	r3, [sp, #204]
 184:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 676              		.loc 1 184 3 is_stmt 1 view .LVU192
 184:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 677              		.loc 1 184 30 is_stmt 0 view .LVU193
 678 0064 6023     		movs	r3, #96
 679 0066 3493     		str	r3, [sp, #208]
 185:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 680              		.loc 1 185 3 is_stmt 1 view .LVU194
 185:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 681              		.loc 1 185 30 is_stmt 0 view .LVU195
 682 0068 3595     		str	r5, [sp, #212]
 186:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 683              		.loc 1 186 3 is_stmt 1 view .LVU196
 186:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 684              		.loc 1 186 30 is_stmt 0 view .LVU197
 685 006a 3695     		str	r5, [sp, #216]
 187:Src/main.c    ****   {
 686              		.loc 1 187 3 is_stmt 1 view .LVU198
 187:Src/main.c    ****   {
 687              		.loc 1 187 7 is_stmt 0 view .LVU199
 688 006c 2BA8     		add	r0, sp, #172
 689 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 690              	.LVL19:
 193:Src/main.c    ****   {
 691              		.loc 1 193 3 is_stmt 1 view .LVU200
 193:Src/main.c    ****   {
 692              		.loc 1 193 7 is_stmt 0 view .LVU201
 693 0072 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 106


 694              	.LVL20:
 199:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 695              		.loc 1 199 3 is_stmt 1 view .LVU202
 199:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 696              		.loc 1 199 31 is_stmt 0 view .LVU203
 697 0076 0F23     		movs	r3, #15
 698 0078 2693     		str	r3, [sp, #152]
 201:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 699              		.loc 1 201 3 is_stmt 1 view .LVU204
 201:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 700              		.loc 1 201 34 is_stmt 0 view .LVU205
 701 007a 2795     		str	r5, [sp, #156]
 202:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 702              		.loc 1 202 3 is_stmt 1 view .LVU206
 202:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 703              		.loc 1 202 35 is_stmt 0 view .LVU207
 704 007c 2894     		str	r4, [sp, #160]
 203:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 705              		.loc 1 203 3 is_stmt 1 view .LVU208
 203:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 706              		.loc 1 203 36 is_stmt 0 view .LVU209
 707 007e 4FF48053 		mov	r3, #4096
 708 0082 2993     		str	r3, [sp, #164]
 204:Src/main.c    **** 
 709              		.loc 1 204 3 is_stmt 1 view .LVU210
 204:Src/main.c    **** 
 710              		.loc 1 204 36 is_stmt 0 view .LVU211
 711 0084 2A94     		str	r4, [sp, #168]
 206:Src/main.c    ****   {
 712              		.loc 1 206 3 is_stmt 1 view .LVU212
 206:Src/main.c    ****   {
 713              		.loc 1 206 7 is_stmt 0 view .LVU213
 714 0086 0321     		movs	r1, #3
 715 0088 26A8     		add	r0, sp, #152
 716 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 717              	.LVL21:
 210:Src/main.c    ****   PeriphClkInitStruct.Uart4ClockSelection = RCC_UART4CLKSOURCE_PCLK1;
 718              		.loc 1 210 3 is_stmt 1 view .LVU214
 210:Src/main.c    ****   PeriphClkInitStruct.Uart4ClockSelection = RCC_UART4CLKSOURCE_PCLK1;
 719              		.loc 1 210 44 is_stmt 0 view .LVU215
 720 008e 4FF49053 		mov	r3, #4608
 721 0092 0293     		str	r3, [sp, #8]
 211:Src/main.c    ****   PeriphClkInitStruct.Uart7ClockSelection = RCC_UART7CLKSOURCE_PCLK1;
 722              		.loc 1 211 3 is_stmt 1 view .LVU216
 211:Src/main.c    ****   PeriphClkInitStruct.Uart7ClockSelection = RCC_UART7CLKSOURCE_PCLK1;
 723              		.loc 1 211 43 is_stmt 0 view .LVU217
 724 0094 1694     		str	r4, [sp, #88]
 212:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 725              		.loc 1 212 3 is_stmt 1 view .LVU218
 212:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 726              		.loc 1 212 43 is_stmt 0 view .LVU219
 727 0096 1994     		str	r4, [sp, #100]
 213:Src/main.c    ****   {
 728              		.loc 1 213 3 is_stmt 1 view .LVU220
 213:Src/main.c    ****   {
 729              		.loc 1 213 7 is_stmt 0 view .LVU221
 730 0098 02A8     		add	r0, sp, #8
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 107


 731 009a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 732              	.LVL22:
 217:Src/main.c    **** 
 733              		.loc 1 217 1 view .LVU222
 734 009e 39B0     		add	sp, sp, #228
 735              	.LCFI16:
 736              		.cfi_def_cfa_offset 12
 737              		@ sp needed
 738 00a0 30BD     		pop	{r4, r5, pc}
 739              	.L28:
 740 00a2 00BF     		.align	2
 741              	.L27:
 742 00a4 00380240 		.word	1073887232
 743 00a8 00700040 		.word	1073770496
 744              		.cfi_endproc
 745              	.LFE852:
 747              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 748              		.align	2
 749              	.LC0:
 750 0000 476F546F 		.ascii	"GoToMeas OK!\000"
 750      4D656173 
 750      204F4B21 
 750      00
 751              		.section	.text.main,"ax",%progbits
 752              		.align	1
 753              		.global	main
 754              		.syntax unified
 755              		.thumb
 756              		.thumb_func
 757              		.fpu fpv5-d16
 759              	main:
 760              	.LFB851:
  94:Src/main.c    ****   /* USER CODE BEGIN 1 */
 761              		.loc 1 94 1 is_stmt 1 view -0
 762              		.cfi_startproc
 763              		@ Volatile: function does not return.
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 0, uses_anonymous_args = 0
 766 0000 08B5     		push	{r3, lr}
 767              	.LCFI17:
 768              		.cfi_def_cfa_offset 8
 769              		.cfi_offset 3, -8
 770              		.cfi_offset 14, -4
 103:Src/main.c    **** 
 771              		.loc 1 103 3 view .LVU224
 772 0002 FFF7FEFF 		bl	HAL_Init
 773              	.LVL23:
 110:Src/main.c    **** 
 774              		.loc 1 110 3 view .LVU225
 775 0006 FFF7FEFF 		bl	SystemClock_Config
 776              	.LVL24:
 117:Src/main.c    ****   MX_DMA_Init();
 777              		.loc 1 117 3 view .LVU226
 778 000a FFF7FEFF 		bl	MX_GPIO_Init
 779              	.LVL25:
 118:Src/main.c    ****   MX_TIM1_Init();
 780              		.loc 1 118 3 view .LVU227
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 108


 781 000e FFF7FEFF 		bl	MX_DMA_Init
 782              	.LVL26:
 119:Src/main.c    ****   MX_TIM2_Init();
 783              		.loc 1 119 3 view .LVU228
 784 0012 FFF7FEFF 		bl	MX_TIM1_Init
 785              	.LVL27:
 120:Src/main.c    ****   MX_UART4_Init();
 786              		.loc 1 120 3 view .LVU229
 787 0016 FFF7FEFF 		bl	MX_TIM2_Init
 788              	.LVL28:
 121:Src/main.c    ****   MX_UART7_Init();
 789              		.loc 1 121 3 view .LVU230
 790 001a FFF7FEFF 		bl	MX_UART4_Init
 791              	.LVL29:
 122:Src/main.c    ****   /* USER CODE BEGIN 2 */
 792              		.loc 1 122 3 view .LVU231
 793 001e FFF7FEFF 		bl	MX_UART7_Init
 794              	.LVL30:
 125:Src/main.c    **** 
 795              		.loc 1 125 3 view .LVU232
 796 0022 4FF47A70 		mov	r0, #1000
 797 0026 FFF7FEFF 		bl	HAL_Delay
 798              	.LVL31:
 127:Src/main.c    ****   LL_TIM_SetCounter(TIM1, 0);
 799              		.loc 1 127 3 view .LVU233
 800              	.LBB40:
 801              	.LBI40:
1263:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 802              		.loc 3 1263 22 view .LVU234
 803              	.LBB41:
1265:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 804              		.loc 3 1265 3 view .LVU235
 805 002a 194B     		ldr	r3, .L34
 806 002c 1A68     		ldr	r2, [r3]
 807 002e 42F00102 		orr	r2, r2, #1
 808 0032 1A60     		str	r2, [r3]
 809              	.LVL32:
1265:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 810              		.loc 3 1265 3 is_stmt 0 view .LVU236
 811              	.LBE41:
 812              	.LBE40:
 128:Src/main.c    **** 
 813              		.loc 1 128 3 is_stmt 1 view .LVU237
 814              	.LBB42:
 815              	.LBI42:
1505:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 816              		.loc 3 1505 22 view .LVU238
 817              	.LBB43:
1507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 818              		.loc 3 1507 3 view .LVU239
 819 0034 0022     		movs	r2, #0
 820 0036 5A62     		str	r2, [r3, #36]
 821              	.LVL33:
1507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 822              		.loc 3 1507 3 is_stmt 0 view .LVU240
 823              	.LBE43:
 824              	.LBE42:
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 109


 130:Src/main.c    **** 
 825              		.loc 1 130 3 is_stmt 1 view .LVU241
 826 0038 4FF47A70 		mov	r0, #1000
 827 003c FFF7FEFF 		bl	HAL_Delay
 828              	.LVL34:
 134:Src/main.c    **** 
 829              		.loc 1 134 3 view .LVU242
 134:Src/main.c    **** 
 830              		.loc 1 134 9 is_stmt 0 view .LVU243
 831 0040 4FF0FF33 		mov	r3, #-1
 832 0044 0522     		movs	r2, #5
 833 0046 1349     		ldr	r1, .L34+4
 834 0048 1348     		ldr	r0, .L34+8
 835 004a FFF7FEFF 		bl	HAL_UART_Transmit
 836              	.LVL35:
 134:Src/main.c    **** 
 837              		.loc 1 134 7 view .LVU244
 838 004e 134B     		ldr	r3, .L34+12
 839 0050 1870     		strb	r0, [r3]
 136:Src/main.c    ****     sprintf((char*)buff, "GoToMeas OK!");
 840              		.loc 1 136 3 is_stmt 1 view .LVU245
 136:Src/main.c    ****     sprintf((char*)buff, "GoToMeas OK!");
 841              		.loc 1 136 6 is_stmt 0 view .LVU246
 842 0052 B8B1     		cbz	r0, .L33
 843              	.L30:
 140:Src/main.c    **** 
 844              		.loc 1 140 3 is_stmt 1 view .LVU247
 140:Src/main.c    **** 
 845              		.loc 1 140 36 is_stmt 0 view .LVU248
 846 0054 124C     		ldr	r4, .L34+16
 847 0056 2046     		mov	r0, r4
 848 0058 FFF7FEFF 		bl	strlen
 849              	.LVL36:
 140:Src/main.c    **** 
 850              		.loc 1 140 3 view .LVU249
 851 005c 4FF0FF33 		mov	r3, #-1
 852 0060 82B2     		uxth	r2, r0
 853 0062 2146     		mov	r1, r4
 854 0064 0F48     		ldr	r0, .L34+20
 855 0066 FFF7FEFF 		bl	HAL_UART_Transmit
 856              	.LVL37:
 142:Src/main.c    **** 
 857              		.loc 1 142 3 is_stmt 1 view .LVU250
 858 006a 4FF47A70 		mov	r0, #1000
 859 006e FFF7FEFF 		bl	HAL_Delay
 860              	.LVL38:
 144:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2); // Start the interrupt for timer 2
 861              		.loc 1 144 3 view .LVU251
 862 0072 0422     		movs	r2, #4
 863 0074 0C49     		ldr	r1, .L34+24
 864 0076 0848     		ldr	r0, .L34+8
 865 0078 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 866              	.LVL39:
 145:Src/main.c    **** 
 867              		.loc 1 145 3 view .LVU252
 868 007c 0B48     		ldr	r0, .L34+28
 869 007e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 110


 870              	.LVL40:
 871              	.L31:
 153:Src/main.c    ****   {
 872              		.loc 1 153 3 discriminator 1 view .LVU253
 158:Src/main.c    ****   /* USER CODE END 3 */
 873              		.loc 1 158 3 discriminator 1 view .LVU254
 153:Src/main.c    ****   {
 874              		.loc 1 153 9 discriminator 1 view .LVU255
 875 0082 FEE7     		b	.L31
 876              	.L33:
 137:Src/main.c    ****   }  
 877              		.loc 1 137 5 view .LVU256
 878 0084 0A4B     		ldr	r3, .L34+32
 879 0086 064C     		ldr	r4, .L34+16
 880 0088 0FCB     		ldm	r3, {r0, r1, r2, r3}
 881 008a 07C4     		stmia	r4!, {r0, r1, r2}
 882 008c 2370     		strb	r3, [r4]
 883 008e E1E7     		b	.L30
 884              	.L35:
 885              		.align	2
 886              	.L34:
 887 0090 00000140 		.word	1073807360
 888 0094 00000000 		.word	.LANCHOR3
 889 0098 00000000 		.word	.LANCHOR2
 890 009c 00000000 		.word	.LANCHOR4
 891 00a0 00000000 		.word	.LANCHOR5
 892 00a4 00000000 		.word	.LANCHOR1
 893 00a8 00000000 		.word	.LANCHOR6
 894 00ac 00000000 		.word	.LANCHOR0
 895 00b0 00000000 		.word	.LC0
 896              		.cfi_endproc
 897              	.LFE851:
 899              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 900              		.align	1
 901              		.global	HAL_TIM_PeriodElapsedCallback
 902              		.syntax unified
 903              		.thumb
 904              		.thumb_func
 905              		.fpu fpv5-d16
 907              	HAL_TIM_PeriodElapsedCallback:
 908              	.LVL41:
 909              	.LFB859:
 412:Src/main.c    **** 
 413:Src/main.c    **** /* USER CODE BEGIN 4 */
 414:Src/main.c    **** 
 415:Src/main.c    **** //definition of IRQhandler functions callback
 416:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim){
 910              		.loc 1 416 60 view -0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 0, uses_anonymous_args = 0
 914              		.loc 1 416 60 is_stmt 0 view .LVU258
 915 0000 08B5     		push	{r3, lr}
 916              	.LCFI18:
 917              		.cfi_def_cfa_offset 8
 918              		.cfi_offset 3, -8
 919              		.cfi_offset 14, -4
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 111


 417:Src/main.c    **** 
 418:Src/main.c    ****   if (htim==&htim2){
 920              		.loc 1 418 3 is_stmt 1 view .LVU259
 921              		.loc 1 418 6 is_stmt 0 view .LVU260
 922 0002 0A4B     		ldr	r3, .L42
 923 0004 8342     		cmp	r3, r0
 924 0006 00D0     		beq	.L40
 925              	.LVL42:
 926              	.L36:
 419:Src/main.c    **** 
 420:Src/main.c    ****     if(led_count>=99){
 421:Src/main.c    ****       led_count = 0;
 422:Src/main.c    ****       HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_2);//led toggle
 423:Src/main.c    ****     
 424:Src/main.c    ****     }
 425:Src/main.c    **** 
 426:Src/main.c    ****     led_count += 1;
 427:Src/main.c    ****   }
 428:Src/main.c    **** }
 927              		.loc 1 428 1 view .LVU261
 928 0008 08BD     		pop	{r3, pc}
 929              	.LVL43:
 930              	.L40:
 420:Src/main.c    ****       led_count = 0;
 931              		.loc 1 420 5 is_stmt 1 view .LVU262
 420:Src/main.c    ****       led_count = 0;
 932              		.loc 1 420 17 is_stmt 0 view .LVU263
 933 000a 094B     		ldr	r3, .L42+4
 934 000c 1B68     		ldr	r3, [r3]
 420:Src/main.c    ****       led_count = 0;
 935              		.loc 1 420 7 view .LVU264
 936 000e 622B     		cmp	r3, #98
 937 0010 04DC     		bgt	.L41
 938              	.LVL44:
 939              	.L38:
 426:Src/main.c    ****   }
 940              		.loc 1 426 5 is_stmt 1 view .LVU265
 426:Src/main.c    ****   }
 941              		.loc 1 426 15 is_stmt 0 view .LVU266
 942 0012 074A     		ldr	r2, .L42+4
 943 0014 1368     		ldr	r3, [r2]
 944 0016 0133     		adds	r3, r3, #1
 945 0018 1360     		str	r3, [r2]
 946              		.loc 1 428 1 view .LVU267
 947 001a F5E7     		b	.L36
 948              	.LVL45:
 949              	.L41:
 421:Src/main.c    ****       HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_2);//led toggle
 950              		.loc 1 421 7 is_stmt 1 view .LVU268
 421:Src/main.c    ****       HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_2);//led toggle
 951              		.loc 1 421 17 is_stmt 0 view .LVU269
 952 001c 044B     		ldr	r3, .L42+4
 953 001e 0022     		movs	r2, #0
 954 0020 1A60     		str	r2, [r3]
 422:Src/main.c    ****     
 955              		.loc 1 422 7 is_stmt 1 view .LVU270
 956 0022 0421     		movs	r1, #4
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 112


 957 0024 0348     		ldr	r0, .L42+8
 958              	.LVL46:
 422:Src/main.c    ****     
 959              		.loc 1 422 7 is_stmt 0 view .LVU271
 960 0026 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 961              	.LVL47:
 962 002a F2E7     		b	.L38
 963              	.L43:
 964              		.align	2
 965              	.L42:
 966 002c 00000000 		.word	.LANCHOR0
 967 0030 00000000 		.word	.LANCHOR7
 968 0034 00100240 		.word	1073876992
 969              		.cfi_endproc
 970              	.LFE859:
 972              		.section	.rodata.HAL_UART_RxCpltCallback.str1.4,"aMS",%progbits,1
 973              		.align	2
 974              	.LC1:
 975 0000 64656C61 		.ascii	"delay = %d\000"
 975      79203D20 
 975      256400
 976 000b 00       		.align	2
 977              	.LC2:
 978 000c 48656164 		.ascii	"Header_Ident = %d\000"
 978      65725F49 
 978      64656E74 
 978      203D2025 
 978      6400
 979              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 980              		.align	1
 981              		.global	HAL_UART_RxCpltCallback
 982              		.syntax unified
 983              		.thumb
 984              		.thumb_func
 985              		.fpu fpv5-d16
 987              	HAL_UART_RxCpltCallback:
 988              	.LVL48:
 989              	.LFB860:
 429:Src/main.c    **** 
 430:Src/main.c    **** //UART Rx Complete callback
 431:Src/main.c    **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 990              		.loc 1 431 56 is_stmt 1 view -0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 0
 993              		@ frame_needed = 0, uses_anonymous_args = 0
 994              		.loc 1 431 56 is_stmt 0 view .LVU273
 995 0000 10B5     		push	{r4, lr}
 996              	.LCFI19:
 997              		.cfi_def_cfa_offset 8
 998              		.cfi_offset 4, -8
 999              		.cfi_offset 14, -4
 432:Src/main.c    **** 
 433:Src/main.c    ****   //if (huart == &huart7){
 434:Src/main.c    ****     
 435:Src/main.c    ****     time[0] = LL_TIM_GetCounter(TIM1); // get the tim1 timing between 2 complete receives from AHRS
 1000              		.loc 1 435 5 is_stmt 1 view .LVU274
 1001              	.LVL49:
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 113


 1002              	.LBB44:
 1003              	.LBI44:
1518:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 1004              		.loc 3 1518 26 view .LVU275
 1005              	.LBB45:
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1006              		.loc 3 1520 3 view .LVU276
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1007              		.loc 3 1520 10 is_stmt 0 view .LVU277
 1008 0002 1F4B     		ldr	r3, .L48
 1009 0004 5A6A     		ldr	r2, [r3, #36]
 1010              	.LVL50:
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1011              		.loc 3 1520 10 view .LVU278
 1012              	.LBE45:
 1013              	.LBE44:
 1014              		.loc 1 435 13 view .LVU279
 1015 0006 1F49     		ldr	r1, .L48+4
 1016 0008 0A60     		str	r2, [r1]
 436:Src/main.c    ****     LL_TIM_SetCounter(TIM1, 0); 
 1017              		.loc 1 436 5 is_stmt 1 view .LVU280
 1018              	.LVL51:
 1019              	.LBB46:
 1020              	.LBI46:
1505:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 1021              		.loc 3 1505 22 view .LVU281
 1022              	.LBB47:
1507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1023              		.loc 3 1507 3 view .LVU282
 1024 000a 0021     		movs	r1, #0
 1025 000c 5962     		str	r1, [r3, #36]
 1026              	.LVL52:
1507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1027              		.loc 3 1507 3 is_stmt 0 view .LVU283
 1028              	.LBE47:
 1029              	.LBE46:
 437:Src/main.c    **** 
 438:Src/main.c    ****     sprintf((char*)buff, "delay = %d", time[0]);
 1030              		.loc 1 438 5 is_stmt 1 view .LVU284
 1031 000e 1E4C     		ldr	r4, .L48+8
 1032 0010 1E49     		ldr	r1, .L48+12
 1033 0012 2046     		mov	r0, r4
 1034              	.LVL53:
 1035              		.loc 1 438 5 is_stmt 0 view .LVU285
 1036 0014 FFF7FEFF 		bl	sprintf
 1037              	.LVL54:
 439:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 1038              		.loc 1 439 5 is_stmt 1 view .LVU286
 1039              		.loc 1 439 38 is_stmt 0 view .LVU287
 1040 0018 2046     		mov	r0, r4
 1041 001a FFF7FEFF 		bl	strlen
 1042              	.LVL55:
 1043              		.loc 1 439 5 view .LVU288
 1044 001e 4FF0FF33 		mov	r3, #-1
 1045 0022 82B2     		uxth	r2, r0
 1046 0024 2146     		mov	r1, r4
 1047 0026 1A48     		ldr	r0, .L48+16
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 114


 1048 0028 FFF7FEFF 		bl	HAL_UART_Transmit
 1049              	.LVL56:
 440:Src/main.c    **** 
 441:Src/main.c    ****     if (AHRS_buff[0]==header[0] && AHRS_buff[1]==header[1] && AHRS_buff[2]==header[2] && AHRS_buff[
 1050              		.loc 1 441 5 is_stmt 1 view .LVU289
 1051              		.loc 1 441 18 is_stmt 0 view .LVU290
 1052 002c 194B     		ldr	r3, .L48+20
 1053 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1054              		.loc 1 441 8 view .LVU291
 1055 0030 542B     		cmp	r3, #84
 1056 0032 05D0     		beq	.L47
 1057              	.L45:
 442:Src/main.c    ****       msg_rec_count += 1;
 443:Src/main.c    ****       sprintf((char*)buff, "Header_Ident = %d", msg_rec_count);
 444:Src/main.c    ****       HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 445:Src/main.c    ****     }
 446:Src/main.c    **** 
 447:Src/main.c    ****     HAL_UART_Receive_DMA (&huart7, AHRS_buff, 54); //Enables a new receive from AHRS and wait for c
 1058              		.loc 1 447 5 is_stmt 1 view .LVU292
 1059 0034 3622     		movs	r2, #54
 1060 0036 1749     		ldr	r1, .L48+20
 1061 0038 1748     		ldr	r0, .L48+24
 1062 003a FFF7FEFF 		bl	HAL_UART_Receive_DMA
 1063              	.LVL57:
 448:Src/main.c    ****   //}
 449:Src/main.c    **** 	
 450:Src/main.c    **** }
 1064              		.loc 1 450 1 is_stmt 0 view .LVU293
 1065 003e 10BD     		pop	{r4, pc}
 1066              	.L47:
 441:Src/main.c    ****       msg_rec_count += 1;
 1067              		.loc 1 441 45 discriminator 1 view .LVU294
 1068 0040 144B     		ldr	r3, .L48+20
 1069 0042 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 441:Src/main.c    ****       msg_rec_count += 1;
 1070              		.loc 1 441 33 discriminator 1 view .LVU295
 1071 0044 FA2B     		cmp	r3, #250
 1072 0046 F5D1     		bne	.L45
 441:Src/main.c    ****       msg_rec_count += 1;
 1073              		.loc 1 441 72 discriminator 2 view .LVU296
 1074 0048 124B     		ldr	r3, .L48+20
 1075 004a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 441:Src/main.c    ****       msg_rec_count += 1;
 1076              		.loc 1 441 60 discriminator 2 view .LVU297
 1077 004c FF2B     		cmp	r3, #255
 1078 004e F1D1     		bne	.L45
 441:Src/main.c    ****       msg_rec_count += 1;
 1079              		.loc 1 441 99 discriminator 3 view .LVU298
 1080 0050 104B     		ldr	r3, .L48+20
 1081 0052 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 441:Src/main.c    ****       msg_rec_count += 1;
 1082              		.loc 1 441 87 discriminator 3 view .LVU299
 1083 0054 322B     		cmp	r3, #50
 1084 0056 EDD1     		bne	.L45
 442:Src/main.c    ****       msg_rec_count += 1;
 1085              		.loc 1 442 7 is_stmt 1 view .LVU300
 442:Src/main.c    ****       msg_rec_count += 1;
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 115


 1086              		.loc 1 442 21 is_stmt 0 view .LVU301
 1087 0058 104B     		ldr	r3, .L48+28
 1088 005a 1A68     		ldr	r2, [r3]
 1089 005c 0132     		adds	r2, r2, #1
 1090 005e 1A60     		str	r2, [r3]
 443:Src/main.c    ****       HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 1091              		.loc 1 443 7 is_stmt 1 view .LVU302
 1092 0060 0F49     		ldr	r1, .L48+32
 1093 0062 2046     		mov	r0, r4
 1094 0064 FFF7FEFF 		bl	sprintf
 1095              	.LVL58:
 444:Src/main.c    ****     }
 1096              		.loc 1 444 7 view .LVU303
 444:Src/main.c    ****     }
 1097              		.loc 1 444 40 is_stmt 0 view .LVU304
 1098 0068 2046     		mov	r0, r4
 1099 006a FFF7FEFF 		bl	strlen
 1100              	.LVL59:
 444:Src/main.c    ****     }
 1101              		.loc 1 444 7 view .LVU305
 1102 006e 4FF0FF33 		mov	r3, #-1
 1103 0072 82B2     		uxth	r2, r0
 1104 0074 2146     		mov	r1, r4
 1105 0076 0648     		ldr	r0, .L48+16
 1106 0078 FFF7FEFF 		bl	HAL_UART_Transmit
 1107              	.LVL60:
 1108 007c DAE7     		b	.L45
 1109              	.L49:
 1110 007e 00BF     		.align	2
 1111              	.L48:
 1112 0080 00000140 		.word	1073807360
 1113 0084 00000000 		.word	.LANCHOR8
 1114 0088 00000000 		.word	.LANCHOR5
 1115 008c 00000000 		.word	.LC1
 1116 0090 00000000 		.word	.LANCHOR1
 1117 0094 00000000 		.word	.LANCHOR6
 1118 0098 00000000 		.word	.LANCHOR2
 1119 009c 00000000 		.word	.LANCHOR9
 1120 00a0 0C000000 		.word	.LC2
 1121              		.cfi_endproc
 1122              	.LFE860:
 1124              		.section	.text.Error_Handler,"ax",%progbits
 1125              		.align	1
 1126              		.global	Error_Handler
 1127              		.syntax unified
 1128              		.thumb
 1129              		.thumb_func
 1130              		.fpu fpv5-d16
 1132              	Error_Handler:
 1133              	.LFB861:
 451:Src/main.c    **** 
 452:Src/main.c    **** 
 453:Src/main.c    **** /* USER CODE END 4 */
 454:Src/main.c    **** 
 455:Src/main.c    **** /**
 456:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 457:Src/main.c    ****   * @retval None
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 116


 458:Src/main.c    ****   */
 459:Src/main.c    **** void Error_Handler(void)
 460:Src/main.c    **** {
 1134              		.loc 1 460 1 is_stmt 1 view -0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138              		@ link register save eliminated.
 461:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 462:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 463:Src/main.c    **** 
 464:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 465:Src/main.c    **** }
 1139              		.loc 1 465 1 view .LVU307
 1140 0000 7047     		bx	lr
 1141              		.cfi_endproc
 1142              	.LFE861:
 1144              		.global	go_to_meas
 1145              		.global	req_data
 1146              		.global	header
 1147              		.global	AHRS_buff
 1148              		.global	buff
 1149              		.global	ret
 1150              		.global	time
 1151              		.global	msg_rec_count
 1152              		.global	led_count
 1153              		.global	count1
 1154              		.global	hdma_uart7_rx
 1155              		.global	huart7
 1156              		.global	huart4
 1157              		.global	htim2
 1158              		.section	.bss.AHRS_buff,"aw",%nobits
 1159              		.align	2
 1160              		.set	.LANCHOR6,. + 0
 1163              	AHRS_buff:
 1164 0000 00000000 		.space	54
 1164      00000000 
 1164      00000000 
 1164      00000000 
 1164      00000000 
 1165              		.section	.bss.buff,"aw",%nobits
 1166              		.align	2
 1167              		.set	.LANCHOR5,. + 0
 1170              	buff:
 1171 0000 00000000 		.space	50
 1171      00000000 
 1171      00000000 
 1171      00000000 
 1171      00000000 
 1172              		.section	.bss.count1,"aw",%nobits
 1173              		.align	2
 1176              	count1:
 1177 0000 00000000 		.space	4
 1178              		.section	.bss.hdma_uart7_rx,"aw",%nobits
 1179              		.align	2
 1182              	hdma_uart7_rx:
 1183 0000 00000000 		.space	96
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 117


 1183      00000000 
 1183      00000000 
 1183      00000000 
 1183      00000000 
 1184              		.section	.bss.htim2,"aw",%nobits
 1185              		.align	2
 1186              		.set	.LANCHOR0,. + 0
 1189              	htim2:
 1190 0000 00000000 		.space	64
 1190      00000000 
 1190      00000000 
 1190      00000000 
 1190      00000000 
 1191              		.section	.bss.huart4,"aw",%nobits
 1192              		.align	2
 1193              		.set	.LANCHOR1,. + 0
 1196              	huart4:
 1197 0000 00000000 		.space	128
 1197      00000000 
 1197      00000000 
 1197      00000000 
 1197      00000000 
 1198              		.section	.bss.huart7,"aw",%nobits
 1199              		.align	2
 1200              		.set	.LANCHOR2,. + 0
 1203              	huart7:
 1204 0000 00000000 		.space	128
 1204      00000000 
 1204      00000000 
 1204      00000000 
 1204      00000000 
 1205              		.section	.bss.led_count,"aw",%nobits
 1206              		.align	2
 1207              		.set	.LANCHOR7,. + 0
 1210              	led_count:
 1211 0000 00000000 		.space	4
 1212              		.section	.bss.msg_rec_count,"aw",%nobits
 1213              		.align	2
 1214              		.set	.LANCHOR9,. + 0
 1217              	msg_rec_count:
 1218 0000 00000000 		.space	4
 1219              		.section	.bss.time,"aw",%nobits
 1220              		.align	2
 1221              		.set	.LANCHOR8,. + 0
 1224              	time:
 1225 0000 00000000 		.space	20
 1225      00000000 
 1225      00000000 
 1225      00000000 
 1225      00000000 
 1226              		.section	.data.go_to_meas,"aw"
 1227              		.align	2
 1228              		.set	.LANCHOR3,. + 0
 1231              	go_to_meas:
 1232 0000 FAFF1000 		.ascii	"\372\377\020\000\361"
 1232      F1
 1233              		.section	.data.req_data,"aw"
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 118


 1234              		.align	2
 1237              	req_data:
 1238 0000 FA013400 		.ascii	"\372\0014\000\313"
 1238      CB
 1239              		.section	.data.ret,"aw"
 1240              		.set	.LANCHOR4,. + 0
 1243              	ret:
 1244 0000 01       		.byte	1
 1245              		.section	.rodata.header,"a"
 1246              		.align	2
 1249              	header:
 1250 0000 54FAFF32 		.ascii	"T\372\37721"
 1250      31
 1251              		.text
 1252              	.Letext0:
 1253              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 1254              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 1255              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1256              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1257              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 1258              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 1259              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1260              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1261              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 1262              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 1263              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_rcc.h"
 1264              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_dma.h"
 1265              		.file 16 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\in
 1266              		.file 17 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\in
 1267              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 1268              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 1269              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 1270              		.file 21 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1271              		.file 22 "<built-in>"
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 119


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:17     .text.MX_GPIO_Init:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:129    .text.MX_GPIO_Init:0000006c $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:135    .text.MX_DMA_Init:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:141    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:189    .text.MX_DMA_Init:00000030 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:194    .text.MX_TIM1_Init:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:200    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:340    .text.MX_TIM1_Init:00000068 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:347    .text.MX_TIM2_Init:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:353    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:438    .text.MX_TIM2_Init:00000050 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:443    .text.MX_UART4_Init:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:449    .text.MX_UART4_Init:00000000 MX_UART4_Init
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:504    .text.MX_UART4_Init:00000028 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:510    .text.MX_UART7_Init:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:516    .text.MX_UART7_Init:00000000 MX_UART7_Init
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:571    .text.MX_UART7_Init:00000028 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:577    .text.SystemClock_Config:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:584    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:742    .text.SystemClock_Config:000000a4 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:748    .rodata.main.str1.4:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:752    .text.main:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:759    .text.main:00000000 main
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:887    .text.main:00000090 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:900    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:907    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:966    .text.HAL_TIM_PeriodElapsedCallback:0000002c $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:973    .rodata.HAL_UART_RxCpltCallback.str1.4:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:980    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:987    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1112   .text.HAL_UART_RxCpltCallback:00000080 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1125   .text.Error_Handler:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1132   .text.Error_Handler:00000000 Error_Handler
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1231   .data.go_to_meas:00000000 go_to_meas
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1237   .data.req_data:00000000 req_data
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1249   .rodata.header:00000000 header
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1163   .bss.AHRS_buff:00000000 AHRS_buff
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1170   .bss.buff:00000000 buff
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1243   .data.ret:00000000 ret
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1224   .bss.time:00000000 time
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1217   .bss.msg_rec_count:00000000 msg_rec_count
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1210   .bss.led_count:00000000 led_count
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1176   .bss.count1:00000000 count1
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1182   .bss.hdma_uart7_rx:00000000 hdma_uart7_rx
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1203   .bss.huart7:00000000 huart7
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1196   .bss.huart4:00000000 huart4
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1189   .bss.htim2:00000000 htim2
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1159   .bss.AHRS_buff:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1166   .bss.buff:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1173   .bss.count1:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1179   .bss.hdma_uart7_rx:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1185   .bss.htim2:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1192   .bss.huart4:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1199   .bss.huart7:00000000 $d
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s 			page 120


C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1206   .bss.led_count:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1213   .bss.msg_rec_count:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1220   .bss.time:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1227   .data.go_to_meas:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1234   .data.req_data:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccwiGBHT.s:1246   .rodata.header:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
LL_TIM_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_Delay
HAL_UART_Transmit
strlen
HAL_UART_Receive_DMA
HAL_TIM_Base_Start_IT
HAL_GPIO_TogglePin
sprintf
